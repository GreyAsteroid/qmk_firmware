   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"rgb_matrix.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.sqrt16,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	sqrt16:
  26              	.LVL0:
  27              	.LFB37:
  28              		.file 1 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 111:./lib/lib8tion/math8.h **** #else
 112:./lib/lib8tion/math8.h **** #error "No implementation for qsub8 available."
 113:./lib/lib8tion/math8.h **** #endif
 114:./lib/lib8tion/math8.h **** }
 115:./lib/lib8tion/math8.h **** 
 116:./lib/lib8tion/math8.h **** /// add one byte to another, with one byte result
 117:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t add8( uint8_t i, uint8_t j)
 118:./lib/lib8tion/math8.h **** {
 119:./lib/lib8tion/math8.h **** #if ADD8_C == 1
 120:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
 121:./lib/lib8tion/math8.h ****     return t;
 122:./lib/lib8tion/math8.h **** #elif ADD8_AVRASM == 1
 123:./lib/lib8tion/math8.h ****     // Add j to i, period.
 124:./lib/lib8tion/math8.h ****     asm volatile( "add %0, %1" : "+a" (i) : "a" (j));
 125:./lib/lib8tion/math8.h ****     return i;
 126:./lib/lib8tion/math8.h **** #else
 127:./lib/lib8tion/math8.h **** #error "No implementation for add8 available."
 128:./lib/lib8tion/math8.h **** #endif
 129:./lib/lib8tion/math8.h **** }
 130:./lib/lib8tion/math8.h **** 
 131:./lib/lib8tion/math8.h **** /// add one byte to another, with one byte result
 132:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t add8to16( uint8_t i, uint16_t j)
 133:./lib/lib8tion/math8.h **** {
 134:./lib/lib8tion/math8.h **** #if ADD8_C == 1
 135:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
 136:./lib/lib8tion/math8.h ****     return t;
 137:./lib/lib8tion/math8.h **** #elif ADD8_AVRASM == 1
 138:./lib/lib8tion/math8.h ****     // Add i(one byte) to j(two bytes)
 139:./lib/lib8tion/math8.h ****     asm volatile( "add %A[j], %[i]              \n\t"
 140:./lib/lib8tion/math8.h ****                   "adc %B[j], __zero_reg__      \n\t"
 141:./lib/lib8tion/math8.h ****                  : [j] "+a" (j)
 142:./lib/lib8tion/math8.h ****                  : [i] "a"  (i)
 143:./lib/lib8tion/math8.h ****                  );
 144:./lib/lib8tion/math8.h ****     return i;
 145:./lib/lib8tion/math8.h **** #else
 146:./lib/lib8tion/math8.h **** #error "No implementation for add8to16 available."
 147:./lib/lib8tion/math8.h **** #endif
 148:./lib/lib8tion/math8.h **** }
 149:./lib/lib8tion/math8.h **** 
 150:./lib/lib8tion/math8.h **** 
 151:./lib/lib8tion/math8.h **** /// subtract one byte from another, 8-bit result
 152:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t sub8( uint8_t i, uint8_t j)
 153:./lib/lib8tion/math8.h **** {
 154:./lib/lib8tion/math8.h **** #if SUB8_C == 1
 155:./lib/lib8tion/math8.h ****     int16_t t = i - j;
 156:./lib/lib8tion/math8.h ****     return t;
 157:./lib/lib8tion/math8.h **** #elif SUB8_AVRASM == 1
 158:./lib/lib8tion/math8.h ****     // Subtract j from i, period.
 159:./lib/lib8tion/math8.h ****     asm volatile( "sub %0, %1" : "+a" (i) : "a" (j));
 160:./lib/lib8tion/math8.h ****     return i;
 161:./lib/lib8tion/math8.h **** #else
 162:./lib/lib8tion/math8.h **** #error "No implementation for sub8 available."
 163:./lib/lib8tion/math8.h **** #endif
 164:./lib/lib8tion/math8.h **** }
 165:./lib/lib8tion/math8.h **** 
 166:./lib/lib8tion/math8.h **** /// Calculate an integer average of two unsigned
 167:./lib/lib8tion/math8.h **** ///       8-bit integer values (uint8_t).
 168:./lib/lib8tion/math8.h **** ///       Fractional results are rounded down, e.g. avg8(20,41) = 30
 169:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t avg8( uint8_t i, uint8_t j)
 170:./lib/lib8tion/math8.h **** {
 171:./lib/lib8tion/math8.h **** #if AVG8_C == 1
 172:./lib/lib8tion/math8.h ****     return (i + j) >> 1;
 173:./lib/lib8tion/math8.h **** #elif AVG8_AVRASM == 1
 174:./lib/lib8tion/math8.h ****     asm volatile(
 175:./lib/lib8tion/math8.h ****          /* First, add j to i, 9th bit overflows into C flag */
 176:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
 177:./lib/lib8tion/math8.h ****          /* Divide by two, moving C flag into high 8th bit */
 178:./lib/lib8tion/math8.h ****          "ror %0        \n\t"
 179:./lib/lib8tion/math8.h ****          : "+a" (i)
 180:./lib/lib8tion/math8.h ****          : "a"  (j) );
 181:./lib/lib8tion/math8.h ****     return i;
 182:./lib/lib8tion/math8.h **** #else
 183:./lib/lib8tion/math8.h **** #error "No implementation for avg8 available."
 184:./lib/lib8tion/math8.h **** #endif
 185:./lib/lib8tion/math8.h **** }
 186:./lib/lib8tion/math8.h **** 
 187:./lib/lib8tion/math8.h **** /// Calculate an integer average of two unsigned
 188:./lib/lib8tion/math8.h **** ///       16-bit integer values (uint16_t).
 189:./lib/lib8tion/math8.h **** ///       Fractional results are rounded down, e.g. avg16(20,41) = 30
 190:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t avg16( uint16_t i, uint16_t j)
 191:./lib/lib8tion/math8.h **** {
 192:./lib/lib8tion/math8.h **** #if AVG16_C == 1
 193:./lib/lib8tion/math8.h ****     return (uint32_t)((uint32_t)(i) + (uint32_t)(j)) >> 1;
 194:./lib/lib8tion/math8.h **** #elif AVG16_AVRASM == 1
 195:./lib/lib8tion/math8.h ****     asm volatile(
 196:./lib/lib8tion/math8.h ****                  /* First, add jLo (heh) to iLo, 9th bit overflows into C flag */
 197:./lib/lib8tion/math8.h ****                  "add %A[i], %A[j]    \n\t"
 198:./lib/lib8tion/math8.h ****                  /* Now, add C + jHi to iHi, 17th bit overflows into C flag */
 199:./lib/lib8tion/math8.h ****                  "adc %B[i], %B[j]    \n\t"
 200:./lib/lib8tion/math8.h ****                  /* Divide iHi by two, moving C flag into high 16th bit, old 9th bit now in C */
 201:./lib/lib8tion/math8.h ****                  "ror %B[i]        \n\t"
 202:./lib/lib8tion/math8.h ****                  /* Divide iLo by two, moving C flag into high 8th bit */
 203:./lib/lib8tion/math8.h ****                  "ror %A[i]        \n\t"
 204:./lib/lib8tion/math8.h ****                  : [i] "+a" (i)
 205:./lib/lib8tion/math8.h ****                  : [j] "a"  (j) );
 206:./lib/lib8tion/math8.h ****     return i;
 207:./lib/lib8tion/math8.h **** #else
 208:./lib/lib8tion/math8.h **** #error "No implementation for avg16 available."
 209:./lib/lib8tion/math8.h **** #endif
 210:./lib/lib8tion/math8.h **** }
 211:./lib/lib8tion/math8.h **** 
 212:./lib/lib8tion/math8.h **** 
 213:./lib/lib8tion/math8.h **** /// Calculate an integer average of two signed 7-bit
 214:./lib/lib8tion/math8.h **** ///       integers (int8_t)
 215:./lib/lib8tion/math8.h **** ///       If the first argument is even, result is rounded down.
 216:./lib/lib8tion/math8.h **** ///       If the first argument is odd, result is result up.
 217:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t avg7( int8_t i, int8_t j)
 218:./lib/lib8tion/math8.h **** {
 219:./lib/lib8tion/math8.h **** #if AVG7_C == 1
 220:./lib/lib8tion/math8.h ****     return ((i + j) >> 1) + (i & 0x1);
 221:./lib/lib8tion/math8.h **** #elif AVG7_AVRASM == 1
 222:./lib/lib8tion/math8.h ****     asm volatile(
 223:./lib/lib8tion/math8.h ****                  "asr %1        \n\t"
 224:./lib/lib8tion/math8.h ****                  "asr %0        \n\t"
 225:./lib/lib8tion/math8.h ****                  "adc %0, %1    \n\t"
 226:./lib/lib8tion/math8.h ****                  : "+a" (i)
 227:./lib/lib8tion/math8.h ****                  : "a"  (j) );
 228:./lib/lib8tion/math8.h ****     return i;
 229:./lib/lib8tion/math8.h **** #else
 230:./lib/lib8tion/math8.h **** #error "No implementation for avg7 available."
 231:./lib/lib8tion/math8.h **** #endif
 232:./lib/lib8tion/math8.h **** }
 233:./lib/lib8tion/math8.h **** 
 234:./lib/lib8tion/math8.h **** /// Calculate an integer average of two signed 15-bit
 235:./lib/lib8tion/math8.h **** ///       integers (int16_t)
 236:./lib/lib8tion/math8.h **** ///       If the first argument is even, result is rounded down.
 237:./lib/lib8tion/math8.h **** ///       If the first argument is odd, result is result up.
 238:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int16_t avg15( int16_t i, int16_t j)
 239:./lib/lib8tion/math8.h **** {
 240:./lib/lib8tion/math8.h **** #if AVG15_C == 1
 241:./lib/lib8tion/math8.h ****     return ((int32_t)((int32_t)(i) + (int32_t)(j)) >> 1) + (i & 0x1);
 242:./lib/lib8tion/math8.h **** #elif AVG15_AVRASM == 1
 243:./lib/lib8tion/math8.h ****     asm volatile(
 244:./lib/lib8tion/math8.h ****                  /* first divide j by 2, throwing away lowest bit */
 245:./lib/lib8tion/math8.h ****                  "asr %B[j]          \n\t"
 246:./lib/lib8tion/math8.h ****                  "ror %A[j]          \n\t"
 247:./lib/lib8tion/math8.h ****                  /* now divide i by 2, with lowest bit going into C */
 248:./lib/lib8tion/math8.h ****                  "asr %B[i]          \n\t"
 249:./lib/lib8tion/math8.h ****                  "ror %A[i]          \n\t"
 250:./lib/lib8tion/math8.h ****                  /* add j + C to i */
 251:./lib/lib8tion/math8.h ****                  "adc %A[i], %A[j]   \n\t"
 252:./lib/lib8tion/math8.h ****                  "adc %B[i], %B[j]   \n\t"
 253:./lib/lib8tion/math8.h ****                  : [i] "+a" (i)
 254:./lib/lib8tion/math8.h ****                  : [j] "a"  (j) );
 255:./lib/lib8tion/math8.h ****     return i;
 256:./lib/lib8tion/math8.h **** #else
 257:./lib/lib8tion/math8.h **** #error "No implementation for avg15 available."
 258:./lib/lib8tion/math8.h **** #endif
 259:./lib/lib8tion/math8.h **** }
 260:./lib/lib8tion/math8.h **** 
 261:./lib/lib8tion/math8.h **** 
 262:./lib/lib8tion/math8.h **** ///       Calculate the remainder of one unsigned 8-bit
 263:./lib/lib8tion/math8.h **** ///       value divided by anoter, aka A % M.
 264:./lib/lib8tion/math8.h **** ///       Implemented by repeated subtraction, which is
 265:./lib/lib8tion/math8.h **** ///       very compact, and very fast if A is 'probably'
 266:./lib/lib8tion/math8.h **** ///       less than M.  If A is a large multiple of M,
 267:./lib/lib8tion/math8.h **** ///       the loop has to execute multiple times.  However,
 268:./lib/lib8tion/math8.h **** ///       even in that case, the loop is only two
 269:./lib/lib8tion/math8.h **** ///       instructions long on AVR, i.e., quick.
 270:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t mod8( uint8_t a, uint8_t m)
 271:./lib/lib8tion/math8.h **** {
 272:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 273:./lib/lib8tion/math8.h ****     asm volatile (
 274:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 275:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 276:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 277:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 278:./lib/lib8tion/math8.h ****                   : [m] "r"  (m)
 279:./lib/lib8tion/math8.h ****                   );
 280:./lib/lib8tion/math8.h **** #else
 281:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 282:./lib/lib8tion/math8.h **** #endif
 283:./lib/lib8tion/math8.h ****     return a;
 284:./lib/lib8tion/math8.h **** }
 285:./lib/lib8tion/math8.h **** 
 286:./lib/lib8tion/math8.h **** ///          Add two numbers, and calculate the modulo
 287:./lib/lib8tion/math8.h **** ///          of the sum and a third number, M.
 288:./lib/lib8tion/math8.h **** ///          In other words, it returns (A+B) % M.
 289:./lib/lib8tion/math8.h **** ///          It is designed as a compact mechanism for
 290:./lib/lib8tion/math8.h **** ///          incrementing a 'mode' switch and wrapping
 291:./lib/lib8tion/math8.h **** ///          around back to 'mode 0' when the switch
 292:./lib/lib8tion/math8.h **** ///          goes past the end of the available range.
 293:./lib/lib8tion/math8.h **** ///          e.g. if you have seven modes, this switches
 294:./lib/lib8tion/math8.h **** ///          to the next one and wraps around if needed:
 295:./lib/lib8tion/math8.h **** ///            mode = addmod8( mode, 1, 7);
 296:./lib/lib8tion/math8.h **** ///LIB8STATIC_ALWAYS_INLINESee 'mod8' for notes on performance.
 297:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t addmod8( uint8_t a, uint8_t b, uint8_t m)
 298:./lib/lib8tion/math8.h **** {
 299:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 300:./lib/lib8tion/math8.h ****     asm volatile (
 301:./lib/lib8tion/math8.h ****                   "       add %[a],%[b]    \n\t"
 302:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 303:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 304:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 305:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 306:./lib/lib8tion/math8.h ****                   : [b] "r"  (b), [m] "r" (m)
 307:./lib/lib8tion/math8.h ****                   );
 308:./lib/lib8tion/math8.h **** #else
 309:./lib/lib8tion/math8.h ****     a += b;
 310:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 311:./lib/lib8tion/math8.h **** #endif
 312:./lib/lib8tion/math8.h ****     return a;
 313:./lib/lib8tion/math8.h **** }
 314:./lib/lib8tion/math8.h **** 
 315:./lib/lib8tion/math8.h **** ///          Subtract two numbers, and calculate the modulo
 316:./lib/lib8tion/math8.h **** ///          of the difference and a third number, M.
 317:./lib/lib8tion/math8.h **** ///          In other words, it returns (A-B) % M.
 318:./lib/lib8tion/math8.h **** ///          It is designed as a compact mechanism for
 319:./lib/lib8tion/math8.h **** ///          incrementing a 'mode' switch and wrapping
 320:./lib/lib8tion/math8.h **** ///          around back to 'mode 0' when the switch
 321:./lib/lib8tion/math8.h **** ///          goes past the end of the available range.
 322:./lib/lib8tion/math8.h **** ///          e.g. if you have seven modes, this switches
 323:./lib/lib8tion/math8.h **** ///          to the next one and wraps around if needed:
 324:./lib/lib8tion/math8.h **** ///            mode = addmod8( mode, 1, 7);
 325:./lib/lib8tion/math8.h **** ///LIB8STATIC_ALWAYS_INLINESee 'mod8' for notes on performance.
 326:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t submod8( uint8_t a, uint8_t b, uint8_t m)
 327:./lib/lib8tion/math8.h **** {
 328:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 329:./lib/lib8tion/math8.h ****     asm volatile (
 330:./lib/lib8tion/math8.h ****                   "       sub %[a],%[b]    \n\t"
 331:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 332:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 333:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 334:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 335:./lib/lib8tion/math8.h ****                   : [b] "r"  (b), [m] "r" (m)
 336:./lib/lib8tion/math8.h ****                   );
 337:./lib/lib8tion/math8.h **** #else
 338:./lib/lib8tion/math8.h ****     a -= b;
 339:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 340:./lib/lib8tion/math8.h **** #endif
 341:./lib/lib8tion/math8.h ****     return a;
 342:./lib/lib8tion/math8.h **** }
 343:./lib/lib8tion/math8.h **** 
 344:./lib/lib8tion/math8.h **** /// 8x8 bit multiplication, with 8 bit result
 345:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t mul8( uint8_t i, uint8_t j)
 346:./lib/lib8tion/math8.h **** {
 347:./lib/lib8tion/math8.h **** #if MUL8_C == 1
 348:./lib/lib8tion/math8.h ****     return ((uint16_t)i * (uint16_t)(j) ) & 0xFF;
 349:./lib/lib8tion/math8.h **** #elif MUL8_AVRASM == 1
 350:./lib/lib8tion/math8.h ****     asm volatile(
 351:./lib/lib8tion/math8.h ****          /* Multiply 8-bit i * 8-bit j, giving 16-bit r1,r0 */
 352:./lib/lib8tion/math8.h ****          "mul %0, %1          \n\t"
 353:./lib/lib8tion/math8.h ****          /* Extract the LOW 8-bits (r0) */
 354:./lib/lib8tion/math8.h ****          "mov %0, r0          \n\t"
 355:./lib/lib8tion/math8.h ****          /* Restore r1 to "0"; it's expected to always be that */
 356:./lib/lib8tion/math8.h ****          "clr __zero_reg__    \n\t"
 357:./lib/lib8tion/math8.h ****          : "+a" (i)
 358:./lib/lib8tion/math8.h ****          : "a"  (j)
 359:./lib/lib8tion/math8.h ****          : "r0", "r1");
 360:./lib/lib8tion/math8.h **** 
 361:./lib/lib8tion/math8.h ****     return i;
 362:./lib/lib8tion/math8.h **** #else
 363:./lib/lib8tion/math8.h **** #error "No implementation for mul8 available."
 364:./lib/lib8tion/math8.h **** #endif
 365:./lib/lib8tion/math8.h **** }
 366:./lib/lib8tion/math8.h **** 
 367:./lib/lib8tion/math8.h **** 
 368:./lib/lib8tion/math8.h **** /// saturating 8x8 bit multiplication, with 8 bit result
 369:./lib/lib8tion/math8.h **** /// @returns the product of i * j, capping at 0xFF
 370:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qmul8( uint8_t i, uint8_t j)
 371:./lib/lib8tion/math8.h **** {
 372:./lib/lib8tion/math8.h **** #if QMUL8_C == 1
 373:./lib/lib8tion/math8.h ****     int p = ((uint16_t)i * (uint16_t)(j) );
 374:./lib/lib8tion/math8.h ****     if( p > 255) p = 255;
 375:./lib/lib8tion/math8.h ****     return p;
 376:./lib/lib8tion/math8.h **** #elif QMUL8_AVRASM == 1
 377:./lib/lib8tion/math8.h ****     asm volatile(
 378:./lib/lib8tion/math8.h ****                  /* Multiply 8-bit i * 8-bit j, giving 16-bit r1,r0 */
 379:./lib/lib8tion/math8.h ****                  "  mul %0, %1          \n\t"
 380:./lib/lib8tion/math8.h ****                  /* If high byte of result is zero, all is well. */
 381:./lib/lib8tion/math8.h ****                  "  tst r1              \n\t"
 382:./lib/lib8tion/math8.h ****                  "  breq Lnospill_%=    \n\t"
 383:./lib/lib8tion/math8.h ****                  /* If high byte of result > 0, saturate low byte to 0xFF */
 384:./lib/lib8tion/math8.h ****                  "  ldi %0,0xFF         \n\t"
 385:./lib/lib8tion/math8.h ****                  "  rjmp Ldone_%=       \n\t"
 386:./lib/lib8tion/math8.h ****                  "Lnospill_%=:          \n\t"
 387:./lib/lib8tion/math8.h ****                  /* Extract the LOW 8-bits (r0) */
 388:./lib/lib8tion/math8.h ****                  "  mov %0, r0          \n\t"
 389:./lib/lib8tion/math8.h ****                  "Ldone_%=:             \n\t"
 390:./lib/lib8tion/math8.h ****                  /* Restore r1 to "0"; it's expected to always be that */
 391:./lib/lib8tion/math8.h ****                  "  clr __zero_reg__    \n\t"
 392:./lib/lib8tion/math8.h ****                  : "+a" (i)
 393:./lib/lib8tion/math8.h ****                  : "a"  (j)
 394:./lib/lib8tion/math8.h ****                  : "r0", "r1");
 395:./lib/lib8tion/math8.h **** 
 396:./lib/lib8tion/math8.h ****     return i;
 397:./lib/lib8tion/math8.h **** #else
 398:./lib/lib8tion/math8.h **** #error "No implementation for qmul8 available."
 399:./lib/lib8tion/math8.h **** #endif
 400:./lib/lib8tion/math8.h **** }
 401:./lib/lib8tion/math8.h **** 
 402:./lib/lib8tion/math8.h **** 
 403:./lib/lib8tion/math8.h **** /// take abs() of a signed 8-bit uint8_t
 404:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t abs8( int8_t i)
 405:./lib/lib8tion/math8.h **** {
 406:./lib/lib8tion/math8.h **** #if ABS8_C == 1
 407:./lib/lib8tion/math8.h ****     if( i < 0) i = -i;
 408:./lib/lib8tion/math8.h ****     return i;
 409:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 410:./lib/lib8tion/math8.h **** 
 411:./lib/lib8tion/math8.h **** 
 412:./lib/lib8tion/math8.h ****     asm volatile(
 413:./lib/lib8tion/math8.h ****          /* First, check the high bit, and prepare to skip if it's clear */
 414:./lib/lib8tion/math8.h ****          "sbrc %0, 7 \n"
 415:./lib/lib8tion/math8.h **** 
 416:./lib/lib8tion/math8.h ****          /* Negate the value */
 417:./lib/lib8tion/math8.h ****          "neg %0     \n"
 418:./lib/lib8tion/math8.h **** 
 419:./lib/lib8tion/math8.h ****          : "+r" (i) : "r" (i) );
 420:./lib/lib8tion/math8.h ****     return i;
 421:./lib/lib8tion/math8.h **** #else
 422:./lib/lib8tion/math8.h **** #error "No implementation for abs8 available."
 423:./lib/lib8tion/math8.h **** #endif
 424:./lib/lib8tion/math8.h **** }
 425:./lib/lib8tion/math8.h **** 
 426:./lib/lib8tion/math8.h **** ///         square root for 16-bit integers
 427:./lib/lib8tion/math8.h **** ///         About three times faster and five times smaller
 428:./lib/lib8tion/math8.h **** ///         than Arduino's general sqrt on AVR.
 429:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t sqrt16(uint16_t x)
 430:./lib/lib8tion/math8.h **** {
  29              		.loc 1 430 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 431:./lib/lib8tion/math8.h ****     if( x <= 1) {
  33              		.loc 1 431 5 view .LVU1
  34              		.loc 1 431 7 is_stmt 0 view .LVU2
  35 0000 0128     		cmp	r0, #1
 430:./lib/lib8tion/math8.h ****     if( x <= 1) {
  36              		.loc 1 430 1 view .LVU3
  37 0002 30B5     		push	{r4, r5, lr}
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42              		.loc 1 431 7 view .LVU4
  43 0004 01D8     		bhi	.L2
  44              	.LVL1:
  45              	.L11:
 432:./lib/lib8tion/math8.h ****         return x;
 433:./lib/lib8tion/math8.h ****     }
 434:./lib/lib8tion/math8.h **** 
 435:./lib/lib8tion/math8.h ****     uint8_t low = 1; // lower bound
 436:./lib/lib8tion/math8.h ****     uint8_t hi, mid;
 437:./lib/lib8tion/math8.h **** 
 438:./lib/lib8tion/math8.h ****     if( x > 7904) {
 439:./lib/lib8tion/math8.h ****         hi = 255;
 440:./lib/lib8tion/math8.h ****     } else {
 441:./lib/lib8tion/math8.h ****         hi = (x >> 5) + 8; // initial estimate for upper bound
 442:./lib/lib8tion/math8.h ****     }
 443:./lib/lib8tion/math8.h **** 
 444:./lib/lib8tion/math8.h ****     do {
 445:./lib/lib8tion/math8.h ****         mid = (low + hi) >> 1;
 446:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
 447:./lib/lib8tion/math8.h ****             hi = mid - 1;
 448:./lib/lib8tion/math8.h ****         } else {
 449:./lib/lib8tion/math8.h ****             if( mid == 255) {
 450:./lib/lib8tion/math8.h ****                 return 255;
 451:./lib/lib8tion/math8.h ****             }
 452:./lib/lib8tion/math8.h ****             low = mid + 1;
 453:./lib/lib8tion/math8.h ****         }
 454:./lib/lib8tion/math8.h ****     } while (hi >= low);
 455:./lib/lib8tion/math8.h **** 
 456:./lib/lib8tion/math8.h ****     return low - 1;
  46              		.loc 1 456 16 view .LVU5
  47 0006 C0B2     		uxtb	r0, r0
  48              	.L3:
 457:./lib/lib8tion/math8.h **** }
  49              		.loc 1 457 1 view .LVU6
  50 0008 30BD     		pop	{r4, r5, pc}
  51              	.LVL2:
  52              	.L2:
 435:./lib/lib8tion/math8.h ****     uint8_t hi, mid;
  53              		.loc 1 435 5 is_stmt 1 view .LVU7
 436:./lib/lib8tion/math8.h **** 
  54              		.loc 1 436 5 view .LVU8
 438:./lib/lib8tion/math8.h ****         hi = 255;
  55              		.loc 1 438 5 view .LVU9
 438:./lib/lib8tion/math8.h ****         hi = 255;
  56              		.loc 1 438 7 is_stmt 0 view .LVU10
  57 000a B0F5F75F 		cmp	r0, #7904
 441:./lib/lib8tion/math8.h ****     }
  58              		.loc 1 441 9 is_stmt 1 view .LVU11
 441:./lib/lib8tion/math8.h ****     }
  59              		.loc 1 441 23 is_stmt 0 view .LVU12
  60 000e 9DBF     		ittte	ls
  61 0010 4209     		lsrls	r2, r0, #5
 441:./lib/lib8tion/math8.h ****     }
  62              		.loc 1 441 12 view .LVU13
  63 0012 0832     		addls	r2, r2, #8
  64 0014 D2B2     		uxtbls	r2, r2
  65              	.LVL3:
 439:./lib/lib8tion/math8.h ****     } else {
  66              		.loc 1 439 12 view .LVU14
  67 0016 FF22     		movhi	r2, #255
  68              	.LVL4:
 439:./lib/lib8tion/math8.h ****     } else {
  69              		.loc 1 439 12 view .LVU15
  70 0018 0121     		movs	r1, #1
  71              	.LVL5:
  72              	.L7:
 444:./lib/lib8tion/math8.h ****         mid = (low + hi) >> 1;
  73              		.loc 1 444 5 is_stmt 1 view .LVU16
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  74              		.loc 1 445 9 view .LVU17
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  75              		.loc 1 445 20 is_stmt 0 view .LVU18
  76 001a 8B18     		adds	r3, r1, r2
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  77              		.loc 1 445 26 view .LVU19
  78 001c 5B10     		asrs	r3, r3, #1
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  79              		.loc 1 446 13 view .LVU20
  80 001e 03FB03F5 		mul	r5, r3, r3
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  81              		.loc 1 446 12 view .LVU21
  82 0022 ADB2     		uxth	r5, r5
  83 0024 8542     		cmp	r5, r0
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  84              		.loc 1 445 13 view .LVU22
  85 0026 DCB2     		uxtb	r4, r3
  86              	.LVL6:
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  87              		.loc 1 446 9 is_stmt 1 view .LVU23
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  88              		.loc 1 446 12 is_stmt 0 view .LVU24
  89 0028 05D9     		bls	.L5
 447:./lib/lib8tion/math8.h ****         } else {
  90              		.loc 1 447 13 is_stmt 1 view .LVU25
 447:./lib/lib8tion/math8.h ****         } else {
  91              		.loc 1 447 16 is_stmt 0 view .LVU26
  92 002a 621E     		subs	r2, r4, #1
  93              	.LVL7:
 447:./lib/lib8tion/math8.h ****         } else {
  94              		.loc 1 447 16 view .LVU27
  95 002c D2B2     		uxtb	r2, r2
  96              	.LVL8:
  97              	.L6:
 454:./lib/lib8tion/math8.h **** 
  98              		.loc 1 454 5 view .LVU28
  99 002e 9142     		cmp	r1, r2
 100 0030 F3D9     		bls	.L7
 456:./lib/lib8tion/math8.h **** }
 101              		.loc 1 456 5 is_stmt 1 view .LVU29
 456:./lib/lib8tion/math8.h **** }
 102              		.loc 1 456 16 is_stmt 0 view .LVU30
 103 0032 481E     		subs	r0, r1, #1
 104              	.LVL9:
 456:./lib/lib8tion/math8.h **** }
 105              		.loc 1 456 16 view .LVU31
 106 0034 E7E7     		b	.L11
 107              	.LVL10:
 108              	.L5:
 449:./lib/lib8tion/math8.h ****                 return 255;
 109              		.loc 1 449 13 is_stmt 1 view .LVU32
 449:./lib/lib8tion/math8.h ****                 return 255;
 110              		.loc 1 449 15 is_stmt 0 view .LVU33
 111 0036 FF2B     		cmp	r3, #255
 112 0038 02D0     		beq	.L9
 452:./lib/lib8tion/math8.h ****         }
 113              		.loc 1 452 13 is_stmt 1 view .LVU34
 452:./lib/lib8tion/math8.h ****         }
 114              		.loc 1 452 17 is_stmt 0 view .LVU35
 115 003a 611C     		adds	r1, r4, #1
 116              	.LVL11:
 452:./lib/lib8tion/math8.h ****         }
 117              		.loc 1 452 17 view .LVU36
 118 003c C9B2     		uxtb	r1, r1
 119              	.LVL12:
 452:./lib/lib8tion/math8.h ****         }
 120              		.loc 1 452 17 view .LVU37
 121 003e F6E7     		b	.L6
 122              	.L9:
 450:./lib/lib8tion/math8.h ****             }
 123              		.loc 1 450 24 view .LVU38
 124 0040 1846     		mov	r0, r3
 125              	.LVL13:
 450:./lib/lib8tion/math8.h ****             }
 126              		.loc 1 450 24 view .LVU39
 127 0042 E1E7     		b	.L3
 128              		.cfi_endproc
 129              	.LFE37:
 131              		.section	.text.sin8_C,"ax",%progbits
 132              		.align	1
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	sin8_C:
 139              	.LVL14:
 140              	.LFB52:
 141              		.file 2 "./lib/lib8tion/trig8.h"
   1:./lib/lib8tion/trig8.h **** #ifndef __INC_LIB8TION_TRIG_H
   2:./lib/lib8tion/trig8.h **** #define __INC_LIB8TION_TRIG_H
   3:./lib/lib8tion/trig8.h **** 
   4:./lib/lib8tion/trig8.h **** ///@ingroup lib8tion
   5:./lib/lib8tion/trig8.h **** 
   6:./lib/lib8tion/trig8.h **** ///@defgroup Trig Fast trig functions
   7:./lib/lib8tion/trig8.h **** /// Fast 8 and 16-bit approximations of sin(x) and cos(x).
   8:./lib/lib8tion/trig8.h **** ///        Don't use these approximations for calculating the
   9:./lib/lib8tion/trig8.h **** ///        trajectory of a rocket to Mars, but they're great
  10:./lib/lib8tion/trig8.h **** ///        for art projects and LED displays.
  11:./lib/lib8tion/trig8.h **** ///
  12:./lib/lib8tion/trig8.h **** ///        On Arduino/AVR, the 16-bit approximation is more than
  13:./lib/lib8tion/trig8.h **** ///        10X faster than floating point sin(x) and cos(x), while
  14:./lib/lib8tion/trig8.h **** /// the 8-bit approximation is more than 20X faster.
  15:./lib/lib8tion/trig8.h **** ///@{
  16:./lib/lib8tion/trig8.h **** 
  17:./lib/lib8tion/trig8.h **** #if defined(__AVR__)
  18:./lib/lib8tion/trig8.h **** #define sin16 sin16_avr
  19:./lib/lib8tion/trig8.h **** #else
  20:./lib/lib8tion/trig8.h **** #define sin16 sin16_C
  21:./lib/lib8tion/trig8.h **** #endif
  22:./lib/lib8tion/trig8.h **** 
  23:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of sin(x). This approximation never varies more than
  24:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
  25:./lib/lib8tion/trig8.h **** ///
  26:./lib/lib8tion/trig8.h **** ///     float s = sin(x) * 32767.0;
  27:./lib/lib8tion/trig8.h **** ///
  28:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
  29:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
  30:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t sin16_avr( uint16_t theta )
  31:./lib/lib8tion/trig8.h **** {
  32:./lib/lib8tion/trig8.h ****     static const uint8_t data[] =
  33:./lib/lib8tion/trig8.h ****     { 0,         0,         49, 0, 6393%256,   6393/256, 48, 0,
  34:./lib/lib8tion/trig8.h ****       12539%256, 12539/256, 44, 0, 18204%256, 18204/256, 38, 0,
  35:./lib/lib8tion/trig8.h ****       23170%256, 23170/256, 31, 0, 27245%256, 27245/256, 23, 0,
  36:./lib/lib8tion/trig8.h ****       30273%256, 30273/256, 14, 0, 32137%256, 32137/256,  4 /*,0*/ };
  37:./lib/lib8tion/trig8.h **** 
  38:./lib/lib8tion/trig8.h ****     uint16_t offset = (theta & 0x3FFF);
  39:./lib/lib8tion/trig8.h **** 
  40:./lib/lib8tion/trig8.h ****     // AVR doesn't have a multi-bit shift instruction,
  41:./lib/lib8tion/trig8.h ****     // so if we say "offset >>= 3", gcc makes a tiny loop.
  42:./lib/lib8tion/trig8.h ****     // Inserting empty volatile statements between each
  43:./lib/lib8tion/trig8.h ****     // bit shift forces gcc to unroll the loop.
  44:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..8191
  45:./lib/lib8tion/trig8.h ****     asm volatile("");
  46:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..4095
  47:./lib/lib8tion/trig8.h ****     asm volatile("");
  48:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..2047
  49:./lib/lib8tion/trig8.h **** 
  50:./lib/lib8tion/trig8.h ****     if( theta & 0x4000 ) offset = 2047 - offset;
  51:./lib/lib8tion/trig8.h **** 
  52:./lib/lib8tion/trig8.h ****     uint8_t sectionX4;
  53:./lib/lib8tion/trig8.h ****     sectionX4 = offset / 256;
  54:./lib/lib8tion/trig8.h ****     sectionX4 *= 4;
  55:./lib/lib8tion/trig8.h **** 
  56:./lib/lib8tion/trig8.h ****     uint8_t m;
  57:./lib/lib8tion/trig8.h **** 
  58:./lib/lib8tion/trig8.h ****     union {
  59:./lib/lib8tion/trig8.h ****         uint16_t b;
  60:./lib/lib8tion/trig8.h ****         struct {
  61:./lib/lib8tion/trig8.h ****             uint8_t blo;
  62:./lib/lib8tion/trig8.h ****             uint8_t bhi;
  63:./lib/lib8tion/trig8.h ****         };
  64:./lib/lib8tion/trig8.h ****     } u;
  65:./lib/lib8tion/trig8.h **** 
  66:./lib/lib8tion/trig8.h ****     //in effect u.b = blo + (256 * bhi);
  67:./lib/lib8tion/trig8.h ****     u.blo = data[ sectionX4 ];
  68:./lib/lib8tion/trig8.h ****     u.bhi = data[ sectionX4 + 1];
  69:./lib/lib8tion/trig8.h ****     m     = data[ sectionX4 + 2];
  70:./lib/lib8tion/trig8.h **** 
  71:./lib/lib8tion/trig8.h ****     uint8_t secoffset8 = (uint8_t)(offset) / 2;
  72:./lib/lib8tion/trig8.h **** 
  73:./lib/lib8tion/trig8.h ****     uint16_t mx = m * secoffset8;
  74:./lib/lib8tion/trig8.h **** 
  75:./lib/lib8tion/trig8.h ****     int16_t  y  = mx + u.b;
  76:./lib/lib8tion/trig8.h ****     if( theta & 0x8000 ) y = -y;
  77:./lib/lib8tion/trig8.h **** 
  78:./lib/lib8tion/trig8.h ****     return y;
  79:./lib/lib8tion/trig8.h **** }
  80:./lib/lib8tion/trig8.h **** 
  81:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of sin(x). This approximation never varies more than
  82:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
  83:./lib/lib8tion/trig8.h **** ///
  84:./lib/lib8tion/trig8.h **** ///     float s = sin(x) * 32767.0;
  85:./lib/lib8tion/trig8.h **** ///
  86:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
  87:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
  88:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t sin16_C( uint16_t theta )
  89:./lib/lib8tion/trig8.h **** {
  90:./lib/lib8tion/trig8.h ****     static const uint16_t base[] =
  91:./lib/lib8tion/trig8.h ****     { 0, 6393, 12539, 18204, 23170, 27245, 30273, 32137 };
  92:./lib/lib8tion/trig8.h ****     static const uint8_t slope[] =
  93:./lib/lib8tion/trig8.h ****     { 49, 48, 44, 38, 31, 23, 14, 4 };
  94:./lib/lib8tion/trig8.h **** 
  95:./lib/lib8tion/trig8.h ****     uint16_t offset = (theta & 0x3FFF) >> 3; // 0..2047
  96:./lib/lib8tion/trig8.h ****     if( theta & 0x4000 ) offset = 2047 - offset;
  97:./lib/lib8tion/trig8.h **** 
  98:./lib/lib8tion/trig8.h ****     uint8_t section = offset / 256; // 0..7
  99:./lib/lib8tion/trig8.h ****     uint16_t b   = base[section];
 100:./lib/lib8tion/trig8.h ****     uint8_t  m   = slope[section];
 101:./lib/lib8tion/trig8.h **** 
 102:./lib/lib8tion/trig8.h ****     uint8_t secoffset8 = (uint8_t)(offset) / 2;
 103:./lib/lib8tion/trig8.h **** 
 104:./lib/lib8tion/trig8.h ****     uint16_t mx = m * secoffset8;
 105:./lib/lib8tion/trig8.h ****     int16_t  y  = mx + b;
 106:./lib/lib8tion/trig8.h **** 
 107:./lib/lib8tion/trig8.h ****     if( theta & 0x8000 ) y = -y;
 108:./lib/lib8tion/trig8.h **** 
 109:./lib/lib8tion/trig8.h ****     return y;
 110:./lib/lib8tion/trig8.h **** }
 111:./lib/lib8tion/trig8.h **** 
 112:./lib/lib8tion/trig8.h **** 
 113:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of cos(x). This approximation never varies more than
 114:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
 115:./lib/lib8tion/trig8.h **** ///
 116:./lib/lib8tion/trig8.h **** ///     float s = cos(x) * 32767.0;
 117:./lib/lib8tion/trig8.h **** ///
 118:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
 119:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
 120:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t cos16( uint16_t theta)
 121:./lib/lib8tion/trig8.h **** {
 122:./lib/lib8tion/trig8.h ****     return sin16( theta + 16384);
 123:./lib/lib8tion/trig8.h **** }
 124:./lib/lib8tion/trig8.h **** 
 125:./lib/lib8tion/trig8.h **** ///////////////////////////////////////////////////////////////////////
 126:./lib/lib8tion/trig8.h **** 
 127:./lib/lib8tion/trig8.h **** // sin8 & cos8
 128:./lib/lib8tion/trig8.h **** //        Fast 8-bit approximations of sin(x) & cos(x).
 129:./lib/lib8tion/trig8.h **** //        Input angle is an unsigned int from 0-255.
 130:./lib/lib8tion/trig8.h **** //        Output is an unsigned int from 0 to 255.
 131:./lib/lib8tion/trig8.h **** //
 132:./lib/lib8tion/trig8.h **** //        This approximation can vary to to 2%
 133:./lib/lib8tion/trig8.h **** //        from the floating point value you'd get by doing
 134:./lib/lib8tion/trig8.h **** //          float s = (sin( x ) * 128.0) + 128;
 135:./lib/lib8tion/trig8.h **** //
 136:./lib/lib8tion/trig8.h **** //        Don't use this approximation for calculating the
 137:./lib/lib8tion/trig8.h **** //        "real" trigonometric calculations, but it's great
 138:./lib/lib8tion/trig8.h **** //        for art projects and LED displays.
 139:./lib/lib8tion/trig8.h **** //
 140:./lib/lib8tion/trig8.h **** //        On Arduino/AVR, this approximation is more than
 141:./lib/lib8tion/trig8.h **** //        20X faster than floating point sin(x) and cos(x)
 142:./lib/lib8tion/trig8.h **** 
 143:./lib/lib8tion/trig8.h **** #if defined(__AVR__) && !defined(LIB8_ATTINY)
 144:./lib/lib8tion/trig8.h **** #define sin8 sin8_avr
 145:./lib/lib8tion/trig8.h **** #else
 146:./lib/lib8tion/trig8.h **** #define sin8 sin8_C
 147:./lib/lib8tion/trig8.h **** #endif
 148:./lib/lib8tion/trig8.h **** 
 149:./lib/lib8tion/trig8.h **** 
 150:./lib/lib8tion/trig8.h **** static const uint8_t b_m16_interleave[8] = { 0, 49, 49, 41, 90, 27, 117, 10 };
 151:./lib/lib8tion/trig8.h **** 
 152:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of sin(x). This approximation never varies more than
 153:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 154:./lib/lib8tion/trig8.h **** ///
 155:./lib/lib8tion/trig8.h **** ///     float s = (sin(x) * 128.0) + 128;
 156:./lib/lib8tion/trig8.h **** ///
 157:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 158:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 159:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t  sin8_avr( uint8_t theta)
 160:./lib/lib8tion/trig8.h **** {
 161:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 162:./lib/lib8tion/trig8.h **** 
 163:./lib/lib8tion/trig8.h ****     asm volatile(
 164:./lib/lib8tion/trig8.h ****                  "sbrc %[theta],6         \n\t"
 165:./lib/lib8tion/trig8.h ****                  "com  %[offset]           \n\t"
 166:./lib/lib8tion/trig8.h ****                  : [theta] "+r" (theta), [offset] "+r" (offset)
 167:./lib/lib8tion/trig8.h ****                  );
 168:./lib/lib8tion/trig8.h **** 
 169:./lib/lib8tion/trig8.h ****     offset &= 0x3F; // 0..63
 170:./lib/lib8tion/trig8.h **** 
 171:./lib/lib8tion/trig8.h ****     uint8_t secoffset  = offset & 0x0F; // 0..15
 172:./lib/lib8tion/trig8.h ****     if( theta & 0x40) secoffset++;
 173:./lib/lib8tion/trig8.h **** 
 174:./lib/lib8tion/trig8.h ****     uint8_t m16; uint8_t b;
 175:./lib/lib8tion/trig8.h **** 
 176:./lib/lib8tion/trig8.h ****     uint8_t section = offset >> 4; // 0..3
 177:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 178:./lib/lib8tion/trig8.h **** 
 179:./lib/lib8tion/trig8.h ****     const uint8_t* p = b_m16_interleave;
 180:./lib/lib8tion/trig8.h ****     p += s2;
 181:./lib/lib8tion/trig8.h ****     b   = *p;
 182:./lib/lib8tion/trig8.h ****     p++;
 183:./lib/lib8tion/trig8.h ****     m16 = *p;
 184:./lib/lib8tion/trig8.h **** 
 185:./lib/lib8tion/trig8.h ****     uint8_t mx;
 186:./lib/lib8tion/trig8.h ****     uint8_t xr1;
 187:./lib/lib8tion/trig8.h ****     asm volatile(
 188:./lib/lib8tion/trig8.h ****                  "mul %[m16],%[secoffset]   \n\t"
 189:./lib/lib8tion/trig8.h ****                  "mov %[mx],r0              \n\t"
 190:./lib/lib8tion/trig8.h ****                  "mov %[xr1],r1             \n\t"
 191:./lib/lib8tion/trig8.h ****                  "eor  r1, r1               \n\t"
 192:./lib/lib8tion/trig8.h ****                  "swap %[mx]                \n\t"
 193:./lib/lib8tion/trig8.h ****                  "andi %[mx],0x0F           \n\t"
 194:./lib/lib8tion/trig8.h ****                  "swap %[xr1]               \n\t"
 195:./lib/lib8tion/trig8.h ****                  "andi %[xr1], 0xF0         \n\t"
 196:./lib/lib8tion/trig8.h ****                  "or   %[mx], %[xr1]        \n\t"
 197:./lib/lib8tion/trig8.h ****                  : [mx] "=d" (mx), [xr1] "=d" (xr1)
 198:./lib/lib8tion/trig8.h ****                  : [m16] "d" (m16), [secoffset] "d" (secoffset)
 199:./lib/lib8tion/trig8.h ****                  );
 200:./lib/lib8tion/trig8.h **** 
 201:./lib/lib8tion/trig8.h ****     int8_t y = mx + b;
 202:./lib/lib8tion/trig8.h ****     if( theta & 0x80 ) y = -y;
 203:./lib/lib8tion/trig8.h **** 
 204:./lib/lib8tion/trig8.h ****     y += 128;
 205:./lib/lib8tion/trig8.h **** 
 206:./lib/lib8tion/trig8.h ****     return y;
 207:./lib/lib8tion/trig8.h **** }
 208:./lib/lib8tion/trig8.h **** 
 209:./lib/lib8tion/trig8.h **** 
 210:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of sin(x). This approximation never varies more than
 211:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 212:./lib/lib8tion/trig8.h **** ///
 213:./lib/lib8tion/trig8.h **** ///     float s = (sin(x) * 128.0) + 128;
 214:./lib/lib8tion/trig8.h **** ///
 215:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 216:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 217:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t sin8_C( uint8_t theta)
 218:./lib/lib8tion/trig8.h **** {
 142              		.loc 2 218 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 219:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 146              		.loc 2 219 5 view .LVU41
 220:./lib/lib8tion/trig8.h ****     if( theta & 0x40 ) {
 147              		.loc 2 220 5 view .LVU42
 148              		.loc 2 220 7 is_stmt 0 view .LVU43
 149 0000 10F04002 		ands	r2, r0, #64
 221:./lib/lib8tion/trig8.h ****         offset = (uint8_t)255 - offset;
 150              		.loc 2 221 9 is_stmt 1 view .LVU44
 151              		.loc 2 221 16 is_stmt 0 view .LVU45
 152 0004 1ABF     		itte	ne
 153 0006 C343     		mvnne	r3, r0
 154 0008 DBB2     		uxtbne	r3, r3
 155              	.LVL15:
 156              		.loc 2 221 16 view .LVU46
 157 000a 0346     		moveq	r3, r0
 158              	.LVL16:
 222:./lib/lib8tion/trig8.h ****     }
 223:./lib/lib8tion/trig8.h ****     offset &= 0x3F; // 0..63
 159              		.loc 2 223 5 is_stmt 1 view .LVU47
 224:./lib/lib8tion/trig8.h **** 
 225:./lib/lib8tion/trig8.h ****     uint8_t secoffset  = offset & 0x0F; // 0..15
 160              		.loc 2 225 5 view .LVU48
 218:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 161              		.loc 2 218 1 is_stmt 0 view .LVU49
 162 000c 10B5     		push	{r4, lr}
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 4, -8
 165              		.cfi_offset 14, -4
 166              		.loc 2 225 13 view .LVU50
 167 000e 03F00F01 		and	r1, r3, #15
 168              	.LVL17:
 226:./lib/lib8tion/trig8.h ****     if( theta & 0x40) secoffset++;
 169              		.loc 2 226 5 is_stmt 1 view .LVU51
 170              		.loc 2 226 7 is_stmt 0 view .LVU52
 171 0012 02B1     		cbz	r2, .L14
 172              		.loc 2 226 23 is_stmt 1 discriminator 1 view .LVU53
 173              		.loc 2 226 32 is_stmt 0 discriminator 1 view .LVU54
 174 0014 0131     		adds	r1, r1, #1
 175              	.LVL18:
 176              	.L14:
 227:./lib/lib8tion/trig8.h **** 
 228:./lib/lib8tion/trig8.h ****     uint8_t section = offset >> 4; // 0..3
 177              		.loc 2 228 5 is_stmt 1 view .LVU55
 229:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 178              		.loc 2 229 5 view .LVU56
 230:./lib/lib8tion/trig8.h ****     const uint8_t* p = b_m16_interleave;
 179              		.loc 2 230 5 view .LVU57
 231:./lib/lib8tion/trig8.h ****     p += s2;
 180              		.loc 2 231 5 view .LVU58
 181              		.loc 2 231 7 is_stmt 0 view .LVU59
 182 0016 094C     		ldr	r4, .L20
 228:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 183              		.loc 2 228 13 view .LVU60
 184 0018 C3F30113 		ubfx	r3, r3, #4, #2
 185              	.LVL19:
 186              		.loc 2 231 7 view .LVU61
 187 001c 5B00     		lsls	r3, r3, #1
 188 001e E218     		adds	r2, r4, r3
 189              	.LVL20:
 232:./lib/lib8tion/trig8.h ****     uint8_t b   =  *p;
 190              		.loc 2 232 5 is_stmt 1 view .LVU62
 233:./lib/lib8tion/trig8.h ****     p++;
 191              		.loc 2 233 5 view .LVU63
 234:./lib/lib8tion/trig8.h ****     uint8_t m16 =  *p;
 192              		.loc 2 234 5 view .LVU64
 235:./lib/lib8tion/trig8.h **** 
 236:./lib/lib8tion/trig8.h ****     uint8_t mx = (m16 * secoffset) >> 4;
 193              		.loc 2 236 5 view .LVU65
 237:./lib/lib8tion/trig8.h **** 
 238:./lib/lib8tion/trig8.h ****     int8_t y = mx + b;
 194              		.loc 2 238 5 view .LVU66
 195              		.loc 2 238 19 is_stmt 0 view .LVU67
 196 0020 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 236:./lib/lib8tion/trig8.h **** 
 197              		.loc 2 236 23 view .LVU68
 198 0022 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 199              	.LVL21:
 236:./lib/lib8tion/trig8.h **** 
 200              		.loc 2 236 23 view .LVU69
 201 0024 12FB01F2 		smulbb	r2, r2, r1
 202              	.LVL22:
 203              		.loc 2 238 19 view .LVU70
 204 0028 03EB2213 		add	r3, r3, r2, asr #4
 205              	.LVL23:
 206              		.loc 2 238 19 view .LVU71
 207 002c DBB2     		uxtb	r3, r3
 208              	.LVL24:
 239:./lib/lib8tion/trig8.h ****     if( theta & 0x80 ) y = -y;
 209              		.loc 2 239 5 is_stmt 1 view .LVU72
 210              		.loc 2 239 7 is_stmt 0 view .LVU73
 211 002e 0206     		lsls	r2, r0, #24
 212              		.loc 2 239 24 is_stmt 1 view .LVU74
 213              		.loc 2 239 26 is_stmt 0 view .LVU75
 214 0030 44BF     		itt	mi
 215 0032 5B42     		rsbmi	r3, r3, #0
 216              	.LVL25:
 217              		.loc 2 239 26 view .LVU76
 218 0034 DBB2     		uxtbmi	r3, r3
 219              	.LVL26:
 240:./lib/lib8tion/trig8.h **** 
 241:./lib/lib8tion/trig8.h ****     y += 128;
 220              		.loc 2 241 5 is_stmt 1 view .LVU77
 242:./lib/lib8tion/trig8.h **** 
 243:./lib/lib8tion/trig8.h ****     return y;
 221              		.loc 2 243 5 view .LVU78
 244:./lib/lib8tion/trig8.h **** }
 222              		.loc 2 244 1 is_stmt 0 view .LVU79
 223 0036 83F08000 		eor	r0, r3, #128
 224              	.LVL27:
 225              		.loc 2 244 1 view .LVU80
 226 003a 10BD     		pop	{r4, pc}
 227              	.L21:
 228              		.loc 2 244 1 view .LVU81
 229              		.align	2
 230              	.L20:
 231 003c 00000000 		.word	.LANCHOR0
 232              		.cfi_endproc
 233              	.LFE52:
 235              		.section	.text.BAND_SAT_math,"ax",%progbits
 236              		.align	1
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv4-sp-d16
 242              	BAND_SAT_math:
 243              	.LVL28:
 244              	.LFB91:
 245              		.file 3 "quantum/rgb_matrix_animations/colorband_sat_anim.h"
   1:quantum/rgb_matrix_animations/colorband_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SAT
   2:quantum/rgb_matrix_animations/colorband_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_SAT)
   3:quantum/rgb_matrix_animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_sat_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_sat_anim.h **** static HSV BAND_SAT_math(HSV hsv, uint8_t i, uint8_t time) {
 246              		.loc 3 5 60 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 16
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251              		.loc 3 5 60 is_stmt 0 view .LVU83
 252 0000 84B0     		sub	sp, sp, #16
 253              		.cfi_def_cfa_offset 16
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     int16_t s = hsv.s - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 254              		.loc 3 6 29 view .LVU84
 255 0002 2C31     		adds	r1, r1, #44
 256              	.LVL29:
 257              	.LBB114:
 258              	.LBB115:
 259              		.file 4 "./lib/lib8tion/scale8.h"
   1:./lib/lib8tion/scale8.h **** #ifndef __INC_LIB8TION_SCALE_H
   2:./lib/lib8tion/scale8.h **** #define __INC_LIB8TION_SCALE_H
   3:./lib/lib8tion/scale8.h **** 
   4:./lib/lib8tion/scale8.h **** ///@ingroup lib8tion
   5:./lib/lib8tion/scale8.h **** 
   6:./lib/lib8tion/scale8.h **** ///@defgroup Scaling Scaling functions
   7:./lib/lib8tion/scale8.h **** /// Fast, efficient 8-bit scaling functions specifically
   8:./lib/lib8tion/scale8.h **** /// designed for high-performance LED programming.
   9:./lib/lib8tion/scale8.h **** ///
  10:./lib/lib8tion/scale8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  11:./lib/lib8tion/scale8.h **** /// implementations provided, using these functions often
  12:./lib/lib8tion/scale8.h **** /// results in smaller and faster code than the equivalent
  13:./lib/lib8tion/scale8.h **** /// program using plain "C" arithmetic and logic.
  14:./lib/lib8tion/scale8.h **** ///@{
  15:./lib/lib8tion/scale8.h **** 
  16:./lib/lib8tion/scale8.h **** ///  scale one byte by a second one, which is treated as
  17:./lib/lib8tion/scale8.h **** ///  the numerator of a fraction whose denominator is 256
  18:./lib/lib8tion/scale8.h **** ///  In other words, it computes i * (scale / 256)
  19:./lib/lib8tion/scale8.h **** ///  4 clocks AVR with MUL, 2 clocks ARM
  20:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8( uint8_t i, fract8 scale)
  21:./lib/lib8tion/scale8.h **** {
  22:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1
  23:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  24:./lib/lib8tion/scale8.h ****     return (((uint16_t)i) * (1+(uint16_t)(scale))) >> 8;
  25:./lib/lib8tion/scale8.h **** #else
  26:./lib/lib8tion/scale8.h ****     return ((uint16_t)i * (uint16_t)(scale) ) >> 8;
 260              		.loc 4 26 25 view .LVU85
 261 0004 134B     		ldr	r3, .L23
 262              	.LBE115:
 263              	.LBE114:
   5:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     int16_t s = hsv.s - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 264              		.loc 3 5 60 view .LVU86
 265 0006 0190     		str	r0, [sp, #4]
 266              	.LBB118:
 267              	.LBB116:
 268              		.loc 4 26 25 view .LVU87
 269 0008 13F81130 		ldrb	r3, [r3, r1, lsl #1]	@ zero_extendqisi2
 270 000c E421     		movs	r1, #228
 271 000e 13FB01F3 		smulbb	r3, r3, r1
 272              	.LBE116:
 273              	.LBE118:
 274              		.loc 3 6 66 view .LVU88
 275 0012 C2EB1323 		rsb	r3, r2, r3, lsr #8
 276              		.loc 3 6 71 view .LVU89
 277 0016 1C33     		adds	r3, r3, #28
 278              		.loc 3 6 25 view .LVU90
 279 0018 002B     		cmp	r3, #0
 280 001a C0F30720 		ubfx	r0, r0, #8, #8
 281              	.LVL30:
 282              		.loc 3 6 5 is_stmt 1 view .LVU91
 283              	.LBB119:
 284              	.LBI114:
  20:./lib/lib8tion/scale8.h **** {
 285              		.loc 4 20 34 view .LVU92
 286              	.LBB117:
 287              		.loc 4 26 5 view .LVU93
 288              		.loc 4 26 5 is_stmt 0 view .LVU94
 289              	.LBE117:
 290              	.LBE119:
   7:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 291              		.loc 3 7 5 is_stmt 1 view .LVU95
 292              	.LBB120:
 293              	.LBI120:
  20:./lib/lib8tion/scale8.h **** {
 294              		.loc 4 20 34 view .LVU96
 295              	.LBB121:
 296              		.loc 4 26 5 view .LVU97
 297              		.loc 4 26 5 is_stmt 0 view .LVU98
 298              	.LBE121:
 299              	.LBE120:
   8:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     return hsv;
 300              		.loc 3 8 5 is_stmt 1 view .LVU99
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 301              		.loc 3 6 25 is_stmt 0 view .LVU100
 302 001e B8BF     		it	lt
 303 0020 5B42     		rsblt	r3, r3, #0
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 304              		.loc 3 6 23 view .LVU101
 305 0022 A0EBC303 		sub	r3, r0, r3, lsl #3
   7:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 306              		.loc 3 7 34 view .LVU102
 307 0026 1BB2     		sxth	r3, r3
 308 0028 23EAE373 		bic	r3, r3, r3, asr #31
 309              	.LBB123:
 310              	.LBB122:
 311              		.loc 4 26 25 view .LVU103
 312 002c 13FB00F3 		smulbb	r3, r3, r0
 313              		.loc 4 26 47 view .LVU104
 314 0030 1B12     		asrs	r3, r3, #8
 315 0032 8DF80530 		strb	r3, [sp, #5]
 316              	.LBE122:
 317              	.LBE123:
 318              		.loc 3 8 12 view .LVU105
 319 0036 019B     		ldr	r3, [sp, #4]
 320 0038 0020     		movs	r0, #0
 321              		.loc 3 8 12 view .LVU106
 322 003a DAB2     		uxtb	r2, r3
 323              	.LVL31:
 324              		.loc 3 8 12 view .LVU107
 325 003c 62F30700 		bfi	r0, r2, #0, #8
 326 0040 C3F30722 		ubfx	r2, r3, #8, #8
 327 0044 62F30F20 		bfi	r0, r2, #8, #8
 328 0048 C3F30743 		ubfx	r3, r3, #16, #8
 329 004c 63F31740 		bfi	r0, r3, #16, #8
   9:quantum/rgb_matrix_animations/colorband_sat_anim.h **** }
 330              		.loc 3 9 1 view .LVU108
 331 0050 04B0     		add	sp, sp, #16
 332              		.cfi_def_cfa_offset 0
 333              		@ sp needed
 334 0052 7047     		bx	lr
 335              	.L24:
 336              		.align	2
 337              	.L23:
 338 0054 00000000 		.word	g_led_config
 339              		.cfi_endproc
 340              	.LFE91:
 342              		.section	.text.BAND_VAL_math,"ax",%progbits
 343              		.align	1
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	BAND_VAL_math:
 350              	.LVL32:
 351              	.LFB93:
 352              		.file 5 "quantum/rgb_matrix_animations/colorband_val_anim.h"
   1:quantum/rgb_matrix_animations/colorband_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_VAL
   2:quantum/rgb_matrix_animations/colorband_val_anim.h **** RGB_MATRIX_EFFECT(BAND_VAL)
   3:quantum/rgb_matrix_animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_val_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_val_anim.h **** static HSV BAND_VAL_math(HSV hsv, uint8_t i, uint8_t time) {
 353              		.loc 5 5 60 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 16
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 358              		.loc 5 5 60 is_stmt 0 view .LVU110
 359 0000 84B0     		sub	sp, sp, #16
 360              		.cfi_def_cfa_offset 16
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     int16_t v = hsv.v - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 361              		.loc 5 6 29 view .LVU111
 362 0002 2C31     		adds	r1, r1, #44
 363              	.LVL33:
 364              	.LBB124:
 365              	.LBB125:
 366              		.loc 4 26 25 view .LVU112
 367 0004 134B     		ldr	r3, .L26
 368              	.LBE125:
 369              	.LBE124:
   5:quantum/rgb_matrix_animations/colorband_val_anim.h ****     int16_t v = hsv.v - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 370              		.loc 5 5 60 view .LVU113
 371 0006 0190     		str	r0, [sp, #4]
 372              	.LBB128:
 373              	.LBB126:
 374              		.loc 4 26 25 view .LVU114
 375 0008 13F81130 		ldrb	r3, [r3, r1, lsl #1]	@ zero_extendqisi2
 376 000c E421     		movs	r1, #228
 377 000e 13FB01F3 		smulbb	r3, r3, r1
 378              	.LBE126:
 379              	.LBE128:
 380              		.loc 5 6 66 view .LVU115
 381 0012 C2EB1323 		rsb	r3, r2, r3, lsr #8
 382              		.loc 5 6 71 view .LVU116
 383 0016 1C33     		adds	r3, r3, #28
 384              		.loc 5 6 25 view .LVU117
 385 0018 002B     		cmp	r3, #0
 386 001a C0F30740 		ubfx	r0, r0, #16, #8
 387              	.LVL34:
 388              		.loc 5 6 5 is_stmt 1 view .LVU118
 389              	.LBB129:
 390              	.LBI124:
  20:./lib/lib8tion/scale8.h **** {
 391              		.loc 4 20 34 view .LVU119
 392              	.LBB127:
 393              		.loc 4 26 5 view .LVU120
 394              		.loc 4 26 5 is_stmt 0 view .LVU121
 395              	.LBE127:
 396              	.LBE129:
   7:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 397              		.loc 5 7 5 is_stmt 1 view .LVU122
 398              	.LBB130:
 399              	.LBI130:
  20:./lib/lib8tion/scale8.h **** {
 400              		.loc 4 20 34 view .LVU123
 401              	.LBB131:
 402              		.loc 4 26 5 view .LVU124
 403              		.loc 4 26 5 is_stmt 0 view .LVU125
 404              	.LBE131:
 405              	.LBE130:
   8:quantum/rgb_matrix_animations/colorband_val_anim.h ****     return hsv;
 406              		.loc 5 8 5 is_stmt 1 view .LVU126
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 407              		.loc 5 6 25 is_stmt 0 view .LVU127
 408 001e B8BF     		it	lt
 409 0020 5B42     		rsblt	r3, r3, #0
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 410              		.loc 5 6 23 view .LVU128
 411 0022 A0EBC303 		sub	r3, r0, r3, lsl #3
   7:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 412              		.loc 5 7 34 view .LVU129
 413 0026 1BB2     		sxth	r3, r3
 414 0028 23EAE373 		bic	r3, r3, r3, asr #31
 415              	.LBB133:
 416              	.LBB132:
 417              		.loc 4 26 25 view .LVU130
 418 002c 13FB00F3 		smulbb	r3, r3, r0
 419              		.loc 4 26 47 view .LVU131
 420 0030 1B12     		asrs	r3, r3, #8
 421 0032 8DF80630 		strb	r3, [sp, #6]
 422              	.LBE132:
 423              	.LBE133:
 424              		.loc 5 8 12 view .LVU132
 425 0036 019B     		ldr	r3, [sp, #4]
 426 0038 0020     		movs	r0, #0
 427              		.loc 5 8 12 view .LVU133
 428 003a DAB2     		uxtb	r2, r3
 429              	.LVL35:
 430              		.loc 5 8 12 view .LVU134
 431 003c 62F30700 		bfi	r0, r2, #0, #8
 432 0040 C3F30722 		ubfx	r2, r3, #8, #8
 433 0044 62F30F20 		bfi	r0, r2, #8, #8
 434 0048 C3F30743 		ubfx	r3, r3, #16, #8
 435 004c 63F31740 		bfi	r0, r3, #16, #8
   9:quantum/rgb_matrix_animations/colorband_val_anim.h **** }
 436              		.loc 5 9 1 view .LVU135
 437 0050 04B0     		add	sp, sp, #16
 438              		.cfi_def_cfa_offset 0
 439              		@ sp needed
 440 0052 7047     		bx	lr
 441              	.L27:
 442              		.align	2
 443              	.L26:
 444 0054 00000000 		.word	g_led_config
 445              		.cfi_endproc
 446              	.LFE93:
 448              		.section	.text.CYCLE_ALL_math,"ax",%progbits
 449              		.align	1
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	CYCLE_ALL_math:
 456              	.LVL36:
 457              	.LFB103:
 458              		.file 6 "quantum/rgb_matrix_animations/cycle_all_anim.h"
   1:quantum/rgb_matrix_animations/cycle_all_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_ALL
   2:quantum/rgb_matrix_animations/cycle_all_anim.h **** RGB_MATRIX_EFFECT(CYCLE_ALL)
   3:quantum/rgb_matrix_animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_all_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_all_anim.h **** static HSV CYCLE_ALL_math(HSV hsv, uint8_t i, uint8_t time) {
 459              		.loc 6 5 61 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 16
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 464              		.loc 6 5 61 is_stmt 0 view .LVU137
 465 0000 84B0     		sub	sp, sp, #16
 466              		.cfi_def_cfa_offset 16
 467              	.LVL37:
   6:quantum/rgb_matrix_animations/cycle_all_anim.h ****     hsv.h = time;
 468              		.loc 6 6 5 is_stmt 1 view .LVU138
   7:quantum/rgb_matrix_animations/cycle_all_anim.h ****     return hsv;
 469              		.loc 6 7 5 view .LVU139
   5:quantum/rgb_matrix_animations/cycle_all_anim.h ****     hsv.h = time;
 470              		.loc 6 5 61 is_stmt 0 view .LVU140
 471 0002 0190     		str	r0, [sp, #4]
 472              		.loc 6 7 12 view .LVU141
 473 0004 8DF80420 		strb	r2, [sp, #4]
 474 0008 019B     		ldr	r3, [sp, #4]
 475 000a 0020     		movs	r0, #0
 476 000c DAB2     		uxtb	r2, r3
 477              	.LVL38:
 478              		.loc 6 7 12 view .LVU142
 479 000e 62F30700 		bfi	r0, r2, #0, #8
 480 0012 C3F30722 		ubfx	r2, r3, #8, #8
 481 0016 62F30F20 		bfi	r0, r2, #8, #8
 482 001a C3F30743 		ubfx	r3, r3, #16, #8
 483 001e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/cycle_all_anim.h **** }
 484              		.loc 6 8 1 view .LVU143
 485 0022 04B0     		add	sp, sp, #16
 486              		.cfi_def_cfa_offset 0
 487              	.LVL39:
 488              		.loc 6 8 1 view .LVU144
 489              		@ sp needed
 490 0024 7047     		bx	lr
 491              		.cfi_endproc
 492              	.LFE103:
 494              		.section	.text.CYCLE_LEFT_RIGHT_math,"ax",%progbits
 495              		.align	1
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	CYCLE_LEFT_RIGHT_math:
 502              	.LVL40:
 503              	.LFB105:
 504              		.file 7 "quantum/rgb_matrix_animations/cycle_left_right_anim.h"
   1:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_LEFT_RIGHT
   2:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** RGB_MATRIX_EFFECT(CYCLE_LEFT_RIGHT)
   3:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** static HSV CYCLE_LEFT_RIGHT_math(HSV hsv, uint8_t i, uint8_t time) {
 505              		.loc 7 5 68 is_stmt 1 view -0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 16
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510              		.loc 7 5 68 is_stmt 0 view .LVU146
 511 0000 84B0     		sub	sp, sp, #16
 512              		.cfi_def_cfa_offset 16
 513              	.LVL41:
   6:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 514              		.loc 7 6 5 is_stmt 1 view .LVU147
   7:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     return hsv;
 515              		.loc 7 7 5 view .LVU148
   6:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 516              		.loc 7 6 34 is_stmt 0 view .LVU149
 517 0002 2C31     		adds	r1, r1, #44
 518              	.LVL42:
   6:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 519              		.loc 7 6 37 view .LVU150
 520 0004 0A4B     		ldr	r3, .L30
   5:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 521              		.loc 7 5 68 view .LVU151
 522 0006 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 523              		.loc 7 6 37 view .LVU152
 524 0008 13F81130 		ldrb	r3, [r3, r1, lsl #1]	@ zero_extendqisi2
 525 000c 9A1A     		subs	r2, r3, r2
 526              	.LVL43:
 527              		.loc 7 7 12 view .LVU153
 528 000e 8DF80420 		strb	r2, [sp, #4]
 529 0012 019B     		ldr	r3, [sp, #4]
 530 0014 0020     		movs	r0, #0
 531 0016 DAB2     		uxtb	r2, r3
 532 0018 62F30700 		bfi	r0, r2, #0, #8
 533 001c C3F30722 		ubfx	r2, r3, #8, #8
 534 0020 62F30F20 		bfi	r0, r2, #8, #8
 535 0024 C3F30743 		ubfx	r3, r3, #16, #8
 536 0028 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** }
 537              		.loc 7 8 1 view .LVU154
 538 002c 04B0     		add	sp, sp, #16
 539              		.cfi_def_cfa_offset 0
 540              		@ sp needed
 541 002e 7047     		bx	lr
 542              	.L31:
 543              		.align	2
 544              	.L30:
 545 0030 00000000 		.word	g_led_config
 546              		.cfi_endproc
 547              	.LFE105:
 549              		.section	.text.CYCLE_UP_DOWN_math,"ax",%progbits
 550              		.align	1
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu fpv4-sp-d16
 556              	CYCLE_UP_DOWN_math:
 557              	.LVL44:
 558              	.LFB107:
 559              		.file 8 "quantum/rgb_matrix_animations/cycle_up_down_anim.h"
   1:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_UP_DOWN
   2:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** RGB_MATRIX_EFFECT(CYCLE_UP_DOWN)
   3:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** static HSV CYCLE_UP_DOWN_math(HSV hsv, uint8_t i, uint8_t time) {
 560              		.loc 8 5 65 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 16
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              		@ link register save eliminated.
   6:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 565              		.loc 8 6 34 is_stmt 0 view .LVU156
 566 0000 0C4B     		ldr	r3, .L33
   5:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 567              		.loc 8 5 65 view .LVU157
 568 0002 84B0     		sub	sp, sp, #16
 569              		.cfi_def_cfa_offset 16
 570              	.LVL45:
 571              		.loc 8 6 5 is_stmt 1 view .LVU158
   7:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     return hsv;
 572              		.loc 8 7 5 view .LVU159
   6:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 573              		.loc 8 6 34 is_stmt 0 view .LVU160
 574 0004 03EB4101 		add	r1, r3, r1, lsl #1
 575              	.LVL46:
   5:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 576              		.loc 8 5 65 view .LVU161
 577 0008 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 578              		.loc 8 6 37 view .LVU162
 579 000a 91F85930 		ldrb	r3, [r1, #89]	@ zero_extendqisi2
 580 000e 9A1A     		subs	r2, r3, r2
 581              	.LVL47:
 582              		.loc 8 7 12 view .LVU163
 583 0010 8DF80420 		strb	r2, [sp, #4]
 584 0014 019B     		ldr	r3, [sp, #4]
 585 0016 0020     		movs	r0, #0
 586 0018 DAB2     		uxtb	r2, r3
 587 001a 62F30700 		bfi	r0, r2, #0, #8
 588 001e C3F30722 		ubfx	r2, r3, #8, #8
 589 0022 62F30F20 		bfi	r0, r2, #8, #8
 590 0026 C3F30743 		ubfx	r3, r3, #16, #8
 591 002a 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** }
 592              		.loc 8 8 1 view .LVU164
 593 002e 04B0     		add	sp, sp, #16
 594              		.cfi_def_cfa_offset 0
 595              		@ sp needed
 596 0030 7047     		bx	lr
 597              	.L34:
 598 0032 00BF     		.align	2
 599              	.L33:
 600 0034 00000000 		.word	g_led_config
 601              		.cfi_endproc
 602              	.LFE107:
 604              		.section	.text.RAINBOW_MOVING_CHEVRON_math,"ax",%progbits
 605              		.align	1
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu fpv4-sp-d16
 611              	RAINBOW_MOVING_CHEVRON_math:
 612              	.LVL48:
 613              	.LFB109:
 614              		.file 9 "quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h"
   1:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_MOVING_CHEVRON
   2:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_MOVING_CHEVRON)
   3:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** 
   5:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** static HSV RAINBOW_MOVING_CHEVRON_math(HSV hsv, uint8_t i, uint8_t time) {
 615              		.loc 9 5 74 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 16
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		.loc 9 5 74 is_stmt 0 view .LVU166
 620 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 621              		.cfi_def_cfa_offset 32
 622              		.cfi_offset 4, -16
 623              		.cfi_offset 5, -12
 624              		.cfi_offset 6, -8
 625              		.cfi_offset 14, -4
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     hsv.h += abs8(g_led_config.point[i].y - k_rgb_matrix_center.y) + (g_led_config.point[i].x - tim
 626              		.loc 9 6 40 view .LVU167
 627 0002 124D     		ldr	r5, .L37
   5:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     hsv.h += abs8(g_led_config.point[i].y - k_rgb_matrix_center.y) + (g_led_config.point[i].x - tim
 628              		.loc 9 5 74 view .LVU168
 629 0004 0190     		str	r0, [sp, #4]
 630              		.loc 9 6 40 view .LVU169
 631 0006 2C31     		adds	r1, r1, #44
 632              	.LVL49:
 633              		.loc 9 6 40 view .LVU170
 634 0008 05EB4103 		add	r3, r5, r1, lsl #1
 635 000c C0B2     		uxtb	r0, r0
 636              	.LVL50:
 637              		.loc 9 6 5 is_stmt 1 view .LVU171
 638              		.loc 9 6 40 is_stmt 0 view .LVU172
 639 000e 5E78     		ldrb	r6, [r3, #1]	@ zero_extendqisi2
 640              		.loc 9 6 92 view .LVU173
 641 0010 15F81130 		ldrb	r3, [r5, r1, lsl #1]	@ zero_extendqisi2
 642              		.loc 9 6 43 view .LVU174
 643 0014 A6F12004 		sub	r4, r6, #32
 644              		.loc 9 6 14 view .LVU175
 645 0018 64B2     		sxtb	r4, r4
 646              	.LVL51:
 647              	.LBB134:
 648              	.LBI134:
 404:./lib/lib8tion/math8.h **** {
 649              		.loc 1 404 33 is_stmt 1 view .LVU176
 650              	.LBB135:
 407:./lib/lib8tion/math8.h ****     return i;
 651              		.loc 1 407 5 view .LVU177
 407:./lib/lib8tion/math8.h ****     return i;
 652              		.loc 1 407 7 is_stmt 0 view .LVU178
 653 001a 002C     		cmp	r4, #0
 407:./lib/lib8tion/math8.h ****     return i;
 654              		.loc 1 407 16 is_stmt 1 view .LVU179
 407:./lib/lib8tion/math8.h ****     return i;
 655              		.loc 1 407 18 is_stmt 0 view .LVU180
 656 001c BCBF     		itt	lt
 657 001e C6F12004 		rsblt	r4, r6, #32
 658              	.LVL52:
 407:./lib/lib8tion/math8.h ****     return i;
 659              		.loc 1 407 18 view .LVU181
 660 0022 64B2     		sxtblt	r4, r4
 661              	.LVL53:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 662              		.loc 1 408 5 is_stmt 1 view .LVU182
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 663              		.loc 1 408 5 is_stmt 0 view .LVU183
 664              	.LBE135:
 665              	.LBE134:
   7:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 666              		.loc 9 7 5 is_stmt 1 view .LVU184
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 667              		.loc 9 6 95 is_stmt 0 view .LVU185
 668 0024 9B1A     		subs	r3, r3, r2
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 669              		.loc 9 6 68 view .LVU186
 670 0026 2344     		add	r3, r3, r4
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 671              		.loc 9 6 11 view .LVU187
 672 0028 0344     		add	r3, r3, r0
 673              		.loc 9 7 12 view .LVU188
 674 002a 8DF80430 		strb	r3, [sp, #4]
 675 002e 019B     		ldr	r3, [sp, #4]
 676 0030 0020     		movs	r0, #0
 677              	.LVL54:
 678              		.loc 9 7 12 view .LVU189
 679 0032 DAB2     		uxtb	r2, r3
 680              	.LVL55:
 681              		.loc 9 7 12 view .LVU190
 682 0034 62F30700 		bfi	r0, r2, #0, #8
 683 0038 C3F30722 		ubfx	r2, r3, #8, #8
 684 003c 62F30F20 		bfi	r0, r2, #8, #8
 685 0040 C3F30743 		ubfx	r3, r3, #16, #8
 686 0044 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** }
 687              		.loc 9 8 1 view .LVU191
 688 0048 04B0     		add	sp, sp, #16
 689              		.cfi_def_cfa_offset 16
 690              		@ sp needed
 691 004a 70BD     		pop	{r4, r5, r6, pc}
 692              	.L38:
 693              		.loc 9 8 1 view .LVU192
 694              		.align	2
 695              	.L37:
 696 004c 00000000 		.word	g_led_config
 697              		.cfi_endproc
 698              	.LFE109:
 700              		.section	.text.CYCLE_OUT_IN_math,"ax",%progbits
 701              		.align	1
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 705              		.fpu fpv4-sp-d16
 707              	CYCLE_OUT_IN_math:
 708              	.LVL56:
 709              	.LFB111:
 710              		.file 10 "quantum/rgb_matrix_animations/cycle_out_in_anim.h"
   1:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_OUT_IN
   2:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** RGB_MATRIX_EFFECT(CYCLE_OUT_IN)
   3:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** static HSV CYCLE_OUT_IN_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 711              		.loc 10 5 91 is_stmt 1 view -0
 712              		.cfi_startproc
 713              		@ args = 4, pretend = 0, frame = 16
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716              		.loc 10 5 91 is_stmt 0 view .LVU194
 717 0000 84B0     		sub	sp, sp, #16
 718              		.cfi_def_cfa_offset 16
 719              	.LVL57:
   6:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 720              		.loc 10 6 5 is_stmt 1 view .LVU195
   7:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     return hsv;
 721              		.loc 10 7 5 view .LVU196
   6:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 722              		.loc 10 6 15 is_stmt 0 view .LVU197
 723 0002 03EB4303 		add	r3, r3, r3, lsl #1
 724              	.LVL58:
   6:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 725              		.loc 10 6 26 view .LVU198
 726 0006 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 727              	.LVL59:
   5:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 728              		.loc 10 5 91 view .LVU199
 729 000a 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 730              		.loc 10 6 26 view .LVU200
 731 000c 02EB5302 		add	r2, r2, r3, lsr #1
 732              		.loc 10 7 12 view .LVU201
 733 0010 8DF80420 		strb	r2, [sp, #4]
 734 0014 019B     		ldr	r3, [sp, #4]
 735 0016 0020     		movs	r0, #0
 736 0018 DAB2     		uxtb	r2, r3
 737 001a 62F30700 		bfi	r0, r2, #0, #8
 738 001e C3F30722 		ubfx	r2, r3, #8, #8
 739 0022 62F30F20 		bfi	r0, r2, #8, #8
 740 0026 C3F30743 		ubfx	r3, r3, #16, #8
 741 002a 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** }
 742              		.loc 10 8 1 view .LVU202
 743 002e 04B0     		add	sp, sp, #16
 744              		.cfi_def_cfa_offset 0
 745              	.LVL60:
 746              		.loc 10 8 1 view .LVU203
 747              		@ sp needed
 748 0030 7047     		bx	lr
 749              		.cfi_endproc
 750              	.LFE111:
 752              		.section	.text.CYCLE_OUT_IN_DUAL_math,"ax",%progbits
 753              		.align	1
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 757              		.fpu fpv4-sp-d16
 759              	CYCLE_OUT_IN_DUAL_math:
 760              	.LVL61:
 761              	.LFB113:
 762              		.file 11 "quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h"
   1:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_OUT_IN_DUAL
   2:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** RGB_MATRIX_EFFECT(CYCLE_OUT_IN_DUAL)
   3:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** static HSV CYCLE_OUT_IN_DUAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 763              		.loc 11 5 82 is_stmt 1 view -0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 16
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		.loc 11 5 82 is_stmt 0 view .LVU205
 768 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 769              		.cfi_def_cfa_offset 24
 770              		.cfi_offset 4, -8
 771              		.cfi_offset 14, -4
 772              	.LVL62:
   6:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 773              		.loc 11 6 5 is_stmt 1 view .LVU206
   5:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 774              		.loc 11 5 82 is_stmt 0 view .LVU207
 775 0002 0190     		str	r0, [sp, #4]
 776              	.LVL63:
 777              		.loc 11 6 50 view .LVU208
 778 0004 48B2     		sxtb	r0, r1
 779              	.LVL64:
 780              	.LBB136:
 781              	.LBI136:
 404:./lib/lib8tion/math8.h **** {
 782              		.loc 1 404 33 is_stmt 1 view .LVU209
 783              	.LBB137:
 407:./lib/lib8tion/math8.h ****     return i;
 784              		.loc 1 407 5 view .LVU210
 407:./lib/lib8tion/math8.h ****     return i;
 785              		.loc 1 407 7 is_stmt 0 view .LVU211
 786 0006 0028     		cmp	r0, #0
 407:./lib/lib8tion/math8.h ****     return i;
 787              		.loc 1 407 16 is_stmt 1 view .LVU212
 407:./lib/lib8tion/math8.h ****     return i;
 788              		.loc 1 407 18 is_stmt 0 view .LVU213
 789 0008 BCBF     		itt	lt
 790 000a 4842     		rsblt	r0, r1, #0
 791              	.LVL65:
 407:./lib/lib8tion/math8.h ****     return i;
 792              		.loc 1 407 18 view .LVU214
 793 000c 40B2     		sxtblt	r0, r0
 794              	.LVL66:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 795              		.loc 1 408 5 is_stmt 1 view .LVU215
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 796              		.loc 1 408 5 is_stmt 0 view .LVU216
 797              	.LBE137:
 798              	.LBE136:
   7:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     uint8_t dist = sqrt16(dx * dx + dy * dy);
 799              		.loc 11 7 5 is_stmt 1 view .LVU217
 800              		.loc 11 7 40 is_stmt 0 view .LVU218
 801 000e 5243     		muls	r2, r2, r2
 802              	.LVL67:
   6:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     uint8_t dist = sqrt16(dx * dx + dy * dy);
 803              		.loc 11 6 18 view .LVU219
 804 0010 C0F13800 		rsb	r0, r0, #56
 805              	.LVL68:
 806              		.loc 11 7 20 view .LVU220
 807 0014 10FB0020 		smlabb	r0, r0, r0, r2
 808 0018 80B2     		uxth	r0, r0
   5:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 809              		.loc 11 5 82 view .LVU221
 810 001a 1C46     		mov	r4, r3
 811              		.loc 11 7 20 view .LVU222
 812 001c FFF7FEFF 		bl	sqrt16
 813              	.LVL69:
   8:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 814              		.loc 11 8 5 is_stmt 1 view .LVU223
   9:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     return hsv;
 815              		.loc 11 9 5 view .LVU224
   8:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 816              		.loc 11 8 29 is_stmt 0 view .LVU225
 817 0020 00EB4000 		add	r0, r0, r0, lsl #1
 818              	.LVL70:
   8:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 819              		.loc 11 8 29 view .LVU226
 820 0024 0444     		add	r4, r4, r0
 821              		.loc 11 9 12 view .LVU227
 822 0026 8DF80440 		strb	r4, [sp, #4]
 823 002a 019B     		ldr	r3, [sp, #4]
 824 002c 0020     		movs	r0, #0
 825 002e DAB2     		uxtb	r2, r3
 826 0030 62F30700 		bfi	r0, r2, #0, #8
 827 0034 C3F30722 		ubfx	r2, r3, #8, #8
 828 0038 62F30F20 		bfi	r0, r2, #8, #8
 829 003c C3F30743 		ubfx	r3, r3, #16, #8
 830 0040 63F31740 		bfi	r0, r3, #16, #8
  10:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** }
 831              		.loc 11 10 1 view .LVU228
 832 0044 04B0     		add	sp, sp, #16
 833              		.cfi_def_cfa_offset 8
 834              		@ sp needed
 835 0046 10BD     		pop	{r4, pc}
 836              		.cfi_endproc
 837              	.LFE113:
 839              		.section	.text.DUAL_BEACON_math,"ax",%progbits
 840              		.align	1
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu fpv4-sp-d16
 846              	DUAL_BEACON_math:
 847              	.LVL71:
 848              	.LFB119:
 849              		.file 12 "quantum/rgb_matrix_animations/dual_beacon_anim.h"
   1:quantum/rgb_matrix_animations/dual_beacon_anim.h **** #ifndef DISABLE_RGB_MATRIX_DUAL_BEACON
   2:quantum/rgb_matrix_animations/dual_beacon_anim.h **** RGB_MATRIX_EFFECT(DUAL_BEACON)
   3:quantum/rgb_matrix_animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/dual_beacon_anim.h **** 
   5:quantum/rgb_matrix_animations/dual_beacon_anim.h **** static HSV DUAL_BEACON_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 850              		.loc 12 5 87 is_stmt 1 view -0
 851              		.cfi_startproc
 852              		@ args = 4, pretend = 0, frame = 16
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		.loc 12 5 87 is_stmt 0 view .LVU230
 855 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 856              		.cfi_def_cfa_offset 24
 857              		.cfi_offset 4, -8
 858              		.cfi_offset 14, -4
 859              	.LVL72:
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 860              		.loc 12 6 5 is_stmt 1 view .LVU231
   7:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     return hsv;
 861              		.loc 12 7 5 view .LVU232
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 862              		.loc 12 6 37 is_stmt 0 view .LVU233
 863 0002 124C     		ldr	r4, .L44
   5:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 864              		.loc 12 5 87 view .LVU234
 865 0004 0190     		str	r0, [sp, #4]
 866              	.LVL73:
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 867              		.loc 12 6 37 view .LVU235
 868 0006 2C33     		adds	r3, r3, #44
 869              	.LVL74:
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 870              		.loc 12 6 37 view .LVU236
 871 0008 04EB4300 		add	r0, r4, r3, lsl #1
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 872              		.loc 12 6 95 view .LVU237
 873 000c 14F81330 		ldrb	r3, [r4, r3, lsl #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 874              		.loc 12 6 37 view .LVU238
 875 0010 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 876              		.loc 12 6 98 view .LVU239
 877 0012 703B     		subs	r3, r3, #112
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 878              		.loc 12 6 123 view .LVU240
 879 0014 5943     		muls	r1, r3, r1
 880              	.LVL75:
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 881              		.loc 12 6 40 view .LVU241
 882 0016 2038     		subs	r0, r0, #32
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 883              		.loc 12 6 71 view .LVU242
 884 0018 02FB0012 		mla	r2, r2, r0, r1
 885              	.LVL76:
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 886              		.loc 12 6 130 view .LVU243
 887 001c 002A     		cmp	r2, #0
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 888              		.loc 12 6 11 view .LVU244
 889 001e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 890              		.loc 12 6 130 view .LVU245
 891 0022 B8BF     		it	lt
 892 0024 7F32     		addlt	r2, r2, #127
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 893              		.loc 12 6 11 view .LVU246
 894 0026 01EBE212 		add	r2, r1, r2, asr #7
 895              		.loc 12 7 12 view .LVU247
 896 002a 8DF80420 		strb	r2, [sp, #4]
 897 002e 019B     		ldr	r3, [sp, #4]
 898 0030 0020     		movs	r0, #0
 899 0032 DAB2     		uxtb	r2, r3
 900 0034 62F30700 		bfi	r0, r2, #0, #8
 901 0038 C3F30722 		ubfx	r2, r3, #8, #8
 902 003c 62F30F20 		bfi	r0, r2, #8, #8
 903 0040 C3F30743 		ubfx	r3, r3, #16, #8
 904 0044 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/dual_beacon_anim.h **** }
 905              		.loc 12 8 1 view .LVU248
 906 0048 04B0     		add	sp, sp, #16
 907              		.cfi_def_cfa_offset 8
 908              		@ sp needed
 909 004a 10BD     		pop	{r4, pc}
 910              	.LVL77:
 911              	.L45:
 912              		.loc 12 8 1 view .LVU249
 913              		.align	2
 914              	.L44:
 915 004c 00000000 		.word	g_led_config
 916              		.cfi_endproc
 917              	.LFE119:
 919              		.section	.text.RAINBOW_BEACON_math,"ax",%progbits
 920              		.align	1
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 924              		.fpu fpv4-sp-d16
 926              	RAINBOW_BEACON_math:
 927              	.LVL78:
 928              	.LFB121:
 929              		.file 13 "quantum/rgb_matrix_animations/rainbow_beacon_anim.h"
   1:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_BEACON
   2:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_BEACON)
   3:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** 
   5:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** static HSV RAINBOW_BEACON_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 930              		.loc 13 5 90 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 4, pretend = 0, frame = 16
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		.loc 13 5 90 is_stmt 0 view .LVU251
 935 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 936              		.cfi_def_cfa_offset 24
 937              		.cfi_offset 4, -8
 938              		.cfi_offset 14, -4
 939              	.LVL79:
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 940              		.loc 13 6 5 is_stmt 1 view .LVU252
   7:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     return hsv;
 941              		.loc 13 7 5 view .LVU253
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 942              		.loc 13 6 37 is_stmt 0 view .LVU254
 943 0002 124C     		ldr	r4, .L48
   5:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 944              		.loc 13 5 90 view .LVU255
 945 0004 0190     		str	r0, [sp, #4]
 946              	.LVL80:
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 947              		.loc 13 6 37 view .LVU256
 948 0006 2C33     		adds	r3, r3, #44
 949              	.LVL81:
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 950              		.loc 13 6 37 view .LVU257
 951 0008 04EB4300 		add	r0, r4, r3, lsl #1
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 952              		.loc 13 6 99 view .LVU258
 953 000c 14F81330 		ldrb	r3, [r4, r3, lsl #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 954              		.loc 13 6 37 view .LVU259
 955 0010 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 956              		.loc 13 6 102 view .LVU260
 957 0012 703B     		subs	r3, r3, #112
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 958              		.loc 13 6 131 view .LVU261
 959 0014 5943     		muls	r1, r3, r1
 960              	.LVL82:
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 961              		.loc 13 6 40 view .LVU262
 962 0016 2038     		subs	r0, r0, #32
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 963              		.loc 13 6 75 view .LVU263
 964 0018 02FB0012 		mla	r2, r2, r0, r1
 965              	.LVL83:
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 966              		.loc 13 6 138 view .LVU264
 967 001c 002A     		cmp	r2, #0
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 968              		.loc 13 6 11 view .LVU265
 969 001e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 970              		.loc 13 6 138 view .LVU266
 971 0022 B8BF     		it	lt
 972 0024 3F32     		addlt	r2, r2, #63
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 973              		.loc 13 6 11 view .LVU267
 974 0026 01EBA212 		add	r2, r1, r2, asr #6
 975              		.loc 13 7 12 view .LVU268
 976 002a 8DF80420 		strb	r2, [sp, #4]
 977 002e 019B     		ldr	r3, [sp, #4]
 978 0030 0020     		movs	r0, #0
 979 0032 DAB2     		uxtb	r2, r3
 980 0034 62F30700 		bfi	r0, r2, #0, #8
 981 0038 C3F30722 		ubfx	r2, r3, #8, #8
 982 003c 62F30F20 		bfi	r0, r2, #8, #8
 983 0040 C3F30743 		ubfx	r3, r3, #16, #8
 984 0044 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** }
 985              		.loc 13 8 1 view .LVU269
 986 0048 04B0     		add	sp, sp, #16
 987              		.cfi_def_cfa_offset 8
 988              		@ sp needed
 989 004a 10BD     		pop	{r4, pc}
 990              	.LVL84:
 991              	.L49:
 992              		.loc 13 8 1 view .LVU270
 993              		.align	2
 994              	.L48:
 995 004c 00000000 		.word	g_led_config
 996              		.cfi_endproc
 997              	.LFE121:
 999              		.section	.text.RAINBOW_PINWHEELS_math,"ax",%progbits
 1000              		.align	1
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1004              		.fpu fpv4-sp-d16
 1006              	RAINBOW_PINWHEELS_math:
 1007              	.LVL85:
 1008              	.LFB123:
 1009              		.file 14 "quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h"
   1:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_PINWHEELS
   2:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_PINWHEELS)
   3:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** 
   5:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** static HSV RAINBOW_PINWHEELS_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 1010              		.loc 14 5 93 is_stmt 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 4, pretend = 0, frame = 16
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              		.loc 14 5 93 is_stmt 0 view .LVU272
 1015 0000 30B5     		push	{r4, r5, lr}
 1016              		.cfi_def_cfa_offset 12
 1017              		.cfi_offset 4, -12
 1018              		.cfi_offset 5, -8
 1019              		.cfi_offset 14, -4
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 3 * cos + (56 - abs8(g_led_config
 1020              		.loc 14 6 37 view .LVU273
 1021 0002 174D     		ldr	r5, .L53
   5:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 3 * cos + (56 - abs8(g_led_config
 1022              		.loc 14 5 93 view .LVU274
 1023 0004 85B0     		sub	sp, sp, #20
 1024              		.cfi_def_cfa_offset 32
 1025              		.loc 14 6 37 view .LVU275
 1026 0006 2C33     		adds	r3, r3, #44
 1027              	.LVL86:
 1028              		.loc 14 6 37 view .LVU276
 1029 0008 05EB4304 		add	r4, r5, r3, lsl #1
   5:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 3 * cos + (56 - abs8(g_led_config
 1030              		.loc 14 5 93 view .LVU277
 1031 000c 0190     		str	r0, [sp, #4]
 1032              		.loc 14 6 37 view .LVU278
 1033 000e 6478     		ldrb	r4, [r4, #1]	@ zero_extendqisi2
 1034              		.loc 14 6 40 view .LVU279
 1035 0010 203C     		subs	r4, r4, #32
 1036              		.loc 14 6 69 view .LVU280
 1037 0012 6243     		muls	r2, r4, r2
 1038              	.LVL87:
 1039              		.loc 14 6 109 view .LVU281
 1040 0014 15F81340 		ldrb	r4, [r5, r3, lsl #1]	@ zero_extendqisi2
 1041              		.loc 14 6 112 view .LVU282
 1042 0018 A4F17003 		sub	r3, r4, #112
 1043              		.loc 14 6 83 view .LVU283
 1044 001c 5BB2     		sxtb	r3, r3
 1045              	.LBB138:
 1046              	.LBB139:
 407:./lib/lib8tion/math8.h ****     return i;
 1047              		.loc 1 407 7 view .LVU284
 1048 001e 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 1049              		.loc 1 407 18 view .LVU285
 1050 0020 BCBF     		itt	lt
 1051 0022 C4F17003 		rsblt	r3, r4, #112
 1052 0026 5BB2     		sxtblt	r3, r3
 1053              	.LBE139:
 1054              	.LBE138:
 1055              		.loc 14 6 81 view .LVU286
 1056 0028 C3F13803 		rsb	r3, r3, #56
 1057              		.loc 14 6 75 view .LVU287
 1058 002c 01FB0321 		mla	r1, r1, r3, r2
 1059              	.LVL88:
 1060              		.loc 14 6 149 view .LVU288
 1061 0030 11EB4101 		adds	r1, r1, r1, lsl #1
 1062 0034 C0B2     		uxtb	r0, r0
 1063              	.LVL89:
 1064              		.loc 14 6 5 is_stmt 1 view .LVU289
 1065              	.LBB141:
 1066              	.LBI138:
 404:./lib/lib8tion/math8.h **** {
 1067              		.loc 1 404 33 view .LVU290
 1068              	.LBB140:
 407:./lib/lib8tion/math8.h ****     return i;
 1069              		.loc 1 407 5 view .LVU291
 407:./lib/lib8tion/math8.h ****     return i;
 1070              		.loc 1 407 16 view .LVU292
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1071              		.loc 1 408 5 view .LVU293
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1072              		.loc 1 408 5 is_stmt 0 view .LVU294
 1073              	.LBE140:
 1074              	.LBE141:
   7:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1075              		.loc 14 7 5 is_stmt 1 view .LVU295
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1076              		.loc 14 6 149 is_stmt 0 view .LVU296
 1077 0036 48BF     		it	mi
 1078 0038 7F31     		addmi	r1, r1, #127
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1079              		.loc 14 6 11 view .LVU297
 1080 003a 00EBE111 		add	r1, r0, r1, asr #7
 1081              		.loc 14 7 12 view .LVU298
 1082 003e 8DF80410 		strb	r1, [sp, #4]
 1083 0042 019B     		ldr	r3, [sp, #4]
 1084 0044 0020     		movs	r0, #0
 1085 0046 DAB2     		uxtb	r2, r3
 1086 0048 62F30700 		bfi	r0, r2, #0, #8
 1087 004c C3F30722 		ubfx	r2, r3, #8, #8
 1088 0050 62F30F20 		bfi	r0, r2, #8, #8
 1089 0054 C3F30743 		ubfx	r3, r3, #16, #8
 1090 0058 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** }
 1091              		.loc 14 8 1 view .LVU299
 1092 005c 05B0     		add	sp, sp, #20
 1093              		.cfi_def_cfa_offset 12
 1094              		@ sp needed
 1095 005e 30BD     		pop	{r4, r5, pc}
 1096              	.LVL90:
 1097              	.L54:
 1098              		.loc 14 8 1 view .LVU300
 1099              		.align	2
 1100              	.L53:
 1101 0060 00000000 		.word	g_led_config
 1102              		.cfi_endproc
 1103              	.LFE123:
 1105              		.section	.text.SOLID_REACTIVE_SIMPLE_math,"ax",%progbits
 1106              		.align	1
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1110              		.fpu fpv4-sp-d16
 1112              	SOLID_REACTIVE_SIMPLE_math:
 1113              	.LVL91:
 1114              	.LFB129:
 1115              		.file 15 "quantum/rgb_matrix_animations/solid_reactive_simple_anim.h"
   1:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
   2:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** #    ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_SIMPLE
   3:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** RGB_MATRIX_EFFECT(SOLID_REACTIVE_SIMPLE)
   4:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   5:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** 
   6:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** static HSV SOLID_REACTIVE_SIMPLE_math(HSV hsv, uint16_t offset) {
 1116              		.loc 15 6 65 is_stmt 1 view -0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 16
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              		@ link register save eliminated.
 1121              		.loc 15 6 65 is_stmt 0 view .LVU302
 1122 0000 84B0     		sub	sp, sp, #16
 1123              		.cfi_def_cfa_offset 16
 1124              	.LVL92:
   7:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h ****     hsv.v = scale8(255 - offset, hsv.v);
 1125              		.loc 15 7 5 is_stmt 1 view .LVU303
 1126              	.LBB142:
 1127              	.LBI142:
  20:./lib/lib8tion/scale8.h **** {
 1128              		.loc 4 20 34 view .LVU304
 1129              	.LBB143:
 1130              		.loc 4 26 5 view .LVU305
 1131              		.loc 4 26 5 is_stmt 0 view .LVU306
 1132              	.LBE143:
 1133              	.LBE142:
   8:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h ****     return hsv;
 1134              		.loc 15 8 5 is_stmt 1 view .LVU307
   7:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h ****     hsv.v = scale8(255 - offset, hsv.v);
 1135              		.loc 15 7 13 is_stmt 0 view .LVU308
 1136 0002 C943     		mvns	r1, r1
 1137              	.LVL93:
   6:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h ****     hsv.v = scale8(255 - offset, hsv.v);
 1138              		.loc 15 6 65 view .LVU309
 1139 0004 0190     		str	r0, [sp, #4]
 1140              	.LVL94:
 1141              	.LBB145:
 1142              	.LBB144:
 1143              		.loc 4 26 25 view .LVU310
 1144 0006 C9B2     		uxtb	r1, r1
 1145 0008 C0F30740 		ubfx	r0, r0, #16, #8
 1146 000c 11FB00F1 		smulbb	r1, r1, r0
 1147              		.loc 4 26 47 view .LVU311
 1148 0010 0912     		asrs	r1, r1, #8
 1149 0012 8DF80610 		strb	r1, [sp, #6]
 1150              	.LBE144:
 1151              	.LBE145:
 1152              		.loc 15 8 12 view .LVU312
 1153 0016 019B     		ldr	r3, [sp, #4]
 1154 0018 0020     		movs	r0, #0
 1155 001a DAB2     		uxtb	r2, r3
 1156 001c 62F30700 		bfi	r0, r2, #0, #8
 1157 0020 C3F30722 		ubfx	r2, r3, #8, #8
 1158 0024 62F30F20 		bfi	r0, r2, #8, #8
 1159 0028 C3F30743 		ubfx	r3, r3, #16, #8
 1160 002c 63F31740 		bfi	r0, r3, #16, #8
   9:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** }
 1161              		.loc 15 9 1 view .LVU313
 1162 0030 04B0     		add	sp, sp, #16
 1163              		.cfi_def_cfa_offset 0
 1164              		@ sp needed
 1165 0032 7047     		bx	lr
 1166              		.cfi_endproc
 1167              	.LFE129:
 1169              		.section	.text.SOLID_REACTIVE_math,"ax",%progbits
 1170              		.align	1
 1171              		.syntax unified
 1172              		.thumb
 1173              		.thumb_func
 1174              		.fpu fpv4-sp-d16
 1176              	SOLID_REACTIVE_math:
 1177              	.LVL95:
 1178              	.LFB131:
 1179              		.file 16 "quantum/rgb_matrix_animations/solid_reactive_anim.h"
   1:quantum/rgb_matrix_animations/solid_reactive_anim.h **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
   2:quantum/rgb_matrix_animations/solid_reactive_anim.h **** #    ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE
   3:quantum/rgb_matrix_animations/solid_reactive_anim.h **** RGB_MATRIX_EFFECT(SOLID_REACTIVE)
   4:quantum/rgb_matrix_animations/solid_reactive_anim.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   5:quantum/rgb_matrix_animations/solid_reactive_anim.h **** 
   6:quantum/rgb_matrix_animations/solid_reactive_anim.h **** static HSV SOLID_REACTIVE_math(HSV hsv, uint16_t offset) {
 1180              		.loc 16 6 58 is_stmt 1 view -0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 16
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
 1185              		.loc 16 6 58 is_stmt 0 view .LVU315
 1186 0000 84B0     		sub	sp, sp, #16
 1187              		.cfi_def_cfa_offset 16
 1188              	.LVL96:
   7:quantum/rgb_matrix_animations/solid_reactive_anim.h ****     hsv.h += qsub8(130, offset);
 1189              		.loc 16 7 5 is_stmt 1 view .LVU316
 1190              	.LBB146:
 1191              	.LBI146:
  88:./lib/lib8tion/math8.h **** {
 1192              		.loc 1 88 34 view .LVU317
 1193              	.LBB147:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 1194              		.loc 1 91 5 view .LVU318
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 1195              		.loc 1 91 19 is_stmt 0 view .LVU319
 1196 0002 C9B2     		uxtb	r1, r1
 1197              	.LVL97:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 1198              		.loc 1 91 19 view .LVU320
 1199              	.LBE147:
 1200              	.LBE146:
   6:quantum/rgb_matrix_animations/solid_reactive_anim.h ****     hsv.h += qsub8(130, offset);
 1201              		.loc 16 6 58 view .LVU321
 1202 0004 0190     		str	r0, [sp, #4]
 1203              	.LVL98:
 1204              	.LBB149:
 1205              	.LBB148:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 1206              		.loc 1 91 13 view .LVU322
 1207 0006 C1F18201 		rsb	r1, r1, #130
 1208              	.LVL99:
  92:./lib/lib8tion/math8.h ****     return t;
 1209              		.loc 1 92 5 is_stmt 1 view .LVU323
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 1210              		.loc 1 93 5 view .LVU324
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 1211              		.loc 1 93 5 is_stmt 0 view .LVU325
 1212              	.LBE148:
 1213              	.LBE149:
   8:quantum/rgb_matrix_animations/solid_reactive_anim.h ****     return hsv;
 1214              		.loc 16 8 5 is_stmt 1 view .LVU326
   7:quantum/rgb_matrix_animations/solid_reactive_anim.h ****     return hsv;
 1215              		.loc 16 7 11 is_stmt 0 view .LVU327
 1216 000a C0B2     		uxtb	r0, r0
 1217 000c 0029     		cmp	r1, #0
 1218 000e A8BF     		it	ge
 1219 0010 4018     		addge	r0, r0, r1
 1220              		.loc 16 8 12 view .LVU328
 1221 0012 8DF80400 		strb	r0, [sp, #4]
 1222              	.LVL100:
 1223              		.loc 16 8 12 view .LVU329
 1224 0016 019B     		ldr	r3, [sp, #4]
 1225 0018 0020     		movs	r0, #0
 1226 001a DAB2     		uxtb	r2, r3
 1227 001c 62F30700 		bfi	r0, r2, #0, #8
 1228 0020 C3F30722 		ubfx	r2, r3, #8, #8
 1229 0024 62F30F20 		bfi	r0, r2, #8, #8
 1230 0028 C3F30743 		ubfx	r3, r3, #16, #8
 1231 002c 63F31740 		bfi	r0, r3, #16, #8
   9:quantum/rgb_matrix_animations/solid_reactive_anim.h **** }
 1232              		.loc 16 9 1 view .LVU330
 1233 0030 04B0     		add	sp, sp, #16
 1234              		.cfi_def_cfa_offset 0
 1235              		@ sp needed
 1236 0032 7047     		bx	lr
 1237              		.cfi_endproc
 1238              	.LFE131:
 1240              		.section	.text.SOLID_REACTIVE_WIDE_math,"ax",%progbits
 1241              		.align	1
 1242              		.syntax unified
 1243              		.thumb
 1244              		.thumb_func
 1245              		.fpu fpv4-sp-d16
 1247              	SOLID_REACTIVE_WIDE_math:
 1248              	.LVL101:
 1249              	.LFB133:
 1250              		.file 17 "quantum/rgb_matrix_animations/solid_reactive_wide.h"
   1:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
   2:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #    if !defined(DISABLE_RGB_MATRIX_SOLID_REACTIVE_WIDE) || !defined(DISABLE_RGB_MATRIX_SOLID_REACT
   3:quantum/rgb_matrix_animations/solid_reactive_wide.h **** 
   4:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #        ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_WIDE
   5:quantum/rgb_matrix_animations/solid_reactive_wide.h **** RGB_MATRIX_EFFECT(SOLID_REACTIVE_WIDE)
   6:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #        endif
   7:quantum/rgb_matrix_animations/solid_reactive_wide.h **** 
   8:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #        ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_MULTIWIDE
   9:quantum/rgb_matrix_animations/solid_reactive_wide.h **** RGB_MATRIX_EFFECT(SOLID_REACTIVE_MULTIWIDE)
  10:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #        endif
  11:quantum/rgb_matrix_animations/solid_reactive_wide.h **** 
  12:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  13:quantum/rgb_matrix_animations/solid_reactive_wide.h **** 
  14:quantum/rgb_matrix_animations/solid_reactive_wide.h **** static HSV SOLID_REACTIVE_WIDE_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint16_t tick) {
 1251              		.loc 17 14 99 is_stmt 1 view -0
 1252              		.cfi_startproc
 1253              		@ args = 4, pretend = 0, frame = 16
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 1255              		@ link register save eliminated.
 1256              		.loc 17 14 99 is_stmt 0 view .LVU332
 1257 0000 84B0     		sub	sp, sp, #16
 1258              		.cfi_def_cfa_offset 16
 1259              	.LVL102:
  15:quantum/rgb_matrix_animations/solid_reactive_wide.h ****     uint16_t effect = tick + dist * 5;
 1260              		.loc 17 15 5 is_stmt 1 view .LVU333
 1261              		.loc 17 15 28 is_stmt 0 view .LVU334
 1262 0002 03EB8303 		add	r3, r3, r3, lsl #2
 1263              	.LVL103:
 1264              		.loc 17 15 14 view .LVU335
 1265 0006 BDF81020 		ldrh	r2, [sp, #16]
 1266              	.LVL104:
  14:quantum/rgb_matrix_animations/solid_reactive_wide.h ****     uint16_t effect = tick + dist * 5;
 1267              		.loc 17 14 99 view .LVU336
 1268 000a 0190     		str	r0, [sp, #4]
 1269              	.LVL105:
 1270              		.loc 17 15 14 view .LVU337
 1271 000c 1A44     		add	r2, r2, r3
 1272 000e 92B2     		uxth	r2, r2
 1273              	.LVL106:
  16:quantum/rgb_matrix_animations/solid_reactive_wide.h ****     if (effect > 255) effect = 255;
 1274              		.loc 17 16 5 is_stmt 1 view .LVU338
  17:quantum/rgb_matrix_animations/solid_reactive_wide.h ****     hsv.v = qadd8(hsv.v, 255 - effect);
 1275              		.loc 17 17 5 view .LVU339
 1276              	.LBB150:
 1277              	.LBI150:
  23:./lib/lib8tion/math8.h **** {
 1278              		.loc 1 23 34 view .LVU340
 1279              	.LBB151:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1280              		.loc 1 26 5 view .LVU341
 1281              	.LBE151:
 1282              	.LBE150:
 1283              		.loc 17 17 13 is_stmt 0 view .LVU342
 1284 0010 FF2A     		cmp	r2, #255
 1285 0012 28BF     		it	cs
 1286 0014 FF22     		movcs	r2, #255
 1287              	.LVL107:
 1288              	.LBB155:
 1289              	.LBB152:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1290              		.loc 1 26 20 view .LVU343
 1291 0016 C0F30740 		ubfx	r0, r0, #16, #8
 1292              	.LBE152:
 1293              	.LBE155:
 1294              		.loc 17 17 13 view .LVU344
 1295 001a D243     		mvns	r2, r2
 1296              	.LBB156:
 1297              	.LBB153:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1298              		.loc 1 26 14 view .LVU345
 1299 001c 50FA82F2 		uxtab	r2, r0, r2
 1300              	.LVL108:
  27:./lib/lib8tion/math8.h ****     return t;
 1301              		.loc 1 27 5 is_stmt 1 view .LVU346
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1302              		.loc 1 28 5 view .LVU347
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1303              		.loc 1 28 5 is_stmt 0 view .LVU348
 1304              	.LBE153:
 1305              	.LBE156:
  18:quantum/rgb_matrix_animations/solid_reactive_wide.h ****     return hsv;
 1306              		.loc 17 18 5 is_stmt 1 view .LVU349
 1307              	.LBB157:
 1308              	.LBB154:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1309              		.loc 1 28 12 is_stmt 0 view .LVU350
 1310 0020 FF2A     		cmp	r2, #255
 1311 0022 28BF     		it	cs
 1312 0024 FF22     		movcs	r2, #255
 1313              	.LVL109:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1314              		.loc 1 28 12 view .LVU351
 1315 0026 8DF80620 		strb	r2, [sp, #6]
 1316              	.LBE154:
 1317              	.LBE157:
 1318              		.loc 17 18 12 view .LVU352
 1319 002a 019B     		ldr	r3, [sp, #4]
 1320              	.LVL110:
 1321              		.loc 17 18 12 view .LVU353
 1322 002c 0020     		movs	r0, #0
 1323 002e DAB2     		uxtb	r2, r3
 1324 0030 62F30700 		bfi	r0, r2, #0, #8
 1325 0034 C3F30722 		ubfx	r2, r3, #8, #8
 1326 0038 62F30F20 		bfi	r0, r2, #8, #8
 1327 003c C3F30743 		ubfx	r3, r3, #16, #8
 1328 0040 63F31740 		bfi	r0, r3, #16, #8
  19:quantum/rgb_matrix_animations/solid_reactive_wide.h **** }
 1329              		.loc 17 19 1 view .LVU354
 1330 0044 04B0     		add	sp, sp, #16
 1331              		.cfi_def_cfa_offset 0
 1332              	.LVL111:
 1333              		.loc 17 19 1 view .LVU355
 1334              		@ sp needed
 1335 0046 7047     		bx	lr
 1336              		.cfi_endproc
 1337              	.LFE133:
 1339              		.section	.text.SOLID_REACTIVE_CROSS_math,"ax",%progbits
 1340              		.align	1
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1344              		.fpu fpv4-sp-d16
 1346              	SOLID_REACTIVE_CROSS_math:
 1347              	.LVL112:
 1348              	.LFB136:
 1349              		.file 18 "quantum/rgb_matrix_animations/solid_reactive_cross.h"
   1:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
   2:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #    if !defined(DISABLE_RGB_MATRIX_SOLID_REACTIVE_CROSS) || !defined(DISABLE_RGB_MATRIX_SOLID_REAC
   3:quantum/rgb_matrix_animations/solid_reactive_cross.h **** 
   4:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #        ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_CROSS
   5:quantum/rgb_matrix_animations/solid_reactive_cross.h **** RGB_MATRIX_EFFECT(SOLID_REACTIVE_CROSS)
   6:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #        endif
   7:quantum/rgb_matrix_animations/solid_reactive_cross.h **** 
   8:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #        ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_MULTICROSS
   9:quantum/rgb_matrix_animations/solid_reactive_cross.h **** RGB_MATRIX_EFFECT(SOLID_REACTIVE_MULTICROSS)
  10:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #        endif
  11:quantum/rgb_matrix_animations/solid_reactive_cross.h **** 
  12:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  13:quantum/rgb_matrix_animations/solid_reactive_cross.h **** 
  14:quantum/rgb_matrix_animations/solid_reactive_cross.h **** static HSV SOLID_REACTIVE_CROSS_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint16_t tick) 
 1350              		.loc 18 14 100 is_stmt 1 view -0
 1351              		.cfi_startproc
 1352              		@ args = 4, pretend = 0, frame = 16
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 1354              		.loc 18 14 100 is_stmt 0 view .LVU357
 1355 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1356              		.cfi_def_cfa_offset 24
 1357              		.cfi_offset 4, -8
 1358              		.cfi_offset 14, -4
 1359              	.LVL113:
  15:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     uint16_t effect = tick + dist;
 1360              		.loc 18 15 5 is_stmt 1 view .LVU358
  16:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dx              = dx < 0 ? dx * -1 : dx;
 1361              		.loc 18 16 40 is_stmt 0 view .LVU359
 1362 0002 0029     		cmp	r1, #0
 1363 0004 B8BF     		it	lt
 1364 0006 4942     		rsblt	r1, r1, #0
 1365              	.LVL114:
  17:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dy              = dy < 0 ? dy * -1 : dy;
 1366              		.loc 18 17 40 view .LVU360
 1367 0008 002A     		cmp	r2, #0
 1368 000a B8BF     		it	lt
 1369 000c 5242     		rsblt	r2, r2, #0
 1370              	.LVL115:
  18:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dx              = dx * 16 > 255 ? 255 : dx * 16;
 1371              		.loc 18 18 26 view .LVU361
 1372 000e 09B2     		sxth	r1, r1
 1373 0010 0901     		lsls	r1, r1, #4
  19:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dy              = dy * 16 > 255 ? 255 : dy * 16;
 1374              		.loc 18 19 26 view .LVU362
 1375 0012 12B2     		sxth	r2, r2
 1376 0014 1201     		lsls	r2, r2, #4
  18:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dx              = dx * 16 > 255 ? 255 : dx * 16;
 1377              		.loc 18 18 43 view .LVU363
 1378 0016 FF29     		cmp	r1, #255
  15:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dx              = dx < 0 ? dx * -1 : dx;
 1379              		.loc 18 15 14 view .LVU364
 1380 0018 BDF81840 		ldrh	r4, [sp, #24]
  14:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     uint16_t effect = tick + dist;
 1381              		.loc 18 14 100 view .LVU365
 1382 001c 0190     		str	r0, [sp, #4]
 1383              	.LVL116:
  18:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dy              = dy * 16 > 255 ? 255 : dy * 16;
 1384              		.loc 18 18 43 view .LVU366
 1385 001e A8BF     		it	ge
 1386 0020 FF21     		movge	r1, #255
 1387              		.loc 18 19 43 view .LVU367
 1388 0022 FF2A     		cmp	r2, #255
 1389 0024 A8BF     		it	ge
 1390 0026 FF22     		movge	r2, #255
  20:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     effect += dx > dy ? dy : dx;
 1391              		.loc 18 20 28 view .LVU368
 1392 0028 09B2     		sxth	r1, r1
  15:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dx              = dx < 0 ? dx * -1 : dx;
 1393              		.loc 18 15 14 view .LVU369
 1394 002a 2344     		add	r3, r3, r4
 1395              	.LVL117:
  16:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dy              = dy < 0 ? dy * -1 : dy;
 1396              		.loc 18 16 5 is_stmt 1 view .LVU370
  17:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dx              = dx * 16 > 255 ? 255 : dx * 16;
 1397              		.loc 18 17 5 view .LVU371
  18:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     dy              = dy * 16 > 255 ? 255 : dy * 16;
 1398              		.loc 18 18 5 view .LVU372
  19:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     effect += dx > dy ? dy : dx;
 1399              		.loc 18 19 5 view .LVU373
 1400              		.loc 18 20 5 view .LVU374
 1401              		.loc 18 20 28 is_stmt 0 view .LVU375
 1402 002c 14B2     		sxth	r4, r2
 1403 002e A142     		cmp	r1, r4
 1404 0030 A8BF     		it	ge
 1405 0032 2146     		movge	r1, r4
 1406              		.loc 18 20 12 view .LVU376
 1407 0034 11FA83F3 		uxtah	r3, r1, r3
 1408              	.LVL118:
 1409              		.loc 18 20 12 view .LVU377
 1410 0038 9BB2     		uxth	r3, r3
 1411              	.LVL119:
  21:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     if (effect > 255) effect = 255;
 1412              		.loc 18 21 5 is_stmt 1 view .LVU378
  22:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     hsv.v = qadd8(hsv.v, 255 - effect);
 1413              		.loc 18 22 5 view .LVU379
 1414              	.LBB158:
 1415              	.LBI158:
  23:./lib/lib8tion/math8.h **** {
 1416              		.loc 1 23 34 view .LVU380
 1417              	.LBB159:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1418              		.loc 1 26 5 view .LVU381
 1419              	.LBE159:
 1420              	.LBE158:
 1421              		.loc 18 22 13 is_stmt 0 view .LVU382
 1422 003a FF2B     		cmp	r3, #255
 1423 003c 28BF     		it	cs
 1424 003e FF23     		movcs	r3, #255
 1425              	.LVL120:
 1426              	.LBB163:
 1427              	.LBB160:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1428              		.loc 1 26 20 view .LVU383
 1429 0040 C0F30740 		ubfx	r0, r0, #16, #8
 1430              	.LBE160:
 1431              	.LBE163:
 1432              		.loc 18 22 13 view .LVU384
 1433 0044 DB43     		mvns	r3, r3
 1434              	.LBB164:
 1435              	.LBB161:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1436              		.loc 1 26 14 view .LVU385
 1437 0046 50FA83F3 		uxtab	r3, r0, r3
 1438              	.LVL121:
  27:./lib/lib8tion/math8.h ****     return t;
 1439              		.loc 1 27 5 is_stmt 1 view .LVU386
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1440              		.loc 1 28 5 view .LVU387
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1441              		.loc 1 28 5 is_stmt 0 view .LVU388
 1442              	.LBE161:
 1443              	.LBE164:
  23:quantum/rgb_matrix_animations/solid_reactive_cross.h ****     return hsv;
 1444              		.loc 18 23 5 is_stmt 1 view .LVU389
 1445              	.LBB165:
 1446              	.LBB162:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1447              		.loc 1 28 12 is_stmt 0 view .LVU390
 1448 004a FF2B     		cmp	r3, #255
 1449 004c 28BF     		it	cs
 1450 004e FF23     		movcs	r3, #255
 1451              	.LVL122:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1452              		.loc 1 28 12 view .LVU391
 1453 0050 8DF80630 		strb	r3, [sp, #6]
 1454              	.LBE162:
 1455              	.LBE165:
 1456              		.loc 18 23 12 view .LVU392
 1457 0054 019B     		ldr	r3, [sp, #4]
 1458 0056 0020     		movs	r0, #0
 1459 0058 DAB2     		uxtb	r2, r3
 1460              	.LVL123:
 1461              		.loc 18 23 12 view .LVU393
 1462 005a 62F30700 		bfi	r0, r2, #0, #8
 1463 005e C3F30722 		ubfx	r2, r3, #8, #8
 1464 0062 62F30F20 		bfi	r0, r2, #8, #8
 1465 0066 C3F30743 		ubfx	r3, r3, #16, #8
 1466 006a 63F31740 		bfi	r0, r3, #16, #8
  24:quantum/rgb_matrix_animations/solid_reactive_cross.h **** }
 1467              		.loc 18 24 1 view .LVU394
 1468 006e 04B0     		add	sp, sp, #16
 1469              		.cfi_def_cfa_offset 8
 1470              		@ sp needed
 1471 0070 10BD     		pop	{r4, pc}
 1472              		.loc 18 24 1 view .LVU395
 1473              		.cfi_endproc
 1474              	.LFE136:
 1476              		.section	.text.SOLID_REACTIVE_NEXUS_math,"ax",%progbits
 1477              		.align	1
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1481              		.fpu fpv4-sp-d16
 1483              	SOLID_REACTIVE_NEXUS_math:
 1484              	.LVL124:
 1485              	.LFB139:
 1486              		.file 19 "quantum/rgb_matrix_animations/solid_reactive_nexus.h"
   1:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
   2:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #    if !defined(DISABLE_RGB_MATRIX_SOLID_REACTIVE_NEXUS) || !defined(DISABLE_RGB_MATRIX_SOLID_REAC
   3:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** 
   4:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #        ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_NEXUS
   5:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** RGB_MATRIX_EFFECT(SOLID_REACTIVE_NEXUS)
   6:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #        endif
   7:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** 
   8:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #        ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_MULTINEXUS
   9:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** RGB_MATRIX_EFFECT(SOLID_REACTIVE_MULTINEXUS)
  10:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #        endif
  11:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** 
  12:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  13:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** 
  14:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** static HSV SOLID_REACTIVE_NEXUS_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint16_t tick) 
 1487              		.loc 19 14 100 is_stmt 1 view -0
 1488              		.cfi_startproc
 1489              		@ args = 4, pretend = 0, frame = 16
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491              		.loc 19 14 100 is_stmt 0 view .LVU397
 1492 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1493              		.cfi_def_cfa_offset 24
 1494              		.cfi_offset 4, -8
 1495              		.cfi_offset 14, -4
 1496              	.LVL125:
  15:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     uint16_t effect = tick - dist;
  16:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     if (effect > 255) effect = 255;
  17:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     if (dist > 72) effect = 255;
 1497              		.loc 19 17 8 view .LVU398
 1498 0002 482B     		cmp	r3, #72
  14:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     uint16_t effect = tick - dist;
 1499              		.loc 19 14 100 view .LVU399
 1500 0004 0190     		str	r0, [sp, #4]
 1501              	.LVL126:
  14:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     uint16_t effect = tick - dist;
 1502              		.loc 19 14 100 view .LVU400
 1503 0006 C0F30740 		ubfx	r0, r0, #16, #8
 1504              	.LVL127:
  15:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     uint16_t effect = tick - dist;
 1505              		.loc 19 15 5 is_stmt 1 view .LVU401
  16:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     if (dist > 72) effect = 255;
 1506              		.loc 19 16 5 view .LVU402
 1507              		.loc 19 17 5 view .LVU403
 1508              		.loc 19 17 8 is_stmt 0 view .LVU404
 1509 000a 30D8     		bhi	.L63
  15:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     uint16_t effect = tick - dist;
 1510              		.loc 19 15 14 view .LVU405
 1511 000c BDF81840 		ldrh	r4, [sp, #24]
 1512 0010 E31A     		subs	r3, r4, r3
 1513              	.LVL128:
  15:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     uint16_t effect = tick - dist;
 1514              		.loc 19 15 14 view .LVU406
 1515 0012 9BB2     		uxth	r3, r3
 1516 0014 FF2B     		cmp	r3, #255
 1517 0016 28BF     		it	cs
 1518 0018 FF23     		movcs	r3, #255
 1519              	.L60:
 1520              	.LVL129:
  18:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     if ((dx > 8 || dx < -8) && (dy > 8 || dy < -8)) effect = 255;
 1521              		.loc 19 18 5 is_stmt 1 view .LVU407
 1522              		.loc 19 18 17 is_stmt 0 view .LVU408
 1523 001a 0831     		adds	r1, r1, #8
 1524              	.LVL130:
 1525              		.loc 19 18 8 view .LVU409
 1526 001c 89B2     		uxth	r1, r1
 1527 001e 1029     		cmp	r1, #16
 1528 0020 05D9     		bls	.L61
 1529              		.loc 19 18 40 discriminator 1 view .LVU410
 1530 0022 02F10801 		add	r1, r2, #8
 1531              		.loc 19 18 29 discriminator 1 view .LVU411
 1532 0026 89B2     		uxth	r1, r1
 1533              		.loc 19 18 60 discriminator 1 view .LVU412
 1534 0028 1129     		cmp	r1, #17
 1535 002a 28BF     		it	cs
 1536 002c FF23     		movcs	r3, #255
 1537              	.LVL131:
 1538              	.L61:
  19:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     hsv.v = qadd8(hsv.v, 255 - effect);
 1539              		.loc 19 19 5 is_stmt 1 view .LVU413
 1540              	.LBB166:
 1541              	.LBI166:
  23:./lib/lib8tion/math8.h **** {
 1542              		.loc 1 23 34 view .LVU414
 1543              	.LBB167:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1544              		.loc 1 26 5 view .LVU415
 1545              	.LBE167:
 1546              	.LBE166:
  20:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     hsv.h = rgb_matrix_config.hsv.h + dy / 4;
 1547              		.loc 19 20 37 is_stmt 0 view .LVU416
 1548 002e 1149     		ldr	r1, .L64
  19:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     hsv.h = rgb_matrix_config.hsv.h + dy / 4;
 1549              		.loc 19 19 13 view .LVU417
 1550 0030 DB43     		mvns	r3, r3
 1551              	.LVL132:
 1552              	.LBB172:
 1553              	.LBB168:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1554              		.loc 1 26 14 view .LVU418
 1555 0032 50FA83F3 		uxtab	r3, r0, r3
 1556              	.LVL133:
  27:./lib/lib8tion/math8.h ****     return t;
 1557              		.loc 1 27 5 is_stmt 1 view .LVU419
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1558              		.loc 1 28 5 view .LVU420
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1559              		.loc 1 28 5 is_stmt 0 view .LVU421
 1560              	.LBE168:
 1561              	.LBE172:
 1562              		.loc 19 20 5 is_stmt 1 view .LVU422
  21:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     return hsv;
 1563              		.loc 19 21 5 view .LVU423
  20:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     return hsv;
 1564              		.loc 19 20 37 is_stmt 0 view .LVU424
 1565 0036 002A     		cmp	r2, #0
 1566              	.LVL134:
  20:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     return hsv;
 1567              		.loc 19 20 37 view .LVU425
 1568 0038 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 1569 003a B8BF     		it	lt
 1570 003c 0332     		addlt	r2, r2, #3
 1571              	.LBB173:
 1572              	.LBB169:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1573              		.loc 1 28 12 view .LVU426
 1574 003e FF2B     		cmp	r3, #255
 1575              	.LBE169:
 1576              	.LBE173:
  20:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     return hsv;
 1577              		.loc 19 20 37 view .LVU427
 1578 0040 01EBA202 		add	r2, r1, r2, asr #2
 1579              	.LBB174:
 1580              	.LBB170:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1581              		.loc 1 28 12 view .LVU428
 1582 0044 28BF     		it	cs
 1583 0046 FF23     		movcs	r3, #255
 1584              	.LVL135:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1585              		.loc 1 28 12 view .LVU429
 1586              	.LBE170:
 1587              	.LBE174:
 1588              		.loc 19 21 12 view .LVU430
 1589 0048 8DF80420 		strb	r2, [sp, #4]
 1590              	.LBB175:
 1591              	.LBB171:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1592              		.loc 1 28 12 view .LVU431
 1593 004c 8DF80630 		strb	r3, [sp, #6]
 1594              	.LBE171:
 1595              	.LBE175:
 1596              		.loc 19 21 12 view .LVU432
 1597 0050 019B     		ldr	r3, [sp, #4]
 1598 0052 0020     		movs	r0, #0
 1599 0054 DAB2     		uxtb	r2, r3
 1600 0056 62F30700 		bfi	r0, r2, #0, #8
 1601 005a C3F30722 		ubfx	r2, r3, #8, #8
 1602 005e 62F30F20 		bfi	r0, r2, #8, #8
 1603 0062 C3F30743 		ubfx	r3, r3, #16, #8
 1604 0066 63F31740 		bfi	r0, r3, #16, #8
  22:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** }
 1605              		.loc 19 22 1 view .LVU433
 1606 006a 04B0     		add	sp, sp, #16
 1607              		.cfi_remember_state
 1608              		.cfi_def_cfa_offset 8
 1609              		@ sp needed
 1610 006c 10BD     		pop	{r4, pc}
 1611              	.LVL136:
 1612              	.L63:
 1613              		.cfi_restore_state
  17:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     if ((dx > 8 || dx < -8) && (dy > 8 || dy < -8)) effect = 255;
 1614              		.loc 19 17 27 view .LVU434
 1615 006e FF23     		movs	r3, #255
 1616              	.LVL137:
  17:quantum/rgb_matrix_animations/solid_reactive_nexus.h ****     if ((dx > 8 || dx < -8) && (dy > 8 || dy < -8)) effect = 255;
 1617              		.loc 19 17 27 view .LVU435
 1618 0070 D3E7     		b	.L60
 1619              	.L65:
 1620 0072 00BF     		.align	2
 1621              	.L64:
 1622 0074 00000000 		.word	rgb_matrix_config
 1623              		.cfi_endproc
 1624              	.LFE139:
 1626              		.section	.text.SPLASH_math,"ax",%progbits
 1627              		.align	1
 1628              		.global	SPLASH_math
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
 1632              		.fpu fpv4-sp-d16
 1634              	SPLASH_math:
 1635              	.LVL138:
 1636              	.LFB142:
 1637              		.file 20 "quantum/rgb_matrix_animations/splash_anim.h"
   1:quantum/rgb_matrix_animations/splash_anim.h **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
   2:quantum/rgb_matrix_animations/splash_anim.h **** #    if !defined(DISABLE_RGB_MATRIX_SPLASH) || !defined(DISABLE_RGB_MATRIX_MULTISPLASH)
   3:quantum/rgb_matrix_animations/splash_anim.h **** 
   4:quantum/rgb_matrix_animations/splash_anim.h **** #        ifndef DISABLE_RGB_MATRIX_SPLASH
   5:quantum/rgb_matrix_animations/splash_anim.h **** RGB_MATRIX_EFFECT(SPLASH)
   6:quantum/rgb_matrix_animations/splash_anim.h **** #        endif
   7:quantum/rgb_matrix_animations/splash_anim.h **** 
   8:quantum/rgb_matrix_animations/splash_anim.h **** #        ifndef DISABLE_RGB_MATRIX_MULTISPLASH
   9:quantum/rgb_matrix_animations/splash_anim.h **** RGB_MATRIX_EFFECT(MULTISPLASH)
  10:quantum/rgb_matrix_animations/splash_anim.h **** #        endif
  11:quantum/rgb_matrix_animations/splash_anim.h **** 
  12:quantum/rgb_matrix_animations/splash_anim.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  13:quantum/rgb_matrix_animations/splash_anim.h **** 
  14:quantum/rgb_matrix_animations/splash_anim.h **** HSV SPLASH_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint16_t tick) {
 1638              		.loc 20 14 79 is_stmt 1 view -0
 1639              		.cfi_startproc
 1640              		@ args = 4, pretend = 0, frame = 16
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              		@ link register save eliminated.
 1643              		.loc 20 14 79 is_stmt 0 view .LVU437
 1644 0000 84B0     		sub	sp, sp, #16
 1645              		.cfi_def_cfa_offset 16
 1646              	.LVL139:
  15:quantum/rgb_matrix_animations/splash_anim.h ****     uint16_t effect = tick - dist;
 1647              		.loc 20 15 5 is_stmt 1 view .LVU438
 1648              	.LBB176:
 1649              	.LBB177:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1650              		.loc 1 26 20 is_stmt 0 view .LVU439
 1651 0002 C0F30741 		ubfx	r1, r0, #16, #8
 1652              	.LVL140:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1653              		.loc 1 26 20 view .LVU440
 1654              	.LBE177:
 1655              	.LBE176:
 1656              		.loc 20 15 14 view .LVU441
 1657 0006 BDF81020 		ldrh	r2, [sp, #16]
 1658              	.LVL141:
  14:quantum/rgb_matrix_animations/splash_anim.h ****     uint16_t effect = tick - dist;
 1659              		.loc 20 14 79 view .LVU442
 1660 000a 0190     		str	r0, [sp, #4]
 1661              	.LVL142:
 1662              		.loc 20 15 14 view .LVU443
 1663 000c D31A     		subs	r3, r2, r3
 1664              	.LVL143:
 1665              		.loc 20 15 14 view .LVU444
 1666 000e 9BB2     		uxth	r3, r3
 1667              	.LVL144:
  16:quantum/rgb_matrix_animations/splash_anim.h ****     if (effect > 255) effect = 255;
 1668              		.loc 20 16 5 is_stmt 1 view .LVU445
  17:quantum/rgb_matrix_animations/splash_anim.h ****     hsv.h += effect;
 1669              		.loc 20 17 5 view .LVU446
 1670              		.loc 20 17 11 is_stmt 0 view .LVU447
 1671 0010 FF2B     		cmp	r3, #255
 1672 0012 28BF     		it	cs
 1673 0014 FF23     		movcs	r3, #255
 1674              	.LVL145:
 1675              		.loc 20 17 11 view .LVU448
 1676 0016 DBB2     		uxtb	r3, r3
 1677              	.LVL146:
  18:quantum/rgb_matrix_animations/splash_anim.h ****     hsv.v = qadd8(hsv.v, 255 - effect);
 1678              		.loc 20 18 5 is_stmt 1 view .LVU449
 1679              	.LBB183:
 1680              	.LBI176:
  23:./lib/lib8tion/math8.h **** {
 1681              		.loc 1 23 34 view .LVU450
 1682              	.LBB178:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1683              		.loc 1 26 5 view .LVU451
 1684              	.LBE178:
 1685              	.LBE183:
 1686              		.loc 20 18 13 is_stmt 0 view .LVU452
 1687 0018 DA43     		mvns	r2, r3
 1688              	.LBB184:
 1689              	.LBB179:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1690              		.loc 1 26 14 view .LVU453
 1691 001a 51FA82F2 		uxtab	r2, r1, r2
 1692              	.LVL147:
  27:./lib/lib8tion/math8.h ****     return t;
 1693              		.loc 1 27 5 is_stmt 1 view .LVU454
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1694              		.loc 1 28 5 view .LVU455
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1695              		.loc 1 28 5 is_stmt 0 view .LVU456
 1696              	.LBE179:
 1697              	.LBE184:
  19:quantum/rgb_matrix_animations/splash_anim.h ****     return hsv;
 1698              		.loc 20 19 5 is_stmt 1 view .LVU457
 1699              	.LBB185:
 1700              	.LBB180:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1701              		.loc 1 28 12 is_stmt 0 view .LVU458
 1702 001e FF2A     		cmp	r2, #255
 1703              	.LBE180:
 1704              	.LBE185:
  17:quantum/rgb_matrix_animations/splash_anim.h ****     hsv.v = qadd8(hsv.v, 255 - effect);
 1705              		.loc 20 17 11 view .LVU459
 1706 0020 53FA80F0 		uxtab	r0, r3, r0
 1707              	.LBB186:
 1708              	.LBB181:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1709              		.loc 1 28 12 view .LVU460
 1710 0024 28BF     		it	cs
 1711 0026 FF22     		movcs	r2, #255
 1712              	.LVL148:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1713              		.loc 1 28 12 view .LVU461
 1714              	.LBE181:
 1715              	.LBE186:
 1716              		.loc 20 19 12 view .LVU462
 1717 0028 8DF80400 		strb	r0, [sp, #4]
 1718              	.LVL149:
 1719              	.LBB187:
 1720              	.LBB182:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1721              		.loc 1 28 12 view .LVU463
 1722 002c 8DF80620 		strb	r2, [sp, #6]
 1723              	.LBE182:
 1724              	.LBE187:
 1725              		.loc 20 19 12 view .LVU464
 1726 0030 019B     		ldr	r3, [sp, #4]
 1727              	.LVL150:
 1728              		.loc 20 19 12 view .LVU465
 1729 0032 0020     		movs	r0, #0
 1730 0034 DAB2     		uxtb	r2, r3
 1731 0036 62F30700 		bfi	r0, r2, #0, #8
 1732 003a C3F30722 		ubfx	r2, r3, #8, #8
 1733 003e 62F30F20 		bfi	r0, r2, #8, #8
 1734 0042 C3F30743 		ubfx	r3, r3, #16, #8
 1735 0046 63F31740 		bfi	r0, r3, #16, #8
  20:quantum/rgb_matrix_animations/splash_anim.h **** }
 1736              		.loc 20 20 1 view .LVU466
 1737 004a 04B0     		add	sp, sp, #16
 1738              		.cfi_def_cfa_offset 0
 1739              	.LVL151:
 1740              		.loc 20 20 1 view .LVU467
 1741              		@ sp needed
 1742 004c 7047     		bx	lr
 1743              		.cfi_endproc
 1744              	.LFE142:
 1746              		.section	.text.SOLID_SPLASH_math,"ax",%progbits
 1747              		.align	1
 1748              		.global	SOLID_SPLASH_math
 1749              		.syntax unified
 1750              		.thumb
 1751              		.thumb_func
 1752              		.fpu fpv4-sp-d16
 1754              	SOLID_SPLASH_math:
 1755              	.LVL152:
 1756              	.LFB145:
 1757              		.file 21 "quantum/rgb_matrix_animations/solid_splash_anim.h"
   1:quantum/rgb_matrix_animations/solid_splash_anim.h **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
   2:quantum/rgb_matrix_animations/solid_splash_anim.h **** #    if !defined(DISABLE_RGB_MATRIX_SOLID_SPLASH) || !defined(DISABLE_RGB_MATRIX_SOLID_MULTISPLASH)
   3:quantum/rgb_matrix_animations/solid_splash_anim.h **** 
   4:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        ifndef DISABLE_RGB_MATRIX_SOLID_SPLASH
   5:quantum/rgb_matrix_animations/solid_splash_anim.h **** RGB_MATRIX_EFFECT(SOLID_SPLASH)
   6:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        endif
   7:quantum/rgb_matrix_animations/solid_splash_anim.h **** 
   8:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        ifndef DISABLE_RGB_MATRIX_SOLID_MULTISPLASH
   9:quantum/rgb_matrix_animations/solid_splash_anim.h **** RGB_MATRIX_EFFECT(SOLID_MULTISPLASH)
  10:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        endif
  11:quantum/rgb_matrix_animations/solid_splash_anim.h **** 
  12:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  13:quantum/rgb_matrix_animations/solid_splash_anim.h **** 
  14:quantum/rgb_matrix_animations/solid_splash_anim.h **** HSV SOLID_SPLASH_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint16_t tick) {
 1758              		.loc 21 14 85 is_stmt 1 view -0
 1759              		.cfi_startproc
 1760              		@ args = 4, pretend = 0, frame = 16
 1761              		@ frame_needed = 0, uses_anonymous_args = 0
 1762              		@ link register save eliminated.
 1763              		.loc 21 14 85 is_stmt 0 view .LVU469
 1764 0000 84B0     		sub	sp, sp, #16
 1765              		.cfi_def_cfa_offset 16
 1766              	.LVL153:
  15:quantum/rgb_matrix_animations/solid_splash_anim.h ****     uint16_t effect = tick - dist;
 1767              		.loc 21 15 5 is_stmt 1 view .LVU470
 1768              		.loc 21 15 14 is_stmt 0 view .LVU471
 1769 0002 BDF81020 		ldrh	r2, [sp, #16]
 1770              	.LVL154:
  14:quantum/rgb_matrix_animations/solid_splash_anim.h ****     uint16_t effect = tick - dist;
 1771              		.loc 21 14 85 view .LVU472
 1772 0006 0190     		str	r0, [sp, #4]
 1773              	.LVL155:
 1774              		.loc 21 15 14 view .LVU473
 1775 0008 D21A     		subs	r2, r2, r3
 1776 000a 92B2     		uxth	r2, r2
 1777              	.LVL156:
  16:quantum/rgb_matrix_animations/solid_splash_anim.h ****     if (effect > 255) effect = 255;
 1778              		.loc 21 16 5 is_stmt 1 view .LVU474
  17:quantum/rgb_matrix_animations/solid_splash_anim.h ****     hsv.v = qadd8(hsv.v, 255 - effect);
 1779              		.loc 21 17 5 view .LVU475
 1780              	.LBB188:
 1781              	.LBI188:
  23:./lib/lib8tion/math8.h **** {
 1782              		.loc 1 23 34 view .LVU476
 1783              	.LBB189:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1784              		.loc 1 26 5 view .LVU477
 1785              	.LBE189:
 1786              	.LBE188:
 1787              		.loc 21 17 13 is_stmt 0 view .LVU478
 1788 000c FF2A     		cmp	r2, #255
 1789 000e 28BF     		it	cs
 1790 0010 FF22     		movcs	r2, #255
 1791              	.LVL157:
 1792              	.LBB193:
 1793              	.LBB190:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1794              		.loc 1 26 20 view .LVU479
 1795 0012 C0F30740 		ubfx	r0, r0, #16, #8
 1796              	.LBE190:
 1797              	.LBE193:
 1798              		.loc 21 17 13 view .LVU480
 1799 0016 D243     		mvns	r2, r2
 1800              	.LBB194:
 1801              	.LBB191:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 1802              		.loc 1 26 14 view .LVU481
 1803 0018 50FA82F2 		uxtab	r2, r0, r2
 1804              	.LVL158:
  27:./lib/lib8tion/math8.h ****     return t;
 1805              		.loc 1 27 5 is_stmt 1 view .LVU482
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1806              		.loc 1 28 5 view .LVU483
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1807              		.loc 1 28 5 is_stmt 0 view .LVU484
 1808              	.LBE191:
 1809              	.LBE194:
  18:quantum/rgb_matrix_animations/solid_splash_anim.h ****     return hsv;
 1810              		.loc 21 18 5 is_stmt 1 view .LVU485
 1811              	.LBB195:
 1812              	.LBB192:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1813              		.loc 1 28 12 is_stmt 0 view .LVU486
 1814 001c FF2A     		cmp	r2, #255
 1815 001e 28BF     		it	cs
 1816 0020 FF22     		movcs	r2, #255
 1817              	.LVL159:
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 1818              		.loc 1 28 12 view .LVU487
 1819 0022 8DF80620 		strb	r2, [sp, #6]
 1820              	.LBE192:
 1821              	.LBE195:
 1822              		.loc 21 18 12 view .LVU488
 1823 0026 019B     		ldr	r3, [sp, #4]
 1824              	.LVL160:
 1825              		.loc 21 18 12 view .LVU489
 1826 0028 0020     		movs	r0, #0
 1827 002a DAB2     		uxtb	r2, r3
 1828 002c 62F30700 		bfi	r0, r2, #0, #8
 1829 0030 C3F30722 		ubfx	r2, r3, #8, #8
 1830 0034 62F30F20 		bfi	r0, r2, #8, #8
 1831 0038 C3F30743 		ubfx	r3, r3, #16, #8
 1832 003c 63F31740 		bfi	r0, r3, #16, #8
  19:quantum/rgb_matrix_animations/solid_splash_anim.h **** }
 1833              		.loc 21 19 1 view .LVU490
 1834 0040 04B0     		add	sp, sp, #16
 1835              		.cfi_def_cfa_offset 0
 1836              	.LVL161:
 1837              		.loc 21 19 1 view .LVU491
 1838              		@ sp needed
 1839 0042 7047     		bx	lr
 1840              		.cfi_endproc
 1841              	.LFE145:
 1843              		.section	.text.atan2_8,"ax",%progbits
 1844              		.align	1
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1848              		.fpu fpv4-sp-d16
 1850              	atan2_8:
 1851              	.LVL162:
 1852              	.LFB54:
 245:./lib/lib8tion/trig8.h **** 
 246:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of cos(x). This approximation never varies more than
 247:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 248:./lib/lib8tion/trig8.h **** ///
 249:./lib/lib8tion/trig8.h **** ///     float s = (cos(x) * 128.0) + 128;
 250:./lib/lib8tion/trig8.h **** ///
 251:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 252:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 253:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t cos8( uint8_t theta)
 254:./lib/lib8tion/trig8.h **** {
 255:./lib/lib8tion/trig8.h ****     return sin8( theta + 64);
 256:./lib/lib8tion/trig8.h **** }
 257:./lib/lib8tion/trig8.h **** 
 258:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of atan2(x).
 259:./lib/lib8tion/trig8.h **** /// @returns atan2, value between 0 and 255
 260:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t atan2_8(int16_t dy, int16_t dx)
 261:./lib/lib8tion/trig8.h **** {
 1853              		.loc 2 261 1 is_stmt 1 view -0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 0, uses_anonymous_args = 0
 1857              		@ link register save eliminated.
 262:./lib/lib8tion/trig8.h ****     if (dy == 0)
 1858              		.loc 2 262 5 view .LVU493
 1859              		.loc 2 262 8 is_stmt 0 view .LVU494
 1860 0000 28B9     		cbnz	r0, .L69
 263:./lib/lib8tion/trig8.h ****     {
 264:./lib/lib8tion/trig8.h ****         if (dx >= 0)
 1861              		.loc 2 264 9 is_stmt 1 view .LVU495
 1862              		.loc 2 264 12 is_stmt 0 view .LVU496
 1863 0002 0029     		cmp	r1, #0
 265:./lib/lib8tion/trig8.h ****             return 0;
 266:./lib/lib8tion/trig8.h ****         else
 267:./lib/lib8tion/trig8.h ****             return 128;
 1864              		.loc 2 267 20 view .LVU497
 1865 0004 ACBF     		ite	ge
 1866 0006 0023     		movge	r3, #0
 1867 0008 8023     		movlt	r3, #128
 1868              	.LVL163:
 1869              	.L70:
 268:./lib/lib8tion/trig8.h ****     }
 269:./lib/lib8tion/trig8.h **** 
 270:./lib/lib8tion/trig8.h ****     int16_t abs_y = dy > 0 ? dy : -dy;
 271:./lib/lib8tion/trig8.h ****     int8_t a;
 272:./lib/lib8tion/trig8.h **** 
 273:./lib/lib8tion/trig8.h ****     if (dx >= 0)
 274:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 275:./lib/lib8tion/trig8.h ****     else
 276:./lib/lib8tion/trig8.h ****         a = 96 - (32 * (dx + abs_y) / (abs_y - dx));
 277:./lib/lib8tion/trig8.h **** 
 278:./lib/lib8tion/trig8.h ****     if (dy < 0)
 279:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 280:./lib/lib8tion/trig8.h ****     return a;
 281:./lib/lib8tion/trig8.h **** }
 1870              		.loc 2 281 1 view .LVU498
 1871 000a 1846     		mov	r0, r3
 1872              	.LVL164:
 1873              		.loc 2 281 1 view .LVU499
 1874 000c 7047     		bx	lr
 1875              	.LVL165:
 1876              	.L69:
 1877              	.LBB198:
 1878              	.LBI198:
 260:./lib/lib8tion/trig8.h **** {
 1879              		.loc 2 260 20 is_stmt 1 view .LVU500
 1880              	.LBB199:
 270:./lib/lib8tion/trig8.h ****     int8_t a;
 1881              		.loc 2 270 5 view .LVU501
 271:./lib/lib8tion/trig8.h **** 
 1882              		.loc 2 271 5 view .LVU502
 273:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 1883              		.loc 2 273 5 view .LVU503
 270:./lib/lib8tion/trig8.h ****     int8_t a;
 1884              		.loc 2 270 33 is_stmt 0 view .LVU504
 1885 000e 80EAE072 		eor	r2, r0, r0, asr #31
 1886 0012 A2EBE072 		sub	r2, r2, r0, asr #31
 1887 0016 12B2     		sxth	r2, r2
 1888 0018 8B18     		adds	r3, r1, r2
 273:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 1889              		.loc 2 273 8 view .LVU505
 1890 001a 0029     		cmp	r1, #0
 274:./lib/lib8tion/trig8.h ****     else
 1891              		.loc 2 274 9 is_stmt 1 view .LVU506
 276:./lib/lib8tion/trig8.h **** 
 1892              		.loc 2 276 22 is_stmt 0 view .LVU507
 1893 001c B3BF     		iteet	lt
 1894 001e 5B01     		lsllt	r3, r3, #5
 274:./lib/lib8tion/trig8.h ****     else
 1895              		.loc 2 274 28 view .LVU508
 1896 0020 891A     		subge	r1, r1, r2
 1897              	.LVL166:
 274:./lib/lib8tion/trig8.h ****     else
 1898              		.loc 2 274 22 view .LVU509
 1899 0022 4901     		lslge	r1, r1, #5
 276:./lib/lib8tion/trig8.h **** 
 1900              		.loc 2 276 46 view .LVU510
 1901 0024 511A     		sublt	r1, r2, r1
 274:./lib/lib8tion/trig8.h ****     else
 1902              		.loc 2 274 37 view .LVU511
 1903 0026 ABBF     		itete	ge
 1904 0028 91FBF3F3 		sdivge	r3, r1, r3
 276:./lib/lib8tion/trig8.h **** 
 1905              		.loc 2 276 37 view .LVU512
 1906 002c 93FBF1F3 		sdivlt	r3, r3, r1
 274:./lib/lib8tion/trig8.h ****     else
 1907              		.loc 2 274 16 view .LVU513
 1908 0030 C3F12003 		rsbge	r3, r3, #32
 276:./lib/lib8tion/trig8.h **** 
 1909              		.loc 2 276 9 is_stmt 1 view .LVU514
 276:./lib/lib8tion/trig8.h **** 
 1910              		.loc 2 276 16 is_stmt 0 view .LVU515
 1911 0034 C3F16003 		rsblt	r3, r3, #96
 276:./lib/lib8tion/trig8.h **** 
 1912              		.loc 2 276 11 view .LVU516
 1913 0038 5BB2     		sxtb	r3, r3
 1914              	.LVL167:
 278:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 1915              		.loc 2 278 5 is_stmt 1 view .LVU517
 1916 003a DBB2     		uxtb	r3, r3
 278:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 1917              		.loc 2 278 8 is_stmt 0 view .LVU518
 1918 003c 0028     		cmp	r0, #0
 279:./lib/lib8tion/trig8.h ****     return a;
 1919              		.loc 2 279 9 is_stmt 1 view .LVU519
 279:./lib/lib8tion/trig8.h ****     return a;
 1920              		.loc 2 279 16 is_stmt 0 view .LVU520
 1921 003e BCBF     		itt	lt
 1922 0040 5B42     		rsblt	r3, r3, #0
 1923              	.LVL168:
 279:./lib/lib8tion/trig8.h ****     return a;
 1924              		.loc 2 279 16 view .LVU521
 1925 0042 DBB2     		uxtblt	r3, r3
 1926 0044 E1E7     		b	.L70
 1927              	.LBE199:
 1928              	.LBE198:
 1929              		.cfi_endproc
 1930              	.LFE54:
 1932              		.section	.text.BAND_PINWHEEL_SAT_math,"ax",%progbits
 1933              		.align	1
 1934              		.syntax unified
 1935              		.thumb
 1936              		.thumb_func
 1937              		.fpu fpv4-sp-d16
 1939              	BAND_PINWHEEL_SAT_math:
 1940              	.LVL169:
 1941              	.LFB95:
 1942              		.file 22 "quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h"
   1:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_PINWHEEL_SAT
   2:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_PINWHEEL_SAT)
   3:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** static HSV BAND_PINWHEEL_SAT_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1943              		.loc 22 5 82 is_stmt 1 view -0
 1944              		.cfi_startproc
 1945              		@ args = 0, pretend = 0, frame = 16
 1946              		@ frame_needed = 0, uses_anonymous_args = 0
 1947              		.loc 22 5 82 is_stmt 0 view .LVU523
 1948 0000 30B5     		push	{r4, r5, lr}
 1949              		.cfi_def_cfa_offset 12
 1950              		.cfi_offset 4, -12
 1951              		.cfi_offset 5, -8
 1952              		.cfi_offset 14, -4
 1953 0002 85B0     		sub	sp, sp, #20
 1954              		.cfi_def_cfa_offset 32
 1955 0004 C0F30725 		ubfx	r5, r0, #8, #8
 1956              	.LVL170:
   6:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h ****     hsv.s = scale8(hsv.s - time - atan2_8(dy, dx) * 3, hsv.s);
 1957              		.loc 22 6 5 is_stmt 1 view .LVU524
 1958              		.loc 22 6 26 is_stmt 0 view .LVU525
 1959 0008 EB1A     		subs	r3, r5, r3
 1960              	.LVL171:
   5:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h ****     hsv.s = scale8(hsv.s - time - atan2_8(dy, dx) * 3, hsv.s);
 1961              		.loc 22 5 82 view .LVU526
 1962 000a 0190     		str	r0, [sp, #4]
 1963              		.loc 22 6 35 view .LVU527
 1964 000c 1046     		mov	r0, r2
 1965              		.loc 22 6 26 view .LVU528
 1966 000e DCB2     		uxtb	r4, r3
 1967              		.loc 22 6 35 view .LVU529
 1968 0010 FFF7FEFF 		bl	atan2_8
 1969              	.LVL172:
 1970              	.LBB200:
 1971              	.LBI200:
  20:./lib/lib8tion/scale8.h **** {
 1972              		.loc 4 20 34 is_stmt 1 view .LVU530
 1973              	.LBB201:
 1974              		.loc 4 26 5 view .LVU531
 1975              		.loc 4 26 5 is_stmt 0 view .LVU532
 1976              	.LBE201:
 1977              	.LBE200:
   7:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1978              		.loc 22 7 5 is_stmt 1 view .LVU533
   6:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1979              		.loc 22 6 13 is_stmt 0 view .LVU534
 1980 0014 C0EB8013 		rsb	r3, r0, r0, lsl #6
 1981 0018 00EB8300 		add	r0, r0, r3, lsl #2
 1982              	.LVL173:
   6:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1983              		.loc 22 6 13 view .LVU535
 1984 001c 0444     		add	r4, r4, r0
 1985              	.LBB203:
 1986              	.LBB202:
 1987              		.loc 4 26 25 view .LVU536
 1988 001e E4B2     		uxtb	r4, r4
 1989 0020 14FB05F4 		smulbb	r4, r4, r5
 1990              		.loc 4 26 47 view .LVU537
 1991 0024 2412     		asrs	r4, r4, #8
 1992 0026 8DF80540 		strb	r4, [sp, #5]
 1993              	.LBE202:
 1994              	.LBE203:
 1995              		.loc 22 7 12 view .LVU538
 1996 002a 019B     		ldr	r3, [sp, #4]
 1997 002c 0020     		movs	r0, #0
 1998 002e DAB2     		uxtb	r2, r3
 1999 0030 62F30700 		bfi	r0, r2, #0, #8
 2000 0034 C3F30722 		ubfx	r2, r3, #8, #8
 2001 0038 62F30F20 		bfi	r0, r2, #8, #8
 2002 003c C3F30743 		ubfx	r3, r3, #16, #8
 2003 0040 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** }
 2004              		.loc 22 8 1 view .LVU539
 2005 0044 05B0     		add	sp, sp, #20
 2006              		.cfi_def_cfa_offset 12
 2007              		@ sp needed
 2008 0046 30BD     		pop	{r4, r5, pc}
 2009              		.cfi_endproc
 2010              	.LFE95:
 2012              		.section	.text.BAND_PINWHEEL_VAL_math,"ax",%progbits
 2013              		.align	1
 2014              		.syntax unified
 2015              		.thumb
 2016              		.thumb_func
 2017              		.fpu fpv4-sp-d16
 2019              	BAND_PINWHEEL_VAL_math:
 2020              	.LVL174:
 2021              	.LFB97:
 2022              		.file 23 "quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h"
   1:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_PINWHEEL_VAL
   2:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** RGB_MATRIX_EFFECT(BAND_PINWHEEL_VAL)
   3:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** static HSV BAND_PINWHEEL_VAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 2023              		.loc 23 5 82 is_stmt 1 view -0
 2024              		.cfi_startproc
 2025              		@ args = 0, pretend = 0, frame = 16
 2026              		@ frame_needed = 0, uses_anonymous_args = 0
 2027              		.loc 23 5 82 is_stmt 0 view .LVU541
 2028 0000 30B5     		push	{r4, r5, lr}
 2029              		.cfi_def_cfa_offset 12
 2030              		.cfi_offset 4, -12
 2031              		.cfi_offset 5, -8
 2032              		.cfi_offset 14, -4
 2033 0002 85B0     		sub	sp, sp, #20
 2034              		.cfi_def_cfa_offset 32
 2035 0004 C0F30745 		ubfx	r5, r0, #16, #8
 2036              	.LVL175:
   6:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h ****     hsv.v = scale8(hsv.v - time - atan2_8(dy, dx) * 3, hsv.v);
 2037              		.loc 23 6 5 is_stmt 1 view .LVU542
 2038              		.loc 23 6 26 is_stmt 0 view .LVU543
 2039 0008 EB1A     		subs	r3, r5, r3
 2040              	.LVL176:
   5:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h ****     hsv.v = scale8(hsv.v - time - atan2_8(dy, dx) * 3, hsv.v);
 2041              		.loc 23 5 82 view .LVU544
 2042 000a 0190     		str	r0, [sp, #4]
 2043              		.loc 23 6 35 view .LVU545
 2044 000c 1046     		mov	r0, r2
 2045              		.loc 23 6 26 view .LVU546
 2046 000e DCB2     		uxtb	r4, r3
 2047              		.loc 23 6 35 view .LVU547
 2048 0010 FFF7FEFF 		bl	atan2_8
 2049              	.LVL177:
 2050              	.LBB204:
 2051              	.LBI204:
  20:./lib/lib8tion/scale8.h **** {
 2052              		.loc 4 20 34 is_stmt 1 view .LVU548
 2053              	.LBB205:
 2054              		.loc 4 26 5 view .LVU549
 2055              		.loc 4 26 5 is_stmt 0 view .LVU550
 2056              	.LBE205:
 2057              	.LBE204:
   7:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h ****     return hsv;
 2058              		.loc 23 7 5 is_stmt 1 view .LVU551
   6:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h ****     return hsv;
 2059              		.loc 23 6 13 is_stmt 0 view .LVU552
 2060 0014 C0EB8013 		rsb	r3, r0, r0, lsl #6
 2061 0018 00EB8300 		add	r0, r0, r3, lsl #2
 2062              	.LVL178:
   6:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h ****     return hsv;
 2063              		.loc 23 6 13 view .LVU553
 2064 001c 0444     		add	r4, r4, r0
 2065              	.LBB207:
 2066              	.LBB206:
 2067              		.loc 4 26 25 view .LVU554
 2068 001e E4B2     		uxtb	r4, r4
 2069 0020 14FB05F4 		smulbb	r4, r4, r5
 2070              		.loc 4 26 47 view .LVU555
 2071 0024 2412     		asrs	r4, r4, #8
 2072 0026 8DF80640 		strb	r4, [sp, #6]
 2073              	.LBE206:
 2074              	.LBE207:
 2075              		.loc 23 7 12 view .LVU556
 2076 002a 019B     		ldr	r3, [sp, #4]
 2077 002c 0020     		movs	r0, #0
 2078 002e DAB2     		uxtb	r2, r3
 2079 0030 62F30700 		bfi	r0, r2, #0, #8
 2080 0034 C3F30722 		ubfx	r2, r3, #8, #8
 2081 0038 62F30F20 		bfi	r0, r2, #8, #8
 2082 003c C3F30743 		ubfx	r3, r3, #16, #8
 2083 0040 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** }
 2084              		.loc 23 8 1 view .LVU557
 2085 0044 05B0     		add	sp, sp, #20
 2086              		.cfi_def_cfa_offset 12
 2087              		@ sp needed
 2088 0046 30BD     		pop	{r4, r5, pc}
 2089              		.cfi_endproc
 2090              	.LFE97:
 2092              		.section	.text.BAND_SPIRAL_SAT_math,"ax",%progbits
 2093              		.align	1
 2094              		.syntax unified
 2095              		.thumb
 2096              		.thumb_func
 2097              		.fpu fpv4-sp-d16
 2099              	BAND_SPIRAL_SAT_math:
 2100              	.LVL179:
 2101              	.LFB99:
 2102              		.file 24 "quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h"
   1:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SPIRAL_SAT
   2:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_SPIRAL_SAT)
   3:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** static HSV BAND_SPIRAL_SAT_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 2103              		.loc 24 5 94 is_stmt 1 view -0
 2104              		.cfi_startproc
 2105              		@ args = 4, pretend = 0, frame = 16
 2106              		@ frame_needed = 0, uses_anonymous_args = 0
 2107              		.loc 24 5 94 is_stmt 0 view .LVU559
 2108 0000 30B5     		push	{r4, r5, lr}
 2109              		.cfi_def_cfa_offset 12
 2110              		.cfi_offset 4, -12
 2111              		.cfi_offset 5, -8
 2112              		.cfi_offset 14, -4
 2113 0002 85B0     		sub	sp, sp, #20
 2114              		.cfi_def_cfa_offset 32
 2115 0004 C0F30725 		ubfx	r5, r0, #8, #8
 2116              	.LVL180:
   6:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h ****     hsv.s = scale8(hsv.s + dist - time - atan2_8(dy, dx), hsv.s);
 2117              		.loc 24 6 5 is_stmt 1 view .LVU560
 2118              		.loc 24 6 33 is_stmt 0 view .LVU561
 2119 0008 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
   5:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h ****     hsv.s = scale8(hsv.s + dist - time - atan2_8(dy, dx), hsv.s);
 2120              		.loc 24 5 94 view .LVU562
 2121 000c 0190     		str	r0, [sp, #4]
 2122              		.loc 24 6 42 view .LVU563
 2123 000e 1046     		mov	r0, r2
 2124              		.loc 24 6 33 view .LVU564
 2125 0010 1C1B     		subs	r4, r3, r4
 2126              		.loc 24 6 42 view .LVU565
 2127 0012 FFF7FEFF 		bl	atan2_8
 2128              	.LVL181:
 2129              		.loc 24 6 33 view .LVU566
 2130 0016 2C44     		add	r4, r4, r5
 2131 0018 E4B2     		uxtb	r4, r4
 2132              	.LVL182:
 2133              	.LBB208:
 2134              	.LBI208:
  20:./lib/lib8tion/scale8.h **** {
 2135              		.loc 4 20 34 is_stmt 1 view .LVU567
 2136              	.LBB209:
 2137              		.loc 4 26 5 view .LVU568
 2138              		.loc 4 26 5 is_stmt 0 view .LVU569
 2139              	.LBE209:
 2140              	.LBE208:
   7:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h ****     return hsv;
 2141              		.loc 24 7 5 is_stmt 1 view .LVU570
   6:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h ****     return hsv;
 2142              		.loc 24 6 13 is_stmt 0 view .LVU571
 2143 001a 201A     		subs	r0, r4, r0
 2144              	.LVL183:
 2145              	.LBB211:
 2146              	.LBB210:
 2147              		.loc 4 26 25 view .LVU572
 2148 001c C0B2     		uxtb	r0, r0
 2149 001e 10FB05F0 		smulbb	r0, r0, r5
 2150              		.loc 4 26 47 view .LVU573
 2151 0022 0012     		asrs	r0, r0, #8
 2152 0024 8DF80500 		strb	r0, [sp, #5]
 2153              	.LBE210:
 2154              	.LBE211:
 2155              		.loc 24 7 12 view .LVU574
 2156 0028 019B     		ldr	r3, [sp, #4]
 2157 002a 0020     		movs	r0, #0
 2158 002c DAB2     		uxtb	r2, r3
 2159 002e 62F30700 		bfi	r0, r2, #0, #8
 2160 0032 C3F30722 		ubfx	r2, r3, #8, #8
 2161 0036 62F30F20 		bfi	r0, r2, #8, #8
 2162 003a C3F30743 		ubfx	r3, r3, #16, #8
 2163 003e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** }
 2164              		.loc 24 8 1 view .LVU575
 2165 0042 05B0     		add	sp, sp, #20
 2166              		.cfi_def_cfa_offset 12
 2167              		@ sp needed
 2168 0044 30BD     		pop	{r4, r5, pc}
 2169              		.loc 24 8 1 view .LVU576
 2170              		.cfi_endproc
 2171              	.LFE99:
 2173              		.section	.text.BAND_SPIRAL_VAL_math,"ax",%progbits
 2174              		.align	1
 2175              		.syntax unified
 2176              		.thumb
 2177              		.thumb_func
 2178              		.fpu fpv4-sp-d16
 2180              	BAND_SPIRAL_VAL_math:
 2181              	.LVL184:
 2182              	.LFB101:
 2183              		.file 25 "quantum/rgb_matrix_animations/colorband_spiral_val_anim.h"
   1:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SPIRAL_VAL
   2:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** RGB_MATRIX_EFFECT(BAND_SPIRAL_VAL)
   3:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** static HSV BAND_SPIRAL_VAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 2184              		.loc 25 5 94 is_stmt 1 view -0
 2185              		.cfi_startproc
 2186              		@ args = 4, pretend = 0, frame = 16
 2187              		@ frame_needed = 0, uses_anonymous_args = 0
 2188              		.loc 25 5 94 is_stmt 0 view .LVU578
 2189 0000 30B5     		push	{r4, r5, lr}
 2190              		.cfi_def_cfa_offset 12
 2191              		.cfi_offset 4, -12
 2192              		.cfi_offset 5, -8
 2193              		.cfi_offset 14, -4
 2194 0002 85B0     		sub	sp, sp, #20
 2195              		.cfi_def_cfa_offset 32
 2196 0004 C0F30745 		ubfx	r5, r0, #16, #8
 2197              	.LVL185:
   6:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h ****     hsv.v = scale8(hsv.v + dist - time - atan2_8(dy, dx), hsv.v);
 2198              		.loc 25 6 5 is_stmt 1 view .LVU579
 2199              		.loc 25 6 33 is_stmt 0 view .LVU580
 2200 0008 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
   5:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h ****     hsv.v = scale8(hsv.v + dist - time - atan2_8(dy, dx), hsv.v);
 2201              		.loc 25 5 94 view .LVU581
 2202 000c 0190     		str	r0, [sp, #4]
 2203              		.loc 25 6 42 view .LVU582
 2204 000e 1046     		mov	r0, r2
 2205              		.loc 25 6 33 view .LVU583
 2206 0010 1C1B     		subs	r4, r3, r4
 2207              		.loc 25 6 42 view .LVU584
 2208 0012 FFF7FEFF 		bl	atan2_8
 2209              	.LVL186:
 2210              		.loc 25 6 33 view .LVU585
 2211 0016 2C44     		add	r4, r4, r5
 2212 0018 E4B2     		uxtb	r4, r4
 2213              	.LVL187:
 2214              	.LBB212:
 2215              	.LBI212:
  20:./lib/lib8tion/scale8.h **** {
 2216              		.loc 4 20 34 is_stmt 1 view .LVU586
 2217              	.LBB213:
 2218              		.loc 4 26 5 view .LVU587
 2219              		.loc 4 26 5 is_stmt 0 view .LVU588
 2220              	.LBE213:
 2221              	.LBE212:
   7:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h ****     return hsv;
 2222              		.loc 25 7 5 is_stmt 1 view .LVU589
   6:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h ****     return hsv;
 2223              		.loc 25 6 13 is_stmt 0 view .LVU590
 2224 001a 201A     		subs	r0, r4, r0
 2225              	.LVL188:
 2226              	.LBB215:
 2227              	.LBB214:
 2228              		.loc 4 26 25 view .LVU591
 2229 001c C0B2     		uxtb	r0, r0
 2230 001e 10FB05F0 		smulbb	r0, r0, r5
 2231              		.loc 4 26 47 view .LVU592
 2232 0022 0012     		asrs	r0, r0, #8
 2233 0024 8DF80600 		strb	r0, [sp, #6]
 2234              	.LBE214:
 2235              	.LBE215:
 2236              		.loc 25 7 12 view .LVU593
 2237 0028 019B     		ldr	r3, [sp, #4]
 2238 002a 0020     		movs	r0, #0
 2239 002c DAB2     		uxtb	r2, r3
 2240 002e 62F30700 		bfi	r0, r2, #0, #8
 2241 0032 C3F30722 		ubfx	r2, r3, #8, #8
 2242 0036 62F30F20 		bfi	r0, r2, #8, #8
 2243 003a C3F30743 		ubfx	r3, r3, #16, #8
 2244 003e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** }
 2245              		.loc 25 8 1 view .LVU594
 2246 0042 05B0     		add	sp, sp, #20
 2247              		.cfi_def_cfa_offset 12
 2248              		@ sp needed
 2249 0044 30BD     		pop	{r4, r5, pc}
 2250              		.loc 25 8 1 view .LVU595
 2251              		.cfi_endproc
 2252              	.LFE101:
 2254              		.section	.text.CYCLE_PINWHEEL_math,"ax",%progbits
 2255              		.align	1
 2256              		.syntax unified
 2257              		.thumb
 2258              		.thumb_func
 2259              		.fpu fpv4-sp-d16
 2261              	CYCLE_PINWHEEL_math:
 2262              	.LVL189:
 2263              	.LFB115:
 2264              		.file 26 "quantum/rgb_matrix_animations/cycle_pinwheel_anim.h"
   1:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_PINWHEEL
   2:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** RGB_MATRIX_EFFECT(CYCLE_PINWHEEL)
   3:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** static HSV CYCLE_PINWHEEL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 2265              		.loc 26 5 79 is_stmt 1 view -0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 16
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              		.loc 26 5 79 is_stmt 0 view .LVU597
 2270 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 2271              		.cfi_def_cfa_offset 24
 2272              		.cfi_offset 4, -8
 2273              		.cfi_offset 14, -4
 2274              	.LVL190:
   6:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 2275              		.loc 26 6 5 is_stmt 1 view .LVU598
   5:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 2276              		.loc 26 5 79 is_stmt 0 view .LVU599
 2277 0002 0190     		str	r0, [sp, #4]
 2278              	.LVL191:
 2279              		.loc 26 6 13 view .LVU600
 2280 0004 1046     		mov	r0, r2
   5:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 2281              		.loc 26 5 79 view .LVU601
 2282 0006 1C46     		mov	r4, r3
 2283              		.loc 26 6 13 view .LVU602
 2284 0008 FFF7FEFF 		bl	atan2_8
 2285              	.LVL192:
   7:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h ****     return hsv;
 2286              		.loc 26 7 5 is_stmt 1 view .LVU603
   6:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 2287              		.loc 26 6 29 is_stmt 0 view .LVU604
 2288 000c 2044     		add	r0, r0, r4
 2289              	.LVL193:
 2290              		.loc 26 7 12 view .LVU605
 2291 000e 8DF80400 		strb	r0, [sp, #4]
 2292 0012 019B     		ldr	r3, [sp, #4]
 2293 0014 0020     		movs	r0, #0
 2294 0016 DAB2     		uxtb	r2, r3
 2295 0018 62F30700 		bfi	r0, r2, #0, #8
 2296 001c C3F30722 		ubfx	r2, r3, #8, #8
 2297 0020 62F30F20 		bfi	r0, r2, #8, #8
 2298 0024 C3F30743 		ubfx	r3, r3, #16, #8
 2299 0028 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** }
 2300              		.loc 26 8 1 view .LVU606
 2301 002c 04B0     		add	sp, sp, #16
 2302              		.cfi_def_cfa_offset 8
 2303              		@ sp needed
 2304 002e 10BD     		pop	{r4, pc}
 2305              		.cfi_endproc
 2306              	.LFE115:
 2308              		.section	.text.CYCLE_SPIRAL_math,"ax",%progbits
 2309              		.align	1
 2310              		.syntax unified
 2311              		.thumb
 2312              		.thumb_func
 2313              		.fpu fpv4-sp-d16
 2315              	CYCLE_SPIRAL_math:
 2316              	.LVL194:
 2317              	.LFB117:
 2318              		.file 27 "quantum/rgb_matrix_animations/cycle_spiral_anim.h"
   1:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_SPIRAL
   2:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** RGB_MATRIX_EFFECT(CYCLE_SPIRAL)
   3:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** static HSV CYCLE_SPIRAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 2319              		.loc 27 5 91 is_stmt 1 view -0
 2320              		.cfi_startproc
 2321              		@ args = 4, pretend = 0, frame = 16
 2322              		@ frame_needed = 0, uses_anonymous_args = 0
 2323              		.loc 27 5 91 is_stmt 0 view .LVU608
 2324 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 2325              		.cfi_def_cfa_offset 24
 2326              		.cfi_offset 4, -8
 2327              		.cfi_offset 14, -4
 2328              	.LVL195:
   6:quantum/rgb_matrix_animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 2329              		.loc 27 6 5 is_stmt 1 view .LVU609
 2330              		.loc 27 6 18 is_stmt 0 view .LVU610
 2331 0002 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
   5:quantum/rgb_matrix_animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 2332              		.loc 27 5 91 view .LVU611
 2333 0006 0190     		str	r0, [sp, #4]
 2334              	.LVL196:
 2335              		.loc 27 6 27 view .LVU612
 2336 0008 1046     		mov	r0, r2
 2337              		.loc 27 6 18 view .LVU613
 2338 000a 1C1B     		subs	r4, r3, r4
 2339              		.loc 27 6 27 view .LVU614
 2340 000c FFF7FEFF 		bl	atan2_8
 2341              	.LVL197:
 2342              		.loc 27 6 18 view .LVU615
 2343 0010 E4B2     		uxtb	r4, r4
 2344              	.LVL198:
   7:quantum/rgb_matrix_animations/cycle_spiral_anim.h ****     return hsv;
 2345              		.loc 27 7 5 is_stmt 1 view .LVU616
   6:quantum/rgb_matrix_animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 2346              		.loc 27 6 25 is_stmt 0 view .LVU617
 2347 0012 201A     		subs	r0, r4, r0
 2348              	.LVL199:
 2349              		.loc 27 7 12 view .LVU618
 2350 0014 8DF80400 		strb	r0, [sp, #4]
 2351 0018 019B     		ldr	r3, [sp, #4]
 2352 001a 0020     		movs	r0, #0
 2353 001c DAB2     		uxtb	r2, r3
 2354 001e 62F30700 		bfi	r0, r2, #0, #8
 2355 0022 C3F30722 		ubfx	r2, r3, #8, #8
 2356 0026 62F30F20 		bfi	r0, r2, #8, #8
 2357 002a C3F30743 		ubfx	r3, r3, #16, #8
 2358 002e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** }
 2359              		.loc 27 8 1 view .LVU619
 2360 0032 04B0     		add	sp, sp, #16
 2361              		.cfi_def_cfa_offset 8
 2362              		@ sp needed
 2363 0034 10BD     		pop	{r4, pc}
 2364              		.loc 27 8 1 view .LVU620
 2365              		.cfi_endproc
 2366              	.LFE117:
 2368              		.section	.text.eeconfig_read_rgb_matrix,"ax",%progbits
 2369              		.align	1
 2370              		.global	eeconfig_read_rgb_matrix
 2371              		.syntax unified
 2372              		.thumb
 2373              		.thumb_func
 2374              		.fpu fpv4-sp-d16
 2376              	eeconfig_read_rgb_matrix:
 2377              	.LFB148:
 2378              		.file 28 "quantum/rgb_matrix.c"
   1:quantum/rgb_matrix.c **** /* Copyright 2017 Jason Williams
   2:quantum/rgb_matrix.c ****  * Copyright 2017 Jack Humbert
   3:quantum/rgb_matrix.c ****  * Copyright 2018 Yiancar
   4:quantum/rgb_matrix.c ****  *
   5:quantum/rgb_matrix.c ****  * This program is free software: you can redistribute it and/or modify
   6:quantum/rgb_matrix.c ****  * it under the terms of the GNU General Public License as published by
   7:quantum/rgb_matrix.c ****  * the Free Software Foundation, either version 2 of the License, or
   8:quantum/rgb_matrix.c ****  * (at your option) any later version.
   9:quantum/rgb_matrix.c ****  *
  10:quantum/rgb_matrix.c ****  * This program is distributed in the hope that it will be useful,
  11:quantum/rgb_matrix.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:quantum/rgb_matrix.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:quantum/rgb_matrix.c ****  * GNU General Public License for more details.
  14:quantum/rgb_matrix.c ****  *
  15:quantum/rgb_matrix.c ****  * You should have received a copy of the GNU General Public License
  16:quantum/rgb_matrix.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:quantum/rgb_matrix.c ****  */
  18:quantum/rgb_matrix.c **** 
  19:quantum/rgb_matrix.c **** #include "rgb_matrix.h"
  20:quantum/rgb_matrix.c **** #include "progmem.h"
  21:quantum/rgb_matrix.c **** #include "config.h"
  22:quantum/rgb_matrix.c **** #include "eeprom.h"
  23:quantum/rgb_matrix.c **** #include <string.h>
  24:quantum/rgb_matrix.c **** #include <math.h>
  25:quantum/rgb_matrix.c **** 
  26:quantum/rgb_matrix.c **** #include "lib/lib8tion/lib8tion.h"
  27:quantum/rgb_matrix.c **** 
  28:quantum/rgb_matrix.c **** #ifndef RGB_MATRIX_CENTER
  29:quantum/rgb_matrix.c **** const point_t k_rgb_matrix_center = {112, 32};
  30:quantum/rgb_matrix.c **** #else
  31:quantum/rgb_matrix.c **** const point_t k_rgb_matrix_center = RGB_MATRIX_CENTER;
  32:quantum/rgb_matrix.c **** #endif
  33:quantum/rgb_matrix.c **** 
  34:quantum/rgb_matrix.c **** // Generic effect runners
  35:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_dx_dy_dist.h"
  36:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_dx_dy.h"
  37:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_i.h"
  38:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_sin_cos_i.h"
  39:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_reactive.h"
  40:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_reactive_splash.h"
  41:quantum/rgb_matrix.c **** 
  42:quantum/rgb_matrix.c **** // ------------------------------------------
  43:quantum/rgb_matrix.c **** // -----Begin rgb effect includes macros-----
  44:quantum/rgb_matrix.c **** #define RGB_MATRIX_EFFECT(name)
  45:quantum/rgb_matrix.c **** #define RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  46:quantum/rgb_matrix.c **** 
  47:quantum/rgb_matrix.c **** #include "rgb_matrix_animations/rgb_matrix_effects.inc"
  48:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_CUSTOM_KB
  49:quantum/rgb_matrix.c **** #    include "rgb_matrix_kb.inc"
  50:quantum/rgb_matrix.c **** #endif
  51:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_CUSTOM_USER
  52:quantum/rgb_matrix.c **** #    include "rgb_matrix_user.inc"
  53:quantum/rgb_matrix.c **** #endif
  54:quantum/rgb_matrix.c **** 
  55:quantum/rgb_matrix.c **** #undef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  56:quantum/rgb_matrix.c **** #undef RGB_MATRIX_EFFECT
  57:quantum/rgb_matrix.c **** // -----End rgb effect includes macros-------
  58:quantum/rgb_matrix.c **** // ------------------------------------------
  59:quantum/rgb_matrix.c **** 
  60:quantum/rgb_matrix.c **** #if defined(RGB_DISABLE_AFTER_TIMEOUT) && !defined(RGB_DISABLE_TIMEOUT)
  61:quantum/rgb_matrix.c **** #    define RGB_DISABLE_TIMEOUT (RGB_DISABLE_AFTER_TIMEOUT * 1200)
  62:quantum/rgb_matrix.c **** #endif
  63:quantum/rgb_matrix.c **** 
  64:quantum/rgb_matrix.c **** #ifndef RGB_DISABLE_TIMEOUT
  65:quantum/rgb_matrix.c **** #    define RGB_DISABLE_TIMEOUT 0
  66:quantum/rgb_matrix.c **** #endif
  67:quantum/rgb_matrix.c **** 
  68:quantum/rgb_matrix.c **** #ifndef RGB_DISABLE_WHEN_USB_SUSPENDED
  69:quantum/rgb_matrix.c **** #    define RGB_DISABLE_WHEN_USB_SUSPENDED false
  70:quantum/rgb_matrix.c **** #endif
  71:quantum/rgb_matrix.c **** 
  72:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_MAXIMUM_BRIGHTNESS) || RGB_MATRIX_MAXIMUM_BRIGHTNESS > UINT8_MAX
  73:quantum/rgb_matrix.c **** #    undef RGB_MATRIX_MAXIMUM_BRIGHTNESS
  74:quantum/rgb_matrix.c **** #    define RGB_MATRIX_MAXIMUM_BRIGHTNESS UINT8_MAX
  75:quantum/rgb_matrix.c **** #endif
  76:quantum/rgb_matrix.c **** 
  77:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_HUE_STEP)
  78:quantum/rgb_matrix.c **** #    define RGB_MATRIX_HUE_STEP 8
  79:quantum/rgb_matrix.c **** #endif
  80:quantum/rgb_matrix.c **** 
  81:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_SAT_STEP)
  82:quantum/rgb_matrix.c **** #    define RGB_MATRIX_SAT_STEP 16
  83:quantum/rgb_matrix.c **** #endif
  84:quantum/rgb_matrix.c **** 
  85:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_VAL_STEP)
  86:quantum/rgb_matrix.c **** #    define RGB_MATRIX_VAL_STEP 16
  87:quantum/rgb_matrix.c **** #endif
  88:quantum/rgb_matrix.c **** 
  89:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_SPD_STEP)
  90:quantum/rgb_matrix.c **** #    define RGB_MATRIX_SPD_STEP 16
  91:quantum/rgb_matrix.c **** #endif
  92:quantum/rgb_matrix.c **** 
  93:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_MODE)
  94:quantum/rgb_matrix.c **** #    ifndef DISABLE_RGB_MATRIX_CYCLE_LEFT_RIGHT
  95:quantum/rgb_matrix.c **** #        define RGB_MATRIX_STARTUP_MODE RGB_MATRIX_CYCLE_LEFT_RIGHT
  96:quantum/rgb_matrix.c **** #    else
  97:quantum/rgb_matrix.c **** // fallback to solid colors if RGB_MATRIX_CYCLE_LEFT_RIGHT is disabled in userspace
  98:quantum/rgb_matrix.c **** #        define RGB_MATRIX_STARTUP_MODE RGB_MATRIX_SOLID_COLOR
  99:quantum/rgb_matrix.c **** #    endif
 100:quantum/rgb_matrix.c **** #endif
 101:quantum/rgb_matrix.c **** 
 102:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_HUE)
 103:quantum/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_HUE 0
 104:quantum/rgb_matrix.c **** #endif
 105:quantum/rgb_matrix.c **** 
 106:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_SAT)
 107:quantum/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_SAT UINT8_MAX
 108:quantum/rgb_matrix.c **** #endif
 109:quantum/rgb_matrix.c **** 
 110:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_VAL)
 111:quantum/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_VAL RGB_MATRIX_MAXIMUM_BRIGHTNESS
 112:quantum/rgb_matrix.c **** #endif
 113:quantum/rgb_matrix.c **** 
 114:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_SPD)
 115:quantum/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_SPD UINT8_MAX / 2
 116:quantum/rgb_matrix.c **** #endif
 117:quantum/rgb_matrix.c **** 
 118:quantum/rgb_matrix.c **** // globals
 119:quantum/rgb_matrix.c **** bool         g_suspend_state = false;
 120:quantum/rgb_matrix.c **** rgb_config_t rgb_matrix_config;  // TODO: would like to prefix this with g_ for global consistancy,
 121:quantum/rgb_matrix.c **** uint32_t     g_rgb_timer;
 122:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_FRAMEBUFFER_EFFECTS
 123:quantum/rgb_matrix.c **** uint8_t g_rgb_frame_buffer[MATRIX_ROWS][MATRIX_COLS] = {{0}};
 124:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_FRAMEBUFFER_EFFECTS
 125:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 126:quantum/rgb_matrix.c **** last_hit_t g_last_hit_tracker;
 127:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 128:quantum/rgb_matrix.c **** 
 129:quantum/rgb_matrix.c **** // internals
 130:quantum/rgb_matrix.c **** static uint8_t         rgb_last_enable   = UINT8_MAX;
 131:quantum/rgb_matrix.c **** static uint8_t         rgb_last_effect   = UINT8_MAX;
 132:quantum/rgb_matrix.c **** static effect_params_t rgb_effect_params = {0, 0xFF};
 133:quantum/rgb_matrix.c **** static rgb_task_states rgb_task_state    = SYNCING;
 134:quantum/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 135:quantum/rgb_matrix.c **** static uint32_t rgb_anykey_timer;
 136:quantum/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 137:quantum/rgb_matrix.c **** 
 138:quantum/rgb_matrix.c **** // double buffers
 139:quantum/rgb_matrix.c **** static uint32_t rgb_timer_buffer;
 140:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 141:quantum/rgb_matrix.c **** static last_hit_t last_hit_buffer;
 142:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 143:quantum/rgb_matrix.c **** 
 144:quantum/rgb_matrix.c **** void eeconfig_read_rgb_matrix(void) { eeprom_read_block(&rgb_matrix_config, EECONFIG_RGB_MATRIX, si
 2379              		.loc 28 144 37 is_stmt 1 view -0
 2380              		.cfi_startproc
 2381              		@ args = 0, pretend = 0, frame = 0
 2382              		@ frame_needed = 0, uses_anonymous_args = 0
 2383              		@ link register save eliminated.
 2384              		.loc 28 144 39 view .LVU622
 2385 0000 0822     		movs	r2, #8
 2386 0002 1C21     		movs	r1, #28
 2387 0004 0148     		ldr	r0, .L82
 2388 0006 FFF7FEBF 		b	eeprom_read_block
 2389              	.LVL200:
 2390              	.L83:
 2391 000a 00BF     		.align	2
 2392              	.L82:
 2393 000c 00000000 		.word	rgb_matrix_config
 2394              		.cfi_endproc
 2395              	.LFE148:
 2397              		.section	.text.eeconfig_update_rgb_matrix,"ax",%progbits
 2398              		.align	1
 2399              		.global	eeconfig_update_rgb_matrix
 2400              		.syntax unified
 2401              		.thumb
 2402              		.thumb_func
 2403              		.fpu fpv4-sp-d16
 2405              	eeconfig_update_rgb_matrix:
 2406              	.LFB149:
 145:quantum/rgb_matrix.c **** 
 146:quantum/rgb_matrix.c **** void eeconfig_update_rgb_matrix(void) { eeprom_update_block(&rgb_matrix_config, EECONFIG_RGB_MATRIX
 2407              		.loc 28 146 39 view -0
 2408              		.cfi_startproc
 2409              		@ args = 0, pretend = 0, frame = 0
 2410              		@ frame_needed = 0, uses_anonymous_args = 0
 2411              		@ link register save eliminated.
 2412              		.loc 28 146 41 view .LVU624
 2413 0000 0822     		movs	r2, #8
 2414 0002 1C21     		movs	r1, #28
 2415 0004 0148     		ldr	r0, .L85
 2416 0006 FFF7FEBF 		b	eeprom_update_block
 2417              	.LVL201:
 2418              	.L86:
 2419 000a 00BF     		.align	2
 2420              	.L85:
 2421 000c 00000000 		.word	rgb_matrix_config
 2422              		.cfi_endproc
 2423              	.LFE149:
 2425              		.section	.text.eeconfig_update_rgb_matrix_default,"ax",%progbits
 2426              		.align	1
 2427              		.global	eeconfig_update_rgb_matrix_default
 2428              		.syntax unified
 2429              		.thumb
 2430              		.thumb_func
 2431              		.fpu fpv4-sp-d16
 2433              	eeconfig_update_rgb_matrix_default:
 2434              	.LFB150:
 147:quantum/rgb_matrix.c **** 
 148:quantum/rgb_matrix.c **** void eeconfig_update_rgb_matrix_default(void) {
 2435              		.loc 28 148 47 view -0
 2436              		.cfi_startproc
 2437              		@ args = 0, pretend = 0, frame = 0
 2438              		@ frame_needed = 0, uses_anonymous_args = 0
 2439              		@ link register save eliminated.
 149:quantum/rgb_matrix.c ****     dprintf("eeconfig_update_rgb_matrix_default\n");
 2440              		.loc 28 149 52 view .LVU626
 150:quantum/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 2441              		.loc 28 150 5 view .LVU627
 151:quantum/rgb_matrix.c ****     rgb_matrix_config.mode   = RGB_MATRIX_STARTUP_MODE;
 2442              		.loc 28 151 5 view .LVU628
 150:quantum/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 2443              		.loc 28 150 30 is_stmt 0 view .LVU629
 2444 0000 074B     		ldr	r3, .L88
 2445 0002 1A46     		mov	r2, r3
 2446 0004 3521     		movs	r1, #53
 2447 0006 02F8011B 		strb	r1, [r2], #1
 152:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv    = (HSV){RGB_MATRIX_STARTUP_HUE, RGB_MATRIX_STARTUP_SAT, RGB_MATRIX_STA
 2448              		.loc 28 152 5 is_stmt 1 view .LVU630
 2449              		.loc 28 152 30 is_stmt 0 view .LVU631
 2450 000a 0649     		ldr	r1, .L88+4
 2451 000c 31F8080F 		ldrh	r0, [r1, #8]!	@ unaligned
 2452 0010 A3F80100 		strh	r0, [r3, #1]	@ unaligned
 2453 0014 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 2454 0016 9170     		strb	r1, [r2, #2]
 153:quantum/rgb_matrix.c ****     rgb_matrix_config.speed  = RGB_MATRIX_STARTUP_SPD;
 2455              		.loc 28 153 5 is_stmt 1 view .LVU632
 2456              		.loc 28 153 30 is_stmt 0 view .LVU633
 2457 0018 7F22     		movs	r2, #127
 2458 001a 1A71     		strb	r2, [r3, #4]
 154:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 2459              		.loc 28 154 5 is_stmt 1 view .LVU634
 2460 001c FFF7FEBF 		b	eeconfig_update_rgb_matrix
 2461              	.LVL202:
 2462              	.L89:
 2463              		.align	2
 2464              	.L88:
 2465 0020 00000000 		.word	rgb_matrix_config
 2466 0024 00000000 		.word	.LANCHOR0
 2467              		.cfi_endproc
 2468              	.LFE150:
 2470              		.section	.text.eeconfig_debug_rgb_matrix,"ax",%progbits
 2471              		.align	1
 2472              		.global	eeconfig_debug_rgb_matrix
 2473              		.syntax unified
 2474              		.thumb
 2475              		.thumb_func
 2476              		.fpu fpv4-sp-d16
 2478              	eeconfig_debug_rgb_matrix:
 2479              	.LFB151:
 155:quantum/rgb_matrix.c **** }
 156:quantum/rgb_matrix.c **** 
 157:quantum/rgb_matrix.c **** void eeconfig_debug_rgb_matrix(void) {
 2480              		.loc 28 157 38 view -0
 2481              		.cfi_startproc
 2482              		@ args = 0, pretend = 0, frame = 0
 2483              		@ frame_needed = 0, uses_anonymous_args = 0
 2484              		@ link register save eliminated.
 158:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config eprom\n");
 2485              		.loc 28 158 41 view .LVU636
 159:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.enable = %d\n", rgb_matrix_config.enable);
 2486              		.loc 28 159 73 view .LVU637
 160:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.mode = %d\n", rgb_matrix_config.mode);
 2487              		.loc 28 160 69 view .LVU638
 161:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.h = %d\n", rgb_matrix_config.hsv.h);
 2488              		.loc 28 161 71 view .LVU639
 162:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.s = %d\n", rgb_matrix_config.hsv.s);
 2489              		.loc 28 162 71 view .LVU640
 163:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.v = %d\n", rgb_matrix_config.hsv.v);
 2490              		.loc 28 163 71 view .LVU641
 164:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.speed = %d\n", rgb_matrix_config.speed);
 2491              		.loc 28 164 71 view .LVU642
 165:quantum/rgb_matrix.c **** }
 2492              		.loc 28 165 1 is_stmt 0 view .LVU643
 2493 0000 7047     		bx	lr
 2494              		.cfi_endproc
 2495              	.LFE151:
 2497              		.section	.text.rgb_matrix_map_row_column_to_led_kb,"ax",%progbits
 2498              		.align	1
 2499              		.weak	rgb_matrix_map_row_column_to_led_kb
 2500              		.syntax unified
 2501              		.thumb
 2502              		.thumb_func
 2503              		.fpu fpv4-sp-d16
 2505              	rgb_matrix_map_row_column_to_led_kb:
 2506              	.LVL203:
 2507              	.LFB152:
 166:quantum/rgb_matrix.c **** 
 167:quantum/rgb_matrix.c **** __attribute__((weak)) uint8_t rgb_matrix_map_row_column_to_led_kb(uint8_t row, uint8_t column, uint
 2508              		.loc 28 167 112 is_stmt 1 view -0
 2509              		.cfi_startproc
 2510              		@ args = 0, pretend = 0, frame = 0
 2511              		@ frame_needed = 0, uses_anonymous_args = 0
 2512              		@ link register save eliminated.
 2513              		.loc 28 167 114 view .LVU645
 2514              		.loc 28 167 1 is_stmt 0 view .LVU646
 2515 0000 0020     		movs	r0, #0
 2516              	.LVL204:
 2517              		.loc 28 167 1 view .LVU647
 2518 0002 7047     		bx	lr
 2519              		.cfi_endproc
 2520              	.LFE152:
 2522              		.section	.text.rgb_matrix_map_row_column_to_led,"ax",%progbits
 2523              		.align	1
 2524              		.global	rgb_matrix_map_row_column_to_led
 2525              		.syntax unified
 2526              		.thumb
 2527              		.thumb_func
 2528              		.fpu fpv4-sp-d16
 2530              	rgb_matrix_map_row_column_to_led:
 2531              	.LVL205:
 2532              	.LFB153:
 168:quantum/rgb_matrix.c **** 
 169:quantum/rgb_matrix.c **** uint8_t rgb_matrix_map_row_column_to_led(uint8_t row, uint8_t column, uint8_t *led_i) {
 2533              		.loc 28 169 87 is_stmt 1 view -0
 2534              		.cfi_startproc
 2535              		@ args = 0, pretend = 0, frame = 0
 2536              		@ frame_needed = 0, uses_anonymous_args = 0
 170:quantum/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 2537              		.loc 28 170 5 view .LVU649
 169:quantum/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 2538              		.loc 28 169 87 is_stmt 0 view .LVU650
 2539 0000 70B5     		push	{r4, r5, r6, lr}
 2540              		.cfi_def_cfa_offset 16
 2541              		.cfi_offset 4, -16
 2542              		.cfi_offset 5, -12
 2543              		.cfi_offset 6, -8
 2544              		.cfi_offset 14, -4
 169:quantum/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 2545              		.loc 28 169 87 view .LVU651
 2546 0002 0646     		mov	r6, r0
 2547 0004 0D46     		mov	r5, r1
 2548 0006 1446     		mov	r4, r2
 2549              		.loc 28 170 25 view .LVU652
 2550 0008 FFF7FEFF 		bl	rgb_matrix_map_row_column_to_led_kb
 2551              	.LVL206:
 171:quantum/rgb_matrix.c ****     uint8_t led_index = g_led_config.matrix_co[row][column];
 2552              		.loc 28 171 5 is_stmt 1 view .LVU653
 2553              		.loc 28 171 13 is_stmt 0 view .LVU654
 2554 000c 044B     		ldr	r3, .L97
 2555 000e 03EBC603 		add	r3, r3, r6, lsl #3
 2556 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 2557              	.LVL207:
 172:quantum/rgb_matrix.c ****     if (led_index != NO_LED) {
 2558              		.loc 28 172 5 is_stmt 1 view .LVU655
 2559              		.loc 28 172 8 is_stmt 0 view .LVU656
 2560 0014 FF2B     		cmp	r3, #255
 173:quantum/rgb_matrix.c ****         led_i[led_count] = led_index;
 2561              		.loc 28 173 9 is_stmt 1 view .LVU657
 2562              		.loc 28 173 26 is_stmt 0 view .LVU658
 2563 0016 1EBF     		ittt	ne
 2564 0018 2354     		strbne	r3, [r4, r0]
 174:quantum/rgb_matrix.c ****         led_count++;
 2565              		.loc 28 174 9 is_stmt 1 view .LVU659
 2566              		.loc 28 174 18 is_stmt 0 view .LVU660
 2567 001a 0130     		addne	r0, r0, #1
 2568              	.LVL208:
 2569              		.loc 28 174 18 view .LVU661
 2570 001c C0B2     		uxtbne	r0, r0
 2571              	.LVL209:
 175:quantum/rgb_matrix.c ****     }
 176:quantum/rgb_matrix.c ****     return led_count;
 2572              		.loc 28 176 5 is_stmt 1 view .LVU662
 177:quantum/rgb_matrix.c **** }
 2573              		.loc 28 177 1 is_stmt 0 view .LVU663
 2574 001e 70BD     		pop	{r4, r5, r6, pc}
 2575              	.LVL210:
 2576              	.L98:
 2577              		.loc 28 177 1 view .LVU664
 2578              		.align	2
 2579              	.L97:
 2580 0020 00000000 		.word	g_led_config
 2581              		.cfi_endproc
 2582              	.LFE153:
 2584              		.section	.text.rgb_matrix_update_pwm_buffers,"ax",%progbits
 2585              		.align	1
 2586              		.global	rgb_matrix_update_pwm_buffers
 2587              		.syntax unified
 2588              		.thumb
 2589              		.thumb_func
 2590              		.fpu fpv4-sp-d16
 2592              	rgb_matrix_update_pwm_buffers:
 2593              	.LFB154:
 178:quantum/rgb_matrix.c **** 
 179:quantum/rgb_matrix.c **** void rgb_matrix_update_pwm_buffers(void) { rgb_matrix_driver.flush(); }
 2594              		.loc 28 179 42 is_stmt 1 view -0
 2595              		.cfi_startproc
 2596              		@ args = 0, pretend = 0, frame = 0
 2597              		@ frame_needed = 0, uses_anonymous_args = 0
 2598              		@ link register save eliminated.
 2599              		.loc 28 179 44 view .LVU666
 2600              		.loc 28 179 61 is_stmt 0 view .LVU667
 2601 0000 014B     		ldr	r3, .L100
 2602              		.loc 28 179 44 view .LVU668
 2603 0002 DB68     		ldr	r3, [r3, #12]
 2604 0004 1847     		bx	r3	@ indirect register sibling call
 2605              	.LVL211:
 2606              	.L101:
 2607 0006 00BF     		.align	2
 2608              	.L100:
 2609 0008 00000000 		.word	rgb_matrix_driver
 2610              		.cfi_endproc
 2611              	.LFE154:
 2613              		.section	.text.rgb_matrix_set_color,"ax",%progbits
 2614              		.align	1
 2615              		.global	rgb_matrix_set_color
 2616              		.syntax unified
 2617              		.thumb
 2618              		.thumb_func
 2619              		.fpu fpv4-sp-d16
 2621              	rgb_matrix_set_color:
 2622              	.LVL212:
 2623              	.LFB155:
 180:quantum/rgb_matrix.c **** 
 181:quantum/rgb_matrix.c **** void rgb_matrix_set_color(int index, uint8_t red, uint8_t green, uint8_t blue) { rgb_matrix_driver.
 2624              		.loc 28 181 80 is_stmt 1 view -0
 2625              		.cfi_startproc
 2626              		@ args = 0, pretend = 0, frame = 0
 2627              		@ frame_needed = 0, uses_anonymous_args = 0
 2628              		@ link register save eliminated.
 2629              		.loc 28 181 82 view .LVU670
 2630              		.loc 28 181 80 is_stmt 0 view .LVU671
 2631 0000 10B4     		push	{r4}
 2632              		.cfi_def_cfa_offset 4
 2633              		.cfi_offset 4, -4
 2634              		.loc 28 181 99 view .LVU672
 2635 0002 034C     		ldr	r4, .L103
 2636              		.loc 28 181 82 view .LVU673
 2637 0004 6468     		ldr	r4, [r4, #4]
 2638 0006 A446     		mov	ip, r4
 2639              		.loc 28 181 1 view .LVU674
 2640 0008 5DF8044B 		ldr	r4, [sp], #4
 2641              		.cfi_restore 4
 2642              		.cfi_def_cfa_offset 0
 2643              		.loc 28 181 82 view .LVU675
 2644 000c 6047     		bx	ip	@ indirect register sibling call
 2645              	.LVL213:
 2646              	.L104:
 2647              		.loc 28 181 82 view .LVU676
 2648 000e 00BF     		.align	2
 2649              	.L103:
 2650 0010 00000000 		.word	rgb_matrix_driver
 2651              		.cfi_endproc
 2652              	.LFE155:
 2654              		.section	.text.effect_runner_dx_dy_dist,"ax",%progbits
 2655              		.align	1
 2656              		.global	effect_runner_dx_dy_dist
 2657              		.syntax unified
 2658              		.thumb
 2659              		.thumb_func
 2660              		.fpu fpv4-sp-d16
 2662              	effect_runner_dx_dy_dist:
 2663              	.LVL214:
 2664              	.LFB80:
 2665              		.file 29 "quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h"
   1:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** typedef HSV (*dx_dy_dist_f)(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time);
   4:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** bool effect_runner_dx_dy_dist(effect_params_t* params, dx_dy_dist_f effect_func) {
 2666              		.loc 29 5 82 is_stmt 1 view -0
 2667              		.cfi_startproc
 2668              		@ args = 0, pretend = 0, frame = 24
 2669              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2670              		.loc 29 6 5 view .LVU678
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2671              		.loc 29 5 82 is_stmt 0 view .LVU679
 2672 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2673              		.cfi_def_cfa_offset 36
 2674              		.cfi_offset 4, -36
 2675              		.cfi_offset 5, -32
 2676              		.cfi_offset 6, -28
 2677              		.cfi_offset 7, -24
 2678              		.cfi_offset 8, -20
 2679              		.cfi_offset 9, -16
 2680              		.cfi_offset 10, -12
 2681              		.cfi_offset 11, -8
 2682              		.cfi_offset 14, -4
   7:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
   8:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     uint8_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 2);
 2683              		.loc 29 8 61 view .LVU680
 2684 0004 344D     		ldr	r5, .L110
 2685              	.LBB216:
 2686              	.LBB217:
  27:./lib/lib8tion/scale8.h **** #endif
  28:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
  29:./lib/lib8tion/scale8.h **** #if defined(LIB8_ATTINY)
  30:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  31:./lib/lib8tion/scale8.h ****     uint8_t work=i;
  32:./lib/lib8tion/scale8.h **** #else
  33:./lib/lib8tion/scale8.h ****     uint8_t work=0;
  34:./lib/lib8tion/scale8.h **** #endif
  35:./lib/lib8tion/scale8.h ****     uint8_t cnt=0x80;
  36:./lib/lib8tion/scale8.h ****     asm volatile(
  37:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  38:./lib/lib8tion/scale8.h ****         "  inc %[scale]                 \n\t"
  39:./lib/lib8tion/scale8.h ****         "  breq DONE_%=                 \n\t"
  40:./lib/lib8tion/scale8.h ****         "  clr %[work]                  \n\t"
  41:./lib/lib8tion/scale8.h **** #endif
  42:./lib/lib8tion/scale8.h ****         "LOOP_%=:                       \n\t"
  43:./lib/lib8tion/scale8.h ****         /*"  sbrc %[scale], 0             \n\t"
  44:./lib/lib8tion/scale8.h ****         "  add %[work], %[i]            \n\t"
  45:./lib/lib8tion/scale8.h ****         "  ror %[work]                  \n\t"
  46:./lib/lib8tion/scale8.h ****         "  lsr %[scale]                 \n\t"
  47:./lib/lib8tion/scale8.h ****         "  clc                          \n\t"*/
  48:./lib/lib8tion/scale8.h ****         "  sbrc %[scale], 0             \n\t"
  49:./lib/lib8tion/scale8.h ****         "  add %[work], %[i]            \n\t"
  50:./lib/lib8tion/scale8.h ****         "  ror %[work]                  \n\t"
  51:./lib/lib8tion/scale8.h ****         "  lsr %[scale]                 \n\t"
  52:./lib/lib8tion/scale8.h ****         "  lsr %[cnt]                   \n\t"
  53:./lib/lib8tion/scale8.h ****         "brcc LOOP_%=                   \n\t"
  54:./lib/lib8tion/scale8.h ****         "DONE_%=:                       \n\t"
  55:./lib/lib8tion/scale8.h ****         : [work] "+r" (work), [cnt] "+r" (cnt)
  56:./lib/lib8tion/scale8.h ****         : [scale] "r" (scale), [i] "r" (i)
  57:./lib/lib8tion/scale8.h ****         :
  58:./lib/lib8tion/scale8.h ****       );
  59:./lib/lib8tion/scale8.h ****     return work;
  60:./lib/lib8tion/scale8.h **** #else
  61:./lib/lib8tion/scale8.h ****     asm volatile(
  62:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
  63:./lib/lib8tion/scale8.h ****         // Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0
  64:./lib/lib8tion/scale8.h ****         "mul %0, %1          \n\t"
  65:./lib/lib8tion/scale8.h ****         // Add i to r0, possibly setting the carry flag
  66:./lib/lib8tion/scale8.h ****         "add r0, %0         \n\t"
  67:./lib/lib8tion/scale8.h ****         // load the immediate 0 into i (note, this does _not_ touch any flags)
  68:./lib/lib8tion/scale8.h ****         "ldi %0, 0x00       \n\t"
  69:./lib/lib8tion/scale8.h ****         // walk and chew gum at the same time
  70:./lib/lib8tion/scale8.h ****         "adc %0, r1          \n\t"
  71:./lib/lib8tion/scale8.h **** #else
  72:./lib/lib8tion/scale8.h ****          /* Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0 */
  73:./lib/lib8tion/scale8.h ****          "mul %0, %1          \n\t"
  74:./lib/lib8tion/scale8.h ****          /* Move the high 8-bits of the product (r1) back to i */
  75:./lib/lib8tion/scale8.h ****          "mov %0, r1          \n\t"
  76:./lib/lib8tion/scale8.h ****          /* Restore r1 to "0"; it's expected to always be that */
  77:./lib/lib8tion/scale8.h **** #endif
  78:./lib/lib8tion/scale8.h ****          "clr __zero_reg__    \n\t"
  79:./lib/lib8tion/scale8.h **** 
  80:./lib/lib8tion/scale8.h ****          : "+a" (i)      /* writes to i */
  81:./lib/lib8tion/scale8.h ****          : "a"  (scale)  /* uses scale */
  82:./lib/lib8tion/scale8.h ****          : "r0", "r1"    /* clobbers r0, r1 */ );
  83:./lib/lib8tion/scale8.h **** 
  84:./lib/lib8tion/scale8.h ****     /* Return the result */
  85:./lib/lib8tion/scale8.h ****     return i;
  86:./lib/lib8tion/scale8.h **** #endif
  87:./lib/lib8tion/scale8.h **** #else
  88:./lib/lib8tion/scale8.h **** #error "No implementation for scale8 available."
  89:./lib/lib8tion/scale8.h **** #endif
  90:./lib/lib8tion/scale8.h **** }
  91:./lib/lib8tion/scale8.h **** 
  92:./lib/lib8tion/scale8.h **** 
  93:./lib/lib8tion/scale8.h **** ///  The "video" version of scale8 guarantees that the output will
  94:./lib/lib8tion/scale8.h **** ///  be only be zero if one or both of the inputs are zero.  If both
  95:./lib/lib8tion/scale8.h **** ///  inputs are non-zero, the output is guaranteed to be non-zero.
  96:./lib/lib8tion/scale8.h **** ///  This makes for better 'video'/LED dimming, at the cost of
  97:./lib/lib8tion/scale8.h **** ///  several additional cycles.
  98:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_video( uint8_t i, fract8 scale)
  99:./lib/lib8tion/scale8.h **** {
 100:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1 || defined(LIB8_ATTINY)
 101:./lib/lib8tion/scale8.h ****     uint8_t j = (((int)i * (int)scale) >> 8) + ((i&&scale)?1:0);
 102:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 103:./lib/lib8tion/scale8.h ****     // uint8_t j = (i == 0) ? 0 : (((int)i * (int)(scale) ) >> 8) + nonzeroscale;
 104:./lib/lib8tion/scale8.h ****     return j;
 105:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 106:./lib/lib8tion/scale8.h ****     uint8_t j=0;
 107:./lib/lib8tion/scale8.h ****     asm volatile(
 108:./lib/lib8tion/scale8.h ****         "  tst %[i]\n\t"
 109:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 110:./lib/lib8tion/scale8.h ****         "  mul %[i], %[scale]\n\t"
 111:./lib/lib8tion/scale8.h ****         "  mov %[j], r1\n\t"
 112:./lib/lib8tion/scale8.h ****         "  clr __zero_reg__\n\t"
 113:./lib/lib8tion/scale8.h ****         "  cpse %[scale], r1\n\t"
 114:./lib/lib8tion/scale8.h ****         "  subi %[j], 0xFF\n\t"
 115:./lib/lib8tion/scale8.h ****         "L_%=: \n\t"
 116:./lib/lib8tion/scale8.h ****         : [j] "+a" (j)
 117:./lib/lib8tion/scale8.h ****         : [i] "a" (i), [scale] "a" (scale)
 118:./lib/lib8tion/scale8.h ****         : "r0", "r1");
 119:./lib/lib8tion/scale8.h **** 
 120:./lib/lib8tion/scale8.h ****     return j;
 121:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 122:./lib/lib8tion/scale8.h ****     // asm volatile(
 123:./lib/lib8tion/scale8.h ****     //      "      tst %0           \n"
 124:./lib/lib8tion/scale8.h ****     //      "      breq L_%=        \n"
 125:./lib/lib8tion/scale8.h ****     //      "      mul %0, %1       \n"
 126:./lib/lib8tion/scale8.h ****     //      "      mov %0, r1       \n"
 127:./lib/lib8tion/scale8.h ****     //      "      add %0, %2       \n"
 128:./lib/lib8tion/scale8.h ****     //      "      clr __zero_reg__ \n"
 129:./lib/lib8tion/scale8.h ****     //      "L_%=:                  \n"
 130:./lib/lib8tion/scale8.h **** 
 131:./lib/lib8tion/scale8.h ****     //      : "+a" (i)
 132:./lib/lib8tion/scale8.h ****     //      : "a" (scale), "a" (nonzeroscale)
 133:./lib/lib8tion/scale8.h ****     //      : "r0", "r1");
 134:./lib/lib8tion/scale8.h **** 
 135:./lib/lib8tion/scale8.h ****     // // Return the result
 136:./lib/lib8tion/scale8.h ****     // return i;
 137:./lib/lib8tion/scale8.h **** #else
 138:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_video available."
 139:./lib/lib8tion/scale8.h **** #endif
 140:./lib/lib8tion/scale8.h **** }
 141:./lib/lib8tion/scale8.h **** 
 142:./lib/lib8tion/scale8.h **** 
 143:./lib/lib8tion/scale8.h **** /// This version of scale8 does not clean up the R1 register on AVR
 144:./lib/lib8tion/scale8.h **** /// If you are doing several 'scale8's in a row, use this, and
 145:./lib/lib8tion/scale8.h **** /// then explicitly call cleanup_R1.
 146:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
 147:./lib/lib8tion/scale8.h **** {
 148:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1
 149:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
 150:./lib/lib8tion/scale8.h ****     return (((uint16_t)i) * ((uint16_t)(scale)+1)) >> 8;
 151:./lib/lib8tion/scale8.h **** #else
 152:./lib/lib8tion/scale8.h ****     return ((int)i * (int)(scale) ) >> 8;
 153:./lib/lib8tion/scale8.h **** #endif
 154:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 155:./lib/lib8tion/scale8.h ****     asm volatile(
 156:./lib/lib8tion/scale8.h ****       #if (FASTLED_SCALE8_FIXED==1)
 157:./lib/lib8tion/scale8.h ****               // Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0
 158:./lib/lib8tion/scale8.h ****               "mul %0, %1          \n\t"
 159:./lib/lib8tion/scale8.h ****               // Add i to r0, possibly setting the carry flag
 160:./lib/lib8tion/scale8.h ****               "add r0, %0         \n\t"
 161:./lib/lib8tion/scale8.h ****               // load the immediate 0 into i (note, this does _not_ touch any flags)
 162:./lib/lib8tion/scale8.h ****               "ldi %0, 0x00       \n\t"
 163:./lib/lib8tion/scale8.h ****               // walk and chew gum at the same time
 164:./lib/lib8tion/scale8.h ****               "adc %0, r1          \n\t"
 165:./lib/lib8tion/scale8.h ****       #else
 166:./lib/lib8tion/scale8.h ****          /* Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0 */
 167:./lib/lib8tion/scale8.h ****          "mul %0, %1    \n\t"
 168:./lib/lib8tion/scale8.h ****          /* Move the high 8-bits of the product (r1) back to i */
 169:./lib/lib8tion/scale8.h ****          "mov %0, r1    \n\t"
 170:./lib/lib8tion/scale8.h ****       #endif
 171:./lib/lib8tion/scale8.h ****          /* R1 IS LEFT DIRTY HERE; YOU MUST ZERO IT OUT YOURSELF  */
 172:./lib/lib8tion/scale8.h ****          /* "clr __zero_reg__    \n\t" */
 173:./lib/lib8tion/scale8.h **** 
 174:./lib/lib8tion/scale8.h ****          : "+a" (i)      /* writes to i */
 175:./lib/lib8tion/scale8.h ****          : "a"  (scale)  /* uses scale */
 176:./lib/lib8tion/scale8.h ****          : "r0", "r1"    /* clobbers r0, r1 */ );
 177:./lib/lib8tion/scale8.h **** 
 178:./lib/lib8tion/scale8.h ****     // Return the result
 179:./lib/lib8tion/scale8.h ****     return i;
 180:./lib/lib8tion/scale8.h **** #else
 181:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_LEAVING_R1_DIRTY available."
 182:./lib/lib8tion/scale8.h **** #endif
 183:./lib/lib8tion/scale8.h **** }
 184:./lib/lib8tion/scale8.h **** 
 185:./lib/lib8tion/scale8.h **** 
 186:./lib/lib8tion/scale8.h **** /// This version of scale8_video does not clean up the R1 register on AVR
 187:./lib/lib8tion/scale8.h **** /// If you are doing several 'scale8_video's in a row, use this, and
 188:./lib/lib8tion/scale8.h **** /// then explicitly call cleanup_R1.
 189:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_video_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
 190:./lib/lib8tion/scale8.h **** {
 191:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1 || defined(LIB8_ATTINY)
 192:./lib/lib8tion/scale8.h ****     uint8_t j = (((int)i * (int)scale) >> 8) + ((i&&scale)?1:0);
 193:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 194:./lib/lib8tion/scale8.h ****     // uint8_t j = (i == 0) ? 0 : (((int)i * (int)(scale) ) >> 8) + nonzeroscale;
 195:./lib/lib8tion/scale8.h ****     return j;
 196:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 197:./lib/lib8tion/scale8.h ****     uint8_t j=0;
 198:./lib/lib8tion/scale8.h ****     asm volatile(
 199:./lib/lib8tion/scale8.h ****         "  tst %[i]\n\t"
 200:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 201:./lib/lib8tion/scale8.h ****         "  mul %[i], %[scale]\n\t"
 202:./lib/lib8tion/scale8.h ****         "  mov %[j], r1\n\t"
 203:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 204:./lib/lib8tion/scale8.h ****         "  subi %[j], 0xFF\n\t"
 205:./lib/lib8tion/scale8.h ****         "L_%=: \n\t"
 206:./lib/lib8tion/scale8.h ****         : [j] "+a" (j)
 207:./lib/lib8tion/scale8.h ****         : [i] "a" (i), [scale] "a" (scale)
 208:./lib/lib8tion/scale8.h ****         : "r0", "r1");
 209:./lib/lib8tion/scale8.h **** 
 210:./lib/lib8tion/scale8.h ****     return j;
 211:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 212:./lib/lib8tion/scale8.h ****     // asm volatile(
 213:./lib/lib8tion/scale8.h ****     //      "      tst %0           \n"
 214:./lib/lib8tion/scale8.h ****     //      "      breq L_%=        \n"
 215:./lib/lib8tion/scale8.h ****     //      "      mul %0, %1       \n"
 216:./lib/lib8tion/scale8.h ****     //      "      mov %0, r1       \n"
 217:./lib/lib8tion/scale8.h ****     //      "      add %0, %2       \n"
 218:./lib/lib8tion/scale8.h ****     //      "      clr __zero_reg__ \n"
 219:./lib/lib8tion/scale8.h ****     //      "L_%=:                  \n"
 220:./lib/lib8tion/scale8.h **** 
 221:./lib/lib8tion/scale8.h ****     //      : "+a" (i)
 222:./lib/lib8tion/scale8.h ****     //      : "a" (scale), "a" (nonzeroscale)
 223:./lib/lib8tion/scale8.h ****     //      : "r0", "r1");
 224:./lib/lib8tion/scale8.h **** 
 225:./lib/lib8tion/scale8.h ****     // // Return the result
 226:./lib/lib8tion/scale8.h ****     // return i;
 227:./lib/lib8tion/scale8.h **** #else
 228:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_video_LEAVING_R1_DIRTY available."
 229:./lib/lib8tion/scale8.h **** #endif
 230:./lib/lib8tion/scale8.h **** }
 231:./lib/lib8tion/scale8.h **** 
 232:./lib/lib8tion/scale8.h **** /// Clean up the r1 register after a series of *LEAVING_R1_DIRTY calls
 233:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE void cleanup_R1(void)
 234:./lib/lib8tion/scale8.h **** {
 235:./lib/lib8tion/scale8.h **** #if CLEANUP_R1_AVRASM == 1
 236:./lib/lib8tion/scale8.h ****     // Restore r1 to "0"; it's expected to always be that
 237:./lib/lib8tion/scale8.h ****     asm volatile( "clr __zero_reg__  \n\t" : : : "r1" );
 238:./lib/lib8tion/scale8.h **** #endif
 239:./lib/lib8tion/scale8.h **** }
 240:./lib/lib8tion/scale8.h **** 
 241:./lib/lib8tion/scale8.h **** 
 242:./lib/lib8tion/scale8.h **** /// scale a 16-bit unsigned value by an 8-bit value,
 243:./lib/lib8tion/scale8.h **** ///         considered as numerator of a fraction whose denominator
 244:./lib/lib8tion/scale8.h **** ///         is 256. In other words, it computes i * (scale / 256)
 245:./lib/lib8tion/scale8.h **** 
 246:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t scale16by8( uint16_t i, fract8 scale )
 247:./lib/lib8tion/scale8.h **** {
 248:./lib/lib8tion/scale8.h **** #if SCALE16BY8_C == 1
 249:./lib/lib8tion/scale8.h ****     uint16_t result;
 250:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 251:./lib/lib8tion/scale8.h ****     result = (i * (1+((uint16_t)scale))) >> 8;
 252:./lib/lib8tion/scale8.h **** #else
 253:./lib/lib8tion/scale8.h ****     result = (i * scale) / 256;
 2687              		.loc 4 253 17 view .LVU681
 2688 0006 354A     		ldr	r2, .L110+4
 2689              	.LBE217:
 2690              	.LBE216:
 2691              		.loc 29 8 20 view .LVU682
 2692 0008 2E79     		ldrb	r6, [r5, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
 2693              		.loc 29 6 5 view .LVU683
 2694 000a 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 2695              	.LBB221:
 2696              	.LBB218:
 2697              		.loc 4 253 17 view .LVU684
 2698 000c 7308     		lsrs	r3, r6, #1
 2699 000e 1688     		ldrh	r6, [r2]
 2700              	.LBE218:
 2701              	.LBE221:
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
 2702              		.loc 29 6 5 view .LVU685
 2703 0010 C4EB0414 		rsb	r4, r4, r4, lsl #4
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2704              		.loc 29 5 82 view .LVU686
 2705 0014 89B0     		sub	sp, sp, #36
 2706              		.cfi_def_cfa_offset 72
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
 2707              		.loc 29 6 5 view .LVU687
 2708 0016 E4B2     		uxtb	r4, r4
 2709              	.LVL215:
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
 2710              		.loc 29 6 5 is_stmt 1 view .LVU688
 2711              	.LBB222:
 2712              	.LBB219:
 2713              		.loc 4 253 17 is_stmt 0 view .LVU689
 2714 0018 5E43     		muls	r6, r3, r6
 2715              	.LBE219:
 2716              	.LBE222:
 2717              		.loc 29 8 13 view .LVU690
 2718 001a C6F30723 		ubfx	r3, r6, #8, #8
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
 2719              		.loc 29 6 5 view .LVU691
 2720 001e 04F10F07 		add	r7, r4, #15
 2721 0022 FFB2     		uxtb	r7, r7
 2722              	.LVL216:
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
 2723              		.loc 29 6 5 is_stmt 1 view .LVU692
 2724              		.loc 29 8 13 is_stmt 0 view .LVU693
 2725 0024 0293     		str	r3, [sp, #8]
 2726 0026 2E4B     		ldr	r3, .L110+8
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2727              		.loc 29 5 82 view .LVU694
 2728 0028 0391     		str	r1, [sp, #12]
 2729 002a 772F     		cmp	r7, #119
 2730 002c BB46     		mov	fp, r7
 2731 002e 8246     		mov	r10, r0
 2732 0030 28BF     		it	cs
 2733 0032 4FF0770B 		movcs	fp, #119
 2734              	.LVL217:
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
 2735              		.loc 29 6 44 is_stmt 1 view .LVU695
 2736              		.loc 29 8 5 view .LVU696
 2737              	.LBB223:
 2738              	.LBI216:
 246:./lib/lib8tion/scale8.h **** {
 2739              		.loc 4 246 35 view .LVU697
 2740              	.LBB220:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 2741              		.loc 4 249 5 view .LVU698
 2742              		.loc 4 253 5 view .LVU699
 254:./lib/lib8tion/scale8.h **** #endif
 255:./lib/lib8tion/scale8.h ****     return result;
 2743              		.loc 4 255 5 view .LVU700
 2744              		.loc 4 255 5 is_stmt 0 view .LVU701
 2745              	.LBE220:
 2746              	.LBE223:
   9:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2747              		.loc 29 9 5 is_stmt 1 view .LVU702
 2748              	.LBB224:
 2749              		.loc 29 9 10 view .LVU703
 2750              		.loc 29 9 10 is_stmt 0 view .LVU704
 2751 0036 03EB4408 		add	r8, r3, r4, lsl #1
 2752              	.LBB225:
  10:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2753              		.loc 29 10 9 view .LVU705
 2754 003a 03F5A379 		add	r9, r3, #326
 2755              	.LVL218:
 2756              	.L106:
 2757              		.loc 29 10 9 view .LVU706
 2758              	.LBE225:
   9:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2759              		.loc 29 9 5 discriminator 1 view .LVU707
 2760 003e E3B2     		uxtb	r3, r4
 2761 0040 9B45     		cmp	fp, r3
 2762 0042 06D8     		bhi	.L109
 2763              	.LBE224:
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  16:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
  17:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     return led_max < DRIVER_LED_TOTAL;
 2764              		.loc 29 17 5 is_stmt 1 view .LVU708
  18:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** }
 2765              		.loc 29 18 1 is_stmt 0 view .LVU709
 2766 0044 762F     		cmp	r7, #118
 2767 0046 8CBF     		ite	hi
 2768 0048 0020     		movhi	r0, #0
 2769 004a 0120     		movls	r0, #1
 2770 004c 09B0     		add	sp, sp, #36
 2771              		.cfi_remember_state
 2772              		.cfi_def_cfa_offset 36
 2773              		@ sp needed
 2774 004e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2775              	.LVL219:
 2776              	.L109:
 2777              		.cfi_restore_state
 2778              	.LBB227:
 2779              	.LBB226:
  10:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2780              		.loc 29 10 9 is_stmt 1 view .LVU710
 2781 0052 14F80920 		ldrb	r2, [r4, r9]	@ zero_extendqisi2
 2782 0056 9AF80130 		ldrb	r3, [r10, #1]	@ zero_extendqisi2
 2783 005a 1A42     		tst	r2, r3
 2784 005c 37D0     		beq	.L108
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2785              		.loc 29 11 9 view .LVU711
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2786              		.loc 29 12 45 is_stmt 0 view .LVU712
 2787 005e 98F85920 		ldrb	r2, [r8, #89]	@ zero_extendqisi2
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2788              		.loc 29 11 45 view .LVU713
 2789 0062 98F85810 		ldrb	r1, [r8, #88]	@ zero_extendqisi2
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2790              		.loc 29 12 48 view .LVU714
 2791 0066 203A     		subs	r2, r2, #32
 2792 0068 92B2     		uxth	r2, r2
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2793              		.loc 29 11 48 view .LVU715
 2794 006a 7039     		subs	r1, r1, #112
 2795 006c 89B2     		uxth	r1, r1
 2796              	.LVL220:
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2797              		.loc 29 12 9 is_stmt 1 view .LVU716
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
 2798              		.loc 29 13 9 view .LVU717
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
 2799              		.loc 29 13 44 is_stmt 0 view .LVU718
 2800 006e 12FB02F0 		smulbb	r0, r2, r2
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
 2801              		.loc 29 13 24 view .LVU719
 2802 0072 11FB0100 		smlabb	r0, r1, r1, r0
 2803 0076 80B2     		uxth	r0, r0
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
 2804              		.loc 29 13 44 view .LVU720
 2805 0078 0592     		str	r2, [sp, #20]
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
 2806              		.loc 29 13 24 view .LVU721
 2807 007a 0491     		str	r1, [sp, #16]
 2808 007c FFF7FEFF 		bl	sqrt16
 2809              	.LVL221:
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2810              		.loc 29 14 9 is_stmt 1 view .LVU722
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2811              		.loc 29 14 24 is_stmt 0 view .LVU723
 2812 0080 029B     		ldr	r3, [sp, #8]
 2813 0082 0093     		str	r3, [sp]
 2814 0084 95F801C0 		ldrb	ip, [r5, #1]	@ zero_extendqisi2
 2815 0088 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2816 008a 95F803E0 		ldrb	lr, [r5, #3]	@ zero_extendqisi2
 2817 008e 059A     		ldr	r2, [sp, #20]
 2818 0090 0499     		ldr	r1, [sp, #16]
 2819 0092 039E     		ldr	r6, [sp, #12]
 2820 0094 4CEA032C 		orr	ip, ip, r3, lsl #8
 2821 0098 12B2     		sxth	r2, r2
 2822 009a 0346     		mov	r3, r0
 2823 009c 09B2     		sxth	r1, r1
 2824 009e 4CEA0E40 		orr	r0, ip, lr, lsl #16
 2825              	.LVL222:
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2826              		.loc 29 14 24 view .LVU724
 2827 00a2 B047     		blx	r6
 2828              	.LVL223:
 2829 00a4 C0F30723 		ubfx	r3, r0, #8, #8
 2830 00a8 8DF81C00 		strb	r0, [sp, #28]
 2831 00ac C0F30740 		ubfx	r0, r0, #16, #8
 2832 00b0 8DF81D30 		strb	r3, [sp, #29]
 2833 00b4 8DF81E00 		strb	r0, [sp, #30]
 2834 00b8 0798     		ldr	r0, [sp, #28]
 2835 00ba FFF7FEFF 		bl	hsv_to_rgb
 2836              	.LVL224:
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
 2837              		.loc 29 15 9 is_stmt 1 view .LVU725
 2838 00be C0F30743 		ubfx	r3, r0, #16, #8
 2839 00c2 C2B2     		uxtb	r2, r0
 2840 00c4 C0F30721 		ubfx	r1, r0, #8, #8
 2841 00c8 2046     		mov	r0, r4
 2842 00ca FFF7FEFF 		bl	rgb_matrix_set_color
 2843              	.LVL225:
 2844              	.L108:
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
 2845              		.loc 29 15 9 is_stmt 0 view .LVU726
 2846 00ce 08F10208 		add	r8, r8, #2
 2847 00d2 0134     		adds	r4, r4, #1
 2848              	.LVL226:
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
 2849              		.loc 29 15 9 view .LVU727
 2850 00d4 B3E7     		b	.L106
 2851              	.L111:
 2852 00d6 00BF     		.align	2
 2853              	.L110:
 2854 00d8 00000000 		.word	rgb_matrix_config
 2855 00dc 00000000 		.word	g_rgb_timer
 2856 00e0 00000000 		.word	g_led_config
 2857              	.LBE226:
 2858              	.LBE227:
 2859              		.cfi_endproc
 2860              	.LFE80:
 2862              		.section	.text.BAND_SPIRAL_SAT,"ax",%progbits
 2863              		.align	1
 2864              		.global	BAND_SPIRAL_SAT
 2865              		.syntax unified
 2866              		.thumb
 2867              		.thumb_func
 2868              		.fpu fpv4-sp-d16
 2870              	BAND_SPIRAL_SAT:
 2871              	.LVL227:
 2872              	.LFB100:
   9:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** 
  10:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** bool BAND_SPIRAL_SAT(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &BAND_SPIRA
 2873              		.loc 24 10 47 is_stmt 1 view -0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 0
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 2877              		@ link register save eliminated.
 2878              		.loc 24 10 49 view .LVU729
 2879              		.loc 24 10 56 is_stmt 0 view .LVU730
 2880 0000 0149     		ldr	r1, .L113
 2881 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2882              	.LVL228:
 2883              	.L114:
 2884              		.loc 24 10 56 view .LVU731
 2885 0006 00BF     		.align	2
 2886              	.L113:
 2887 0008 00000000 		.word	BAND_SPIRAL_SAT_math
 2888              		.cfi_endproc
 2889              	.LFE100:
 2891              		.section	.text.BAND_SPIRAL_VAL,"ax",%progbits
 2892              		.align	1
 2893              		.global	BAND_SPIRAL_VAL
 2894              		.syntax unified
 2895              		.thumb
 2896              		.thumb_func
 2897              		.fpu fpv4-sp-d16
 2899              	BAND_SPIRAL_VAL:
 2900              	.LVL229:
 2901              	.LFB102:
   9:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** 
  10:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** bool BAND_SPIRAL_VAL(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &BAND_SPIRA
 2902              		.loc 25 10 47 is_stmt 1 view -0
 2903              		.cfi_startproc
 2904              		@ args = 0, pretend = 0, frame = 0
 2905              		@ frame_needed = 0, uses_anonymous_args = 0
 2906              		@ link register save eliminated.
 2907              		.loc 25 10 49 view .LVU733
 2908              		.loc 25 10 56 is_stmt 0 view .LVU734
 2909 0000 0149     		ldr	r1, .L116
 2910 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2911              	.LVL230:
 2912              	.L117:
 2913              		.loc 25 10 56 view .LVU735
 2914 0006 00BF     		.align	2
 2915              	.L116:
 2916 0008 00000000 		.word	BAND_SPIRAL_VAL_math
 2917              		.cfi_endproc
 2918              	.LFE102:
 2920              		.section	.text.CYCLE_OUT_IN,"ax",%progbits
 2921              		.align	1
 2922              		.global	CYCLE_OUT_IN
 2923              		.syntax unified
 2924              		.thumb
 2925              		.thumb_func
 2926              		.fpu fpv4-sp-d16
 2928              	CYCLE_OUT_IN:
 2929              	.LVL231:
 2930              	.LFB112:
   9:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** bool CYCLE_OUT_IN(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &CYCLE_OUT_IN_
 2931              		.loc 10 10 44 is_stmt 1 view -0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 0
 2934              		@ frame_needed = 0, uses_anonymous_args = 0
 2935              		@ link register save eliminated.
 2936              		.loc 10 10 46 view .LVU737
 2937              		.loc 10 10 53 is_stmt 0 view .LVU738
 2938 0000 0149     		ldr	r1, .L119
 2939 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2940              	.LVL232:
 2941              	.L120:
 2942              		.loc 10 10 53 view .LVU739
 2943 0006 00BF     		.align	2
 2944              	.L119:
 2945 0008 00000000 		.word	CYCLE_OUT_IN_math
 2946              		.cfi_endproc
 2947              	.LFE112:
 2949              		.section	.text.CYCLE_SPIRAL,"ax",%progbits
 2950              		.align	1
 2951              		.global	CYCLE_SPIRAL
 2952              		.syntax unified
 2953              		.thumb
 2954              		.thumb_func
 2955              		.fpu fpv4-sp-d16
 2957              	CYCLE_SPIRAL:
 2958              	.LVL233:
 2959              	.LFB118:
   9:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** bool CYCLE_SPIRAL(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &CYCLE_SPIRAL_
 2960              		.loc 27 10 44 is_stmt 1 view -0
 2961              		.cfi_startproc
 2962              		@ args = 0, pretend = 0, frame = 0
 2963              		@ frame_needed = 0, uses_anonymous_args = 0
 2964              		@ link register save eliminated.
 2965              		.loc 27 10 46 view .LVU741
 2966              		.loc 27 10 53 is_stmt 0 view .LVU742
 2967 0000 0149     		ldr	r1, .L122
 2968 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2969              	.LVL234:
 2970              	.L123:
 2971              		.loc 27 10 53 view .LVU743
 2972 0006 00BF     		.align	2
 2973              	.L122:
 2974 0008 00000000 		.word	CYCLE_SPIRAL_math
 2975              		.cfi_endproc
 2976              	.LFE118:
 2978              		.section	.text.effect_runner_dx_dy,"ax",%progbits
 2979              		.align	1
 2980              		.global	effect_runner_dx_dy
 2981              		.syntax unified
 2982              		.thumb
 2983              		.thumb_func
 2984              		.fpu fpv4-sp-d16
 2986              	effect_runner_dx_dy:
 2987              	.LVL235:
 2988              	.LFB81:
 2989              		.file 30 "quantum/rgb_matrix_runners/effect_runner_dx_dy.h"
   1:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** typedef HSV (*dx_dy_f)(HSV hsv, int16_t dx, int16_t dy, uint8_t time);
   4:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** bool effect_runner_dx_dy(effect_params_t* params, dx_dy_f effect_func) {
 2990              		.loc 30 5 72 is_stmt 1 view -0
 2991              		.cfi_startproc
 2992              		@ args = 0, pretend = 0, frame = 16
 2993              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2994              		.loc 30 6 5 view .LVU745
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2995              		.loc 30 5 72 is_stmt 0 view .LVU746
 2996 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2997              		.cfi_def_cfa_offset 36
 2998              		.cfi_offset 4, -36
 2999              		.cfi_offset 5, -32
 3000              		.cfi_offset 6, -28
 3001              		.cfi_offset 7, -24
 3002              		.cfi_offset 8, -20
 3003              		.cfi_offset 9, -16
 3004              		.cfi_offset 10, -12
 3005              		.cfi_offset 11, -8
 3006              		.cfi_offset 14, -4
   7:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
   8:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     uint8_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 2);
 3007              		.loc 30 8 61 view .LVU747
 3008 0004 2B4E     		ldr	r6, .L129
 3009              	.LBB228:
 3010              	.LBB229:
 253:./lib/lib8tion/scale8.h **** #endif
 3011              		.loc 4 253 17 view .LVU748
 3012 0006 2C4B     		ldr	r3, .L129+4
 3013              	.LBE229:
 3014              	.LBE228:
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
 3015              		.loc 30 6 5 view .LVU749
 3016 0008 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 3017              		.loc 30 8 20 view .LVU750
 3018 000a 3579     		ldrb	r5, [r6, #4]	@ zero_extendqisi2
 3019              	.LBB234:
 3020              	.LBB230:
 253:./lib/lib8tion/scale8.h **** #endif
 3021              		.loc 4 253 17 view .LVU751
 3022 000c 1B88     		ldrh	r3, [r3]
 3023              	.LBE230:
 3024              	.LBE234:
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
 3025              		.loc 30 6 5 view .LVU752
 3026 000e C4EB0414 		rsb	r4, r4, r4, lsl #4
 3027              	.LBB235:
 3028              	.LBB231:
 253:./lib/lib8tion/scale8.h **** #endif
 3029              		.loc 4 253 17 view .LVU753
 3030 0012 6D08     		lsrs	r5, r5, #1
 3031              	.LBE231:
 3032              	.LBE235:
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3033              		.loc 30 5 72 view .LVU754
 3034 0014 85B0     		sub	sp, sp, #20
 3035              		.cfi_def_cfa_offset 56
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
 3036              		.loc 30 6 5 view .LVU755
 3037 0016 E4B2     		uxtb	r4, r4
 3038              	.LVL236:
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
 3039              		.loc 30 6 5 is_stmt 1 view .LVU756
 3040              	.LBB236:
 3041              	.LBB232:
 253:./lib/lib8tion/scale8.h **** #endif
 3042              		.loc 4 253 17 is_stmt 0 view .LVU757
 3043 0018 5D43     		muls	r5, r3, r5
 3044              	.LBE232:
 3045              	.LBE236:
 3046              		.loc 30 8 13 view .LVU758
 3047 001a C5F30723 		ubfx	r3, r5, #8, #8
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
 3048              		.loc 30 6 5 view .LVU759
 3049 001e 04F10F07 		add	r7, r4, #15
 3050 0022 FFB2     		uxtb	r7, r7
 3051              	.LVL237:
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
 3052              		.loc 30 6 5 is_stmt 1 view .LVU760
 3053              		.loc 30 8 13 is_stmt 0 view .LVU761
 3054 0024 0093     		str	r3, [sp]
 3055 0026 254B     		ldr	r3, .L129+8
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3056              		.loc 30 5 72 view .LVU762
 3057 0028 0191     		str	r1, [sp, #4]
 3058 002a 772F     		cmp	r7, #119
 3059 002c BB46     		mov	fp, r7
 3060 002e 8246     		mov	r10, r0
 3061 0030 28BF     		it	cs
 3062 0032 4FF0770B 		movcs	fp, #119
 3063              	.LVL238:
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
 3064              		.loc 30 6 44 is_stmt 1 view .LVU763
 3065              		.loc 30 8 5 view .LVU764
 3066              	.LBB237:
 3067              	.LBI228:
 246:./lib/lib8tion/scale8.h **** {
 3068              		.loc 4 246 35 view .LVU765
 3069              	.LBB233:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 3070              		.loc 4 249 5 view .LVU766
 253:./lib/lib8tion/scale8.h **** #endif
 3071              		.loc 4 253 5 view .LVU767
 3072              		.loc 4 255 5 view .LVU768
 3073              		.loc 4 255 5 is_stmt 0 view .LVU769
 3074              	.LBE233:
 3075              	.LBE237:
   9:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3076              		.loc 30 9 5 is_stmt 1 view .LVU770
 3077              	.LBB238:
 3078              		.loc 30 9 10 view .LVU771
 3079              		.loc 30 9 10 is_stmt 0 view .LVU772
 3080 0036 03EB4408 		add	r8, r3, r4, lsl #1
 3081              	.LBB239:
  10:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3082              		.loc 30 10 9 view .LVU773
 3083 003a 03F5A379 		add	r9, r3, #326
 3084              	.LVL239:
 3085              	.L125:
 3086              		.loc 30 10 9 view .LVU774
 3087              	.LBE239:
   9:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3088              		.loc 30 9 5 discriminator 1 view .LVU775
 3089 003e E3B2     		uxtb	r3, r4
 3090 0040 9B45     		cmp	fp, r3
 3091 0042 06D8     		bhi	.L128
 3092              	.LBE238:
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         int16_t dx  = g_led_config.point[i].x - k_rgb_matrix_center.x;
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB     rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
  16:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     return led_max < DRIVER_LED_TOTAL;
 3093              		.loc 30 16 5 is_stmt 1 view .LVU776
  17:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** }
 3094              		.loc 30 17 1 is_stmt 0 view .LVU777
 3095 0044 762F     		cmp	r7, #118
 3096 0046 8CBF     		ite	hi
 3097 0048 0020     		movhi	r0, #0
 3098 004a 0120     		movls	r0, #1
 3099 004c 05B0     		add	sp, sp, #20
 3100              		.cfi_remember_state
 3101              		.cfi_def_cfa_offset 36
 3102              	.LVL240:
 3103              		.loc 30 17 1 view .LVU778
 3104              		@ sp needed
 3105 004e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3106              	.LVL241:
 3107              	.L128:
 3108              		.cfi_restore_state
 3109              	.LBB241:
 3110              	.LBB240:
  10:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3111              		.loc 30 10 9 is_stmt 1 view .LVU779
 3112 0052 14F80920 		ldrb	r2, [r4, r9]	@ zero_extendqisi2
 3113 0056 9AF80130 		ldrb	r3, [r10, #1]	@ zero_extendqisi2
 3114 005a 1A42     		tst	r2, r3
 3115 005c 25D0     		beq	.L127
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         int16_t dx  = g_led_config.point[i].x - k_rgb_matrix_center.x;
 3116              		.loc 30 11 9 view .LVU780
 3117              	.LVL242:
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB     rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
 3118              		.loc 30 12 9 view .LVU781
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3119              		.loc 30 13 9 view .LVU782
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3120              		.loc 30 13 23 is_stmt 0 view .LVU783
 3121 005e B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 3122 0060 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 3123 0062 96F803C0 		ldrb	ip, [r6, #3]	@ zero_extendqisi2
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB     rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
 3124              		.loc 30 12 44 view .LVU784
 3125 0066 98F85920 		ldrb	r2, [r8, #89]	@ zero_extendqisi2
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
 3126              		.loc 30 11 44 view .LVU785
 3127 006a 98F85810 		ldrb	r1, [r8, #88]	@ zero_extendqisi2
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3128              		.loc 30 13 23 view .LVU786
 3129 006e 019D     		ldr	r5, [sp, #4]
 3130 0070 40EA0320 		orr	r0, r0, r3, lsl #8
 3131 0074 203A     		subs	r2, r2, #32
 3132 0076 7039     		subs	r1, r1, #112
 3133 0078 009B     		ldr	r3, [sp]
 3134 007a 40EA0C40 		orr	r0, r0, ip, lsl #16
 3135 007e A847     		blx	r5
 3136              	.LVL243:
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3137              		.loc 30 13 23 view .LVU787
 3138 0080 C0F30723 		ubfx	r3, r0, #8, #8
 3139 0084 8DF80C00 		strb	r0, [sp, #12]
 3140 0088 C0F30740 		ubfx	r0, r0, #16, #8
 3141 008c 8DF80D30 		strb	r3, [sp, #13]
 3142 0090 8DF80E00 		strb	r0, [sp, #14]
 3143 0094 0398     		ldr	r0, [sp, #12]
 3144 0096 FFF7FEFF 		bl	hsv_to_rgb
 3145              	.LVL244:
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
 3146              		.loc 30 14 9 is_stmt 1 view .LVU788
 3147 009a C0F30743 		ubfx	r3, r0, #16, #8
 3148 009e C2B2     		uxtb	r2, r0
 3149 00a0 C0F30721 		ubfx	r1, r0, #8, #8
 3150 00a4 2046     		mov	r0, r4
 3151 00a6 FFF7FEFF 		bl	rgb_matrix_set_color
 3152              	.LVL245:
 3153              	.L127:
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
 3154              		.loc 30 14 9 is_stmt 0 view .LVU789
 3155 00aa 08F10208 		add	r8, r8, #2
 3156 00ae 0134     		adds	r4, r4, #1
 3157              	.LVL246:
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
 3158              		.loc 30 14 9 view .LVU790
 3159 00b0 C5E7     		b	.L125
 3160              	.L130:
 3161 00b2 00BF     		.align	2
 3162              	.L129:
 3163 00b4 00000000 		.word	rgb_matrix_config
 3164 00b8 00000000 		.word	g_rgb_timer
 3165 00bc 00000000 		.word	g_led_config
 3166              	.LBE240:
 3167              	.LBE241:
 3168              		.cfi_endproc
 3169              	.LFE81:
 3171              		.section	.text.BAND_PINWHEEL_SAT,"ax",%progbits
 3172              		.align	1
 3173              		.global	BAND_PINWHEEL_SAT
 3174              		.syntax unified
 3175              		.thumb
 3176              		.thumb_func
 3177              		.fpu fpv4-sp-d16
 3179              	BAND_PINWHEEL_SAT:
 3180              	.LVL247:
 3181              	.LFB96:
   9:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** 
  10:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** bool BAND_PINWHEEL_SAT(effect_params_t* params) { return effect_runner_dx_dy(params, &BAND_PINWHEEL
 3182              		.loc 22 10 49 is_stmt 1 view -0
 3183              		.cfi_startproc
 3184              		@ args = 0, pretend = 0, frame = 0
 3185              		@ frame_needed = 0, uses_anonymous_args = 0
 3186              		@ link register save eliminated.
 3187              		.loc 22 10 51 view .LVU792
 3188              		.loc 22 10 58 is_stmt 0 view .LVU793
 3189 0000 0149     		ldr	r1, .L132
 3190 0002 FFF7FEBF 		b	effect_runner_dx_dy
 3191              	.LVL248:
 3192              	.L133:
 3193              		.loc 22 10 58 view .LVU794
 3194 0006 00BF     		.align	2
 3195              	.L132:
 3196 0008 00000000 		.word	BAND_PINWHEEL_SAT_math
 3197              		.cfi_endproc
 3198              	.LFE96:
 3200              		.section	.text.BAND_PINWHEEL_VAL,"ax",%progbits
 3201              		.align	1
 3202              		.global	BAND_PINWHEEL_VAL
 3203              		.syntax unified
 3204              		.thumb
 3205              		.thumb_func
 3206              		.fpu fpv4-sp-d16
 3208              	BAND_PINWHEEL_VAL:
 3209              	.LVL249:
 3210              	.LFB98:
   9:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** 
  10:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** bool BAND_PINWHEEL_VAL(effect_params_t* params) { return effect_runner_dx_dy(params, &BAND_PINWHEEL
 3211              		.loc 23 10 49 is_stmt 1 view -0
 3212              		.cfi_startproc
 3213              		@ args = 0, pretend = 0, frame = 0
 3214              		@ frame_needed = 0, uses_anonymous_args = 0
 3215              		@ link register save eliminated.
 3216              		.loc 23 10 51 view .LVU796
 3217              		.loc 23 10 58 is_stmt 0 view .LVU797
 3218 0000 0149     		ldr	r1, .L135
 3219 0002 FFF7FEBF 		b	effect_runner_dx_dy
 3220              	.LVL250:
 3221              	.L136:
 3222              		.loc 23 10 58 view .LVU798
 3223 0006 00BF     		.align	2
 3224              	.L135:
 3225 0008 00000000 		.word	BAND_PINWHEEL_VAL_math
 3226              		.cfi_endproc
 3227              	.LFE98:
 3229              		.section	.text.CYCLE_OUT_IN_DUAL,"ax",%progbits
 3230              		.align	1
 3231              		.global	CYCLE_OUT_IN_DUAL
 3232              		.syntax unified
 3233              		.thumb
 3234              		.thumb_func
 3235              		.fpu fpv4-sp-d16
 3237              	CYCLE_OUT_IN_DUAL:
 3238              	.LVL251:
 3239              	.LFB114:
  11:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** 
  12:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** bool CYCLE_OUT_IN_DUAL(effect_params_t* params) { return effect_runner_dx_dy(params, &CYCLE_OUT_IN_
 3240              		.loc 11 12 49 is_stmt 1 view -0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 0
 3243              		@ frame_needed = 0, uses_anonymous_args = 0
 3244              		@ link register save eliminated.
 3245              		.loc 11 12 51 view .LVU800
 3246              		.loc 11 12 58 is_stmt 0 view .LVU801
 3247 0000 0149     		ldr	r1, .L138
 3248 0002 FFF7FEBF 		b	effect_runner_dx_dy
 3249              	.LVL252:
 3250              	.L139:
 3251              		.loc 11 12 58 view .LVU802
 3252 0006 00BF     		.align	2
 3253              	.L138:
 3254 0008 00000000 		.word	CYCLE_OUT_IN_DUAL_math
 3255              		.cfi_endproc
 3256              	.LFE114:
 3258              		.section	.text.CYCLE_PINWHEEL,"ax",%progbits
 3259              		.align	1
 3260              		.global	CYCLE_PINWHEEL
 3261              		.syntax unified
 3262              		.thumb
 3263              		.thumb_func
 3264              		.fpu fpv4-sp-d16
 3266              	CYCLE_PINWHEEL:
 3267              	.LVL253:
 3268              	.LFB116:
   9:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** bool CYCLE_PINWHEEL(effect_params_t* params) { return effect_runner_dx_dy(params, &CYCLE_PINWHEEL_m
 3269              		.loc 26 10 46 is_stmt 1 view -0
 3270              		.cfi_startproc
 3271              		@ args = 0, pretend = 0, frame = 0
 3272              		@ frame_needed = 0, uses_anonymous_args = 0
 3273              		@ link register save eliminated.
 3274              		.loc 26 10 48 view .LVU804
 3275              		.loc 26 10 55 is_stmt 0 view .LVU805
 3276 0000 0149     		ldr	r1, .L141
 3277 0002 FFF7FEBF 		b	effect_runner_dx_dy
 3278              	.LVL254:
 3279              	.L142:
 3280              		.loc 26 10 55 view .LVU806
 3281 0006 00BF     		.align	2
 3282              	.L141:
 3283 0008 00000000 		.word	CYCLE_PINWHEEL_math
 3284              		.cfi_endproc
 3285              	.LFE116:
 3287              		.section	.text.effect_runner_i,"ax",%progbits
 3288              		.align	1
 3289              		.global	effect_runner_i
 3290              		.syntax unified
 3291              		.thumb
 3292              		.thumb_func
 3293              		.fpu fpv4-sp-d16
 3295              	effect_runner_i:
 3296              	.LVL255:
 3297              	.LFB82:
 3298              		.file 31 "quantum/rgb_matrix_runners/effect_runner_i.h"
   1:quantum/rgb_matrix_runners/effect_runner_i.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_i.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_i.h **** typedef HSV (*i_f)(HSV hsv, uint8_t i, uint8_t time);
   4:quantum/rgb_matrix_runners/effect_runner_i.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_i.h **** bool effect_runner_i(effect_params_t* params, i_f effect_func) {
 3299              		.loc 31 5 64 is_stmt 1 view -0
 3300              		.cfi_startproc
 3301              		@ args = 0, pretend = 0, frame = 8
 3302              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix_runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3303              		.loc 31 6 5 view .LVU808
   5:quantum/rgb_matrix_runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3304              		.loc 31 5 64 is_stmt 0 view .LVU809
 3305 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3306              		.cfi_def_cfa_offset 48
 3307              		.cfi_offset 4, -36
 3308              		.cfi_offset 5, -32
 3309              		.cfi_offset 6, -28
 3310              		.cfi_offset 7, -24
 3311              		.cfi_offset 8, -20
 3312              		.cfi_offset 9, -16
 3313              		.cfi_offset 10, -12
 3314              		.cfi_offset 11, -8
 3315              		.cfi_offset 14, -4
 3316              		.loc 31 6 5 view .LVU810
 3317 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   7:quantum/rgb_matrix_runners/effect_runner_i.h **** 
   8:quantum/rgb_matrix_runners/effect_runner_i.h ****     uint8_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 4);
 3318              		.loc 31 8 61 view .LVU811
 3319 0006 254E     		ldr	r6, .L148
 3320              	.LBB242:
 3321              	.LBB243:
 253:./lib/lib8tion/scale8.h **** #endif
 3322              		.loc 4 253 17 view .LVU812
 3323 0008 254B     		ldr	r3, .L148+4
 3324              	.LBE243:
 3325              	.LBE242:
 3326              		.loc 31 8 20 view .LVU813
 3327 000a 3579     		ldrb	r5, [r6, #4]	@ zero_extendqisi2
 3328              	.LBB247:
 3329              	.LBB244:
 253:./lib/lib8tion/scale8.h **** #endif
 3330              		.loc 4 253 17 view .LVU814
 3331 000c 1B88     		ldrh	r3, [r3]
 3332              	.LBE244:
 3333              	.LBE247:
 3334              	.LBB248:
 3335              	.LBB249:
   9:quantum/rgb_matrix_runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  10:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3336              		.loc 31 10 9 view .LVU815
 3337 000e DFF894B0 		ldr	fp, .L148+8
 3338              	.LBE249:
 3339              	.LBE248:
   6:quantum/rgb_matrix_runners/effect_runner_i.h **** 
 3340              		.loc 31 6 5 view .LVU816
 3341 0012 C4EB0414 		rsb	r4, r4, r4, lsl #4
 3342 0016 E4B2     		uxtb	r4, r4
 3343              	.LVL256:
   6:quantum/rgb_matrix_runners/effect_runner_i.h **** 
 3344              		.loc 31 6 5 is_stmt 1 view .LVU817
 3345 0018 04F10F09 		add	r9, r4, #15
 3346 001c 5FFA89F9 		uxtb	r9, r9
 3347              	.LVL257:
   6:quantum/rgb_matrix_runners/effect_runner_i.h **** 
 3348              		.loc 31 6 5 view .LVU818
 3349              	.LBB251:
 3350              	.LBB245:
 253:./lib/lib8tion/scale8.h **** #endif
 3351              		.loc 4 253 17 is_stmt 0 view .LVU819
 3352 0020 AD08     		lsrs	r5, r5, #2
 3353 0022 B9F1770F 		cmp	r9, #119
 3354 0026 05FB03F5 		mul	r5, r5, r3
 3355 002a CA46     		mov	r10, r9
 3356              	.LBE245:
 3357              	.LBE251:
   5:quantum/rgb_matrix_runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3358              		.loc 31 5 64 view .LVU820
 3359 002c 0746     		mov	r7, r0
 3360 002e 8846     		mov	r8, r1
 3361 0030 28BF     		it	cs
 3362 0032 4FF0770A 		movcs	r10, #119
 3363              	.LVL258:
   6:quantum/rgb_matrix_runners/effect_runner_i.h **** 
 3364              		.loc 31 6 44 is_stmt 1 view .LVU821
   8:quantum/rgb_matrix_runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3365              		.loc 31 8 5 view .LVU822
 3366              	.LBB252:
 3367              	.LBI242:
 246:./lib/lib8tion/scale8.h **** {
 3368              		.loc 4 246 35 view .LVU823
 3369              	.LBB246:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 3370              		.loc 4 249 5 view .LVU824
 253:./lib/lib8tion/scale8.h **** #endif
 3371              		.loc 4 253 5 view .LVU825
 3372              		.loc 4 255 5 view .LVU826
 3373              		.loc 4 255 5 is_stmt 0 view .LVU827
 3374              	.LBE246:
 3375              	.LBE252:
   8:quantum/rgb_matrix_runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3376              		.loc 31 8 13 view .LVU828
 3377 0036 C5F30725 		ubfx	r5, r5, #8, #8
 3378              	.LVL259:
   9:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3379              		.loc 31 9 5 is_stmt 1 view .LVU829
 3380              	.LBB253:
   9:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3381              		.loc 31 9 10 view .LVU830
 3382              	.L144:
   9:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3383              		.loc 31 9 10 is_stmt 0 view .LVU831
 3384 003a E1B2     		uxtb	r1, r4
 3385              	.LVL260:
   9:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3386              		.loc 31 9 5 discriminator 1 view .LVU832
 3387 003c 8A45     		cmp	r10, r1
 3388 003e 07D8     		bhi	.L147
 3389              	.LBE253:
  11:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  13:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
  14:quantum/rgb_matrix_runners/effect_runner_i.h ****     return led_max < DRIVER_LED_TOTAL;
 3390              		.loc 31 14 5 is_stmt 1 view .LVU833
  15:quantum/rgb_matrix_runners/effect_runner_i.h **** }
 3391              		.loc 31 15 1 is_stmt 0 view .LVU834
 3392 0040 B9F1760F 		cmp	r9, #118
 3393 0044 8CBF     		ite	hi
 3394 0046 0020     		movhi	r0, #0
 3395 0048 0120     		movls	r0, #1
 3396 004a 03B0     		add	sp, sp, #12
 3397              		.cfi_remember_state
 3398              		.cfi_def_cfa_offset 36
 3399              		@ sp needed
 3400 004c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3401              	.LVL261:
 3402              	.L147:
 3403              		.cfi_restore_state
 3404              	.LBB254:
 3405              	.LBB250:
  10:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 3406              		.loc 31 10 9 is_stmt 1 view .LVU835
 3407 0050 14F80B20 		ldrb	r2, [r4, fp]	@ zero_extendqisi2
 3408 0054 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3409 0056 1A42     		tst	r2, r3
 3410 0058 1DD0     		beq	.L146
  11:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 3411              		.loc 31 11 9 view .LVU836
  11:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 3412              		.loc 31 11 19 is_stmt 0 view .LVU837
 3413 005a B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 3414 005c 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 3415 005e 43EA0023 		orr	r3, r3, r0, lsl #8
 3416 0062 F078     		ldrb	r0, [r6, #3]	@ zero_extendqisi2
 3417 0064 2A46     		mov	r2, r5
 3418 0066 43EA0040 		orr	r0, r3, r0, lsl #16
 3419 006a C047     		blx	r8
 3420              	.LVL262:
  11:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 3421              		.loc 31 11 19 view .LVU838
 3422 006c C0F30723 		ubfx	r3, r0, #8, #8
 3423 0070 8DF80400 		strb	r0, [sp, #4]
 3424 0074 C0F30740 		ubfx	r0, r0, #16, #8
 3425 0078 8DF80530 		strb	r3, [sp, #5]
 3426 007c 8DF80600 		strb	r0, [sp, #6]
 3427 0080 0198     		ldr	r0, [sp, #4]
 3428 0082 FFF7FEFF 		bl	hsv_to_rgb
 3429              	.LVL263:
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
 3430              		.loc 31 12 9 is_stmt 1 view .LVU839
 3431 0086 C0F30743 		ubfx	r3, r0, #16, #8
 3432 008a C2B2     		uxtb	r2, r0
 3433 008c C0F30721 		ubfx	r1, r0, #8, #8
 3434 0090 2046     		mov	r0, r4
 3435 0092 FFF7FEFF 		bl	rgb_matrix_set_color
 3436              	.LVL264:
 3437              	.L146:
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
 3438              		.loc 31 12 9 is_stmt 0 view .LVU840
 3439 0096 0134     		adds	r4, r4, #1
 3440              	.LVL265:
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
 3441              		.loc 31 12 9 view .LVU841
 3442 0098 CFE7     		b	.L144
 3443              	.L149:
 3444 009a 00BF     		.align	2
 3445              	.L148:
 3446 009c 00000000 		.word	rgb_matrix_config
 3447 00a0 00000000 		.word	g_rgb_timer
 3448 00a4 46010000 		.word	g_led_config+326
 3449              	.LBE250:
 3450              	.LBE254:
 3451              		.cfi_endproc
 3452              	.LFE82:
 3454              		.section	.text.BAND_SAT,"ax",%progbits
 3455              		.align	1
 3456              		.global	BAND_SAT
 3457              		.syntax unified
 3458              		.thumb
 3459              		.thumb_func
 3460              		.fpu fpv4-sp-d16
 3462              	BAND_SAT:
 3463              	.LVL266:
 3464              	.LFB92:
  10:quantum/rgb_matrix_animations/colorband_sat_anim.h **** 
  11:quantum/rgb_matrix_animations/colorband_sat_anim.h **** bool BAND_SAT(effect_params_t* params) { return effect_runner_i(params, &BAND_SAT_math); }
 3465              		.loc 3 11 40 is_stmt 1 view -0
 3466              		.cfi_startproc
 3467              		@ args = 0, pretend = 0, frame = 0
 3468              		@ frame_needed = 0, uses_anonymous_args = 0
 3469              		@ link register save eliminated.
 3470              		.loc 3 11 42 view .LVU843
 3471              		.loc 3 11 49 is_stmt 0 view .LVU844
 3472 0000 0149     		ldr	r1, .L151
 3473 0002 FFF7FEBF 		b	effect_runner_i
 3474              	.LVL267:
 3475              	.L152:
 3476              		.loc 3 11 49 view .LVU845
 3477 0006 00BF     		.align	2
 3478              	.L151:
 3479 0008 00000000 		.word	BAND_SAT_math
 3480              		.cfi_endproc
 3481              	.LFE92:
 3483              		.section	.text.BAND_VAL,"ax",%progbits
 3484              		.align	1
 3485              		.global	BAND_VAL
 3486              		.syntax unified
 3487              		.thumb
 3488              		.thumb_func
 3489              		.fpu fpv4-sp-d16
 3491              	BAND_VAL:
 3492              	.LVL268:
 3493              	.LFB94:
  10:quantum/rgb_matrix_animations/colorband_val_anim.h **** 
  11:quantum/rgb_matrix_animations/colorband_val_anim.h **** bool BAND_VAL(effect_params_t* params) { return effect_runner_i(params, &BAND_VAL_math); }
 3494              		.loc 5 11 40 is_stmt 1 view -0
 3495              		.cfi_startproc
 3496              		@ args = 0, pretend = 0, frame = 0
 3497              		@ frame_needed = 0, uses_anonymous_args = 0
 3498              		@ link register save eliminated.
 3499              		.loc 5 11 42 view .LVU847
 3500              		.loc 5 11 49 is_stmt 0 view .LVU848
 3501 0000 0149     		ldr	r1, .L154
 3502 0002 FFF7FEBF 		b	effect_runner_i
 3503              	.LVL269:
 3504              	.L155:
 3505              		.loc 5 11 49 view .LVU849
 3506 0006 00BF     		.align	2
 3507              	.L154:
 3508 0008 00000000 		.word	BAND_VAL_math
 3509              		.cfi_endproc
 3510              	.LFE94:
 3512              		.section	.text.CYCLE_ALL,"ax",%progbits
 3513              		.align	1
 3514              		.global	CYCLE_ALL
 3515              		.syntax unified
 3516              		.thumb
 3517              		.thumb_func
 3518              		.fpu fpv4-sp-d16
 3520              	CYCLE_ALL:
 3521              	.LVL270:
 3522              	.LFB104:
   9:quantum/rgb_matrix_animations/cycle_all_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_all_anim.h **** bool CYCLE_ALL(effect_params_t* params) { return effect_runner_i(params, &CYCLE_ALL_math); }
 3523              		.loc 6 10 41 is_stmt 1 view -0
 3524              		.cfi_startproc
 3525              		@ args = 0, pretend = 0, frame = 0
 3526              		@ frame_needed = 0, uses_anonymous_args = 0
 3527              		@ link register save eliminated.
 3528              		.loc 6 10 43 view .LVU851
 3529              		.loc 6 10 50 is_stmt 0 view .LVU852
 3530 0000 0149     		ldr	r1, .L157
 3531 0002 FFF7FEBF 		b	effect_runner_i
 3532              	.LVL271:
 3533              	.L158:
 3534              		.loc 6 10 50 view .LVU853
 3535 0006 00BF     		.align	2
 3536              	.L157:
 3537 0008 00000000 		.word	CYCLE_ALL_math
 3538              		.cfi_endproc
 3539              	.LFE104:
 3541              		.section	.text.CYCLE_LEFT_RIGHT,"ax",%progbits
 3542              		.align	1
 3543              		.global	CYCLE_LEFT_RIGHT
 3544              		.syntax unified
 3545              		.thumb
 3546              		.thumb_func
 3547              		.fpu fpv4-sp-d16
 3549              	CYCLE_LEFT_RIGHT:
 3550              	.LVL272:
 3551              	.LFB106:
   9:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** bool CYCLE_LEFT_RIGHT(effect_params_t* params) { return effect_runner_i(params, &CYCLE_LEFT_RIGHT_m
 3552              		.loc 7 10 48 is_stmt 1 view -0
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 0
 3555              		@ frame_needed = 0, uses_anonymous_args = 0
 3556              		@ link register save eliminated.
 3557              		.loc 7 10 50 view .LVU855
 3558              		.loc 7 10 57 is_stmt 0 view .LVU856
 3559 0000 0149     		ldr	r1, .L160
 3560 0002 FFF7FEBF 		b	effect_runner_i
 3561              	.LVL273:
 3562              	.L161:
 3563              		.loc 7 10 57 view .LVU857
 3564 0006 00BF     		.align	2
 3565              	.L160:
 3566 0008 00000000 		.word	CYCLE_LEFT_RIGHT_math
 3567              		.cfi_endproc
 3568              	.LFE106:
 3570              		.section	.text.CYCLE_UP_DOWN,"ax",%progbits
 3571              		.align	1
 3572              		.global	CYCLE_UP_DOWN
 3573              		.syntax unified
 3574              		.thumb
 3575              		.thumb_func
 3576              		.fpu fpv4-sp-d16
 3578              	CYCLE_UP_DOWN:
 3579              	.LVL274:
 3580              	.LFB108:
   9:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** bool CYCLE_UP_DOWN(effect_params_t* params) { return effect_runner_i(params, &CYCLE_UP_DOWN_math); 
 3581              		.loc 8 10 45 is_stmt 1 view -0
 3582              		.cfi_startproc
 3583              		@ args = 0, pretend = 0, frame = 0
 3584              		@ frame_needed = 0, uses_anonymous_args = 0
 3585              		@ link register save eliminated.
 3586              		.loc 8 10 47 view .LVU859
 3587              		.loc 8 10 54 is_stmt 0 view .LVU860
 3588 0000 0149     		ldr	r1, .L163
 3589 0002 FFF7FEBF 		b	effect_runner_i
 3590              	.LVL275:
 3591              	.L164:
 3592              		.loc 8 10 54 view .LVU861
 3593 0006 00BF     		.align	2
 3594              	.L163:
 3595 0008 00000000 		.word	CYCLE_UP_DOWN_math
 3596              		.cfi_endproc
 3597              	.LFE108:
 3599              		.section	.text.RAINBOW_MOVING_CHEVRON,"ax",%progbits
 3600              		.align	1
 3601              		.global	RAINBOW_MOVING_CHEVRON
 3602              		.syntax unified
 3603              		.thumb
 3604              		.thumb_func
 3605              		.fpu fpv4-sp-d16
 3607              	RAINBOW_MOVING_CHEVRON:
 3608              	.LVL276:
 3609              	.LFB110:
   9:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** 
  10:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** bool RAINBOW_MOVING_CHEVRON(effect_params_t* params) { return effect_runner_i(params, &RAINBOW_MOVI
 3610              		.loc 9 10 54 is_stmt 1 view -0
 3611              		.cfi_startproc
 3612              		@ args = 0, pretend = 0, frame = 0
 3613              		@ frame_needed = 0, uses_anonymous_args = 0
 3614              		@ link register save eliminated.
 3615              		.loc 9 10 56 view .LVU863
 3616              		.loc 9 10 63 is_stmt 0 view .LVU864
 3617 0000 0149     		ldr	r1, .L166
 3618 0002 FFF7FEBF 		b	effect_runner_i
 3619              	.LVL277:
 3620              	.L167:
 3621              		.loc 9 10 63 view .LVU865
 3622 0006 00BF     		.align	2
 3623              	.L166:
 3624 0008 00000000 		.word	RAINBOW_MOVING_CHEVRON_math
 3625              		.cfi_endproc
 3626              	.LFE110:
 3628              		.section	.text.effect_runner_sin_cos_i,"ax",%progbits
 3629              		.align	1
 3630              		.global	effect_runner_sin_cos_i
 3631              		.syntax unified
 3632              		.thumb
 3633              		.thumb_func
 3634              		.fpu fpv4-sp-d16
 3636              	effect_runner_sin_cos_i:
 3637              	.LVL278:
 3638              	.LFB83:
 3639              		.file 32 "quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h"
   1:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** typedef HSV (*sin_cos_i_f)(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time);
   4:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** bool effect_runner_sin_cos_i(effect_params_t* params, sin_cos_i_f effect_func) {
 3640              		.loc 32 5 80 is_stmt 1 view -0
 3641              		.cfi_startproc
 3642              		@ args = 0, pretend = 0, frame = 16
 3643              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3644              		.loc 32 6 5 view .LVU867
   5:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3645              		.loc 32 5 80 is_stmt 0 view .LVU868
 3646 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3647              		.cfi_def_cfa_offset 36
 3648              		.cfi_offset 4, -36
 3649              		.cfi_offset 5, -32
 3650              		.cfi_offset 6, -28
 3651              		.cfi_offset 7, -24
 3652              		.cfi_offset 8, -20
 3653              		.cfi_offset 9, -16
 3654              		.cfi_offset 10, -12
 3655              		.cfi_offset 11, -8
 3656              		.cfi_offset 14, -4
   7:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
   8:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     uint16_t time      = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 4);
 3657              		.loc 32 8 67 view .LVU869
 3658 0004 2D4E     		ldr	r6, .L173
 3659              	.LBB261:
 3660              	.LBB262:
 253:./lib/lib8tion/scale8.h **** #endif
 3661              		.loc 4 253 17 view .LVU870
 3662 0006 2E4A     		ldr	r2, .L173+4
 3663              	.LBE262:
 3664              	.LBE261:
 3665              		.loc 32 8 26 view .LVU871
 3666 0008 3579     		ldrb	r5, [r6, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
 3667              		.loc 32 6 5 view .LVU872
 3668 000a 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 3669              	.LBB266:
 3670              	.LBB263:
 253:./lib/lib8tion/scale8.h **** #endif
 3671              		.loc 4 253 17 view .LVU873
 3672 000c AB08     		lsrs	r3, r5, #2
 3673 000e 1588     		ldrh	r5, [r2]
 3674              	.LBE263:
 3675              	.LBE266:
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
 3676              		.loc 32 6 5 view .LVU874
 3677 0010 C4EB0414 		rsb	r4, r4, r4, lsl #4
 3678              	.LBB267:
 3679              	.LBB264:
 253:./lib/lib8tion/scale8.h **** #endif
 3680              		.loc 4 253 17 view .LVU875
 3681 0014 5D43     		muls	r5, r3, r5
 3682              	.LBE264:
 3683              	.LBE267:
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
 3684              		.loc 32 6 5 view .LVU876
 3685 0016 E4B2     		uxtb	r4, r4
 3686              	.LVL279:
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
 3687              		.loc 32 6 5 is_stmt 1 view .LVU877
   9:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     int8_t   cos_value = cos8(time) - 128;
 3688              		.loc 32 9 26 is_stmt 0 view .LVU878
 3689 0018 C5F30725 		ubfx	r5, r5, #8, #8
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
 3690              		.loc 32 6 5 view .LVU879
 3691 001c 04F10F07 		add	r7, r4, #15
   5:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3692              		.loc 32 5 80 view .LVU880
 3693 0020 87B0     		sub	sp, sp, #28
 3694              		.cfi_def_cfa_offset 64
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
 3695              		.loc 32 6 5 view .LVU881
 3696 0022 FFB2     		uxtb	r7, r7
 3697              	.LVL280:
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
 3698              		.loc 32 6 5 is_stmt 1 view .LVU882
   5:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3699              		.loc 32 5 80 is_stmt 0 view .LVU883
 3700 0024 8146     		mov	r9, r0
 3701              	.LBB268:
 3702              	.LBB269:
 255:./lib/lib8tion/trig8.h **** }
 3703              		.loc 2 255 12 view .LVU884
 3704 0026 05F14000 		add	r0, r5, #64
 3705              	.LVL281:
 255:./lib/lib8tion/trig8.h **** }
 3706              		.loc 2 255 12 view .LVU885
 3707 002a 772F     		cmp	r7, #119
 3708 002c C0B2     		uxtb	r0, r0
 3709              	.LBE269:
 3710              	.LBE268:
   5:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3711              		.loc 32 5 80 view .LVU886
 3712 002e 0391     		str	r1, [sp, #12]
 3713 0030 BA46     		mov	r10, r7
 3714 0032 28BF     		it	cs
 3715 0034 4FF0770A 		movcs	r10, #119
 3716              	.LVL282:
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
 3717              		.loc 32 6 44 is_stmt 1 view .LVU887
   8:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     int8_t   cos_value = cos8(time) - 128;
 3718              		.loc 32 8 5 view .LVU888
 3719              	.LBB271:
 3720              	.LBI261:
 246:./lib/lib8tion/scale8.h **** {
 3721              		.loc 4 246 35 view .LVU889
 3722              	.LBB265:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 3723              		.loc 4 249 5 view .LVU890
 253:./lib/lib8tion/scale8.h **** #endif
 3724              		.loc 4 253 5 view .LVU891
 3725              		.loc 4 255 5 view .LVU892
 3726              		.loc 4 255 5 is_stmt 0 view .LVU893
 3727              	.LBE265:
 3728              	.LBE271:
 3729              		.loc 32 9 5 is_stmt 1 view .LVU894
 3730              	.LBB272:
 3731              	.LBI268:
 253:./lib/lib8tion/trig8.h **** {
 3732              		.loc 2 253 20 view .LVU895
 3733              	.LBB270:
 255:./lib/lib8tion/trig8.h **** }
 3734              		.loc 2 255 5 view .LVU896
 255:./lib/lib8tion/trig8.h **** }
 3735              		.loc 2 255 12 is_stmt 0 view .LVU897
 3736 0038 FFF7FEFF 		bl	sin8_C
 3737              	.LVL283:
 255:./lib/lib8tion/trig8.h **** }
 3738              		.loc 2 255 12 view .LVU898
 3739              	.LBE270:
 3740              	.LBE272:
 3741              		.loc 32 9 37 view .LVU899
 3742 003c 8038     		subs	r0, r0, #128
 3743              		.loc 32 9 14 view .LVU900
 3744 003e 4FFA80FB 		sxtb	fp, r0
 3745              	.LVL284:
  10:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     int8_t   sin_value = sin8(time) - 128;
 3746              		.loc 32 10 5 is_stmt 1 view .LVU901
 3747              		.loc 32 10 26 is_stmt 0 view .LVU902
 3748 0042 2846     		mov	r0, r5
 3749 0044 FFF7FEFF 		bl	sin8_C
 3750              	.LVL285:
 3751              		.loc 32 10 37 view .LVU903
 3752 0048 8038     		subs	r0, r0, #128
 3753              		.loc 32 10 14 view .LVU904
 3754 004a 4FFA80F8 		sxtb	r8, r0
 3755              	.LVL286:
  11:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3756              		.loc 32 11 5 is_stmt 1 view .LVU905
 3757              	.LBB273:
 3758              		.loc 32 11 10 view .LVU906
 3759              		.loc 32 11 10 is_stmt 0 view .LVU907
 3760 004e 0296     		str	r6, [sp, #8]
 3761              	.LVL287:
 3762              	.L169:
 3763              		.loc 32 11 10 view .LVU908
 3764 0050 E3B2     		uxtb	r3, r4
 3765              	.LVL288:
 3766              		.loc 32 11 5 discriminator 1 view .LVU909
 3767 0052 9A45     		cmp	r10, r3
 3768 0054 06D8     		bhi	.L172
 3769              	.LBE273:
  12:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  13:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         RGB rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, cos_value, sin_value, i, time));
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
  16:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     return led_max < DRIVER_LED_TOTAL;
 3770              		.loc 32 16 5 is_stmt 1 view .LVU910
  17:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** }
 3771              		.loc 32 17 1 is_stmt 0 view .LVU911
 3772 0056 762F     		cmp	r7, #118
 3773 0058 8CBF     		ite	hi
 3774 005a 0020     		movhi	r0, #0
 3775 005c 0120     		movls	r0, #1
 3776 005e 07B0     		add	sp, sp, #28
 3777              		.cfi_remember_state
 3778              		.cfi_def_cfa_offset 36
 3779              		@ sp needed
 3780 0060 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3781              	.LVL289:
 3782              	.L172:
 3783              		.cfi_restore_state
 3784              	.LBB275:
 3785              	.LBB274:
  12:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3786              		.loc 32 12 9 is_stmt 1 view .LVU912
 3787 0064 174A     		ldr	r2, .L173+8
 3788 0066 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 3789 0068 99F80120 		ldrb	r2, [r9, #1]	@ zero_extendqisi2
 3790 006c 1142     		tst	r1, r2
 3791 006e 23D0     		beq	.L171
  13:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3792              		.loc 32 13 9 view .LVU913
  13:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3793              		.loc 32 13 19 is_stmt 0 view .LVU914
 3794 0070 029A     		ldr	r2, [sp, #8]
 3795 0072 0095     		str	r5, [sp]
 3796 0074 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 3797 0076 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 3798 0078 039E     		ldr	r6, [sp, #12]
 3799 007a 40EA0220 		orr	r0, r0, r2, lsl #8
 3800 007e 029A     		ldr	r2, [sp, #8]
 3801 0080 92F803C0 		ldrb	ip, [r2, #3]	@ zero_extendqisi2
 3802 0084 5946     		mov	r1, fp
 3803 0086 4246     		mov	r2, r8
 3804 0088 40EA0C40 		orr	r0, r0, ip, lsl #16
 3805 008c B047     		blx	r6
 3806              	.LVL290:
  13:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3807              		.loc 32 13 19 view .LVU915
 3808 008e C0F30723 		ubfx	r3, r0, #8, #8
 3809 0092 8DF81400 		strb	r0, [sp, #20]
 3810 0096 C0F30740 		ubfx	r0, r0, #16, #8
 3811 009a 8DF81530 		strb	r3, [sp, #21]
 3812 009e 8DF81600 		strb	r0, [sp, #22]
 3813 00a2 0598     		ldr	r0, [sp, #20]
 3814 00a4 FFF7FEFF 		bl	hsv_to_rgb
 3815              	.LVL291:
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
 3816              		.loc 32 14 9 is_stmt 1 view .LVU916
 3817 00a8 C0F30743 		ubfx	r3, r0, #16, #8
 3818 00ac C2B2     		uxtb	r2, r0
 3819 00ae C0F30721 		ubfx	r1, r0, #8, #8
 3820 00b2 2046     		mov	r0, r4
 3821 00b4 FFF7FEFF 		bl	rgb_matrix_set_color
 3822              	.LVL292:
 3823              	.L171:
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
 3824              		.loc 32 14 9 is_stmt 0 view .LVU917
 3825 00b8 0134     		adds	r4, r4, #1
 3826              	.LVL293:
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
 3827              		.loc 32 14 9 view .LVU918
 3828 00ba C9E7     		b	.L169
 3829              	.L174:
 3830              		.align	2
 3831              	.L173:
 3832 00bc 00000000 		.word	rgb_matrix_config
 3833 00c0 00000000 		.word	g_rgb_timer
 3834 00c4 46010000 		.word	g_led_config+326
 3835              	.LBE274:
 3836              	.LBE275:
 3837              		.cfi_endproc
 3838              	.LFE83:
 3840              		.section	.text.DUAL_BEACON,"ax",%progbits
 3841              		.align	1
 3842              		.global	DUAL_BEACON
 3843              		.syntax unified
 3844              		.thumb
 3845              		.thumb_func
 3846              		.fpu fpv4-sp-d16
 3848              	DUAL_BEACON:
 3849              	.LVL294:
 3850              	.LFB120:
   9:quantum/rgb_matrix_animations/dual_beacon_anim.h **** 
  10:quantum/rgb_matrix_animations/dual_beacon_anim.h **** bool DUAL_BEACON(effect_params_t* params) { return effect_runner_sin_cos_i(params, &DUAL_BEACON_mat
 3851              		.loc 12 10 43 is_stmt 1 view -0
 3852              		.cfi_startproc
 3853              		@ args = 0, pretend = 0, frame = 0
 3854              		@ frame_needed = 0, uses_anonymous_args = 0
 3855              		@ link register save eliminated.
 3856              		.loc 12 10 45 view .LVU920
 3857              		.loc 12 10 52 is_stmt 0 view .LVU921
 3858 0000 0149     		ldr	r1, .L176
 3859 0002 FFF7FEBF 		b	effect_runner_sin_cos_i
 3860              	.LVL295:
 3861              	.L177:
 3862              		.loc 12 10 52 view .LVU922
 3863 0006 00BF     		.align	2
 3864              	.L176:
 3865 0008 00000000 		.word	DUAL_BEACON_math
 3866              		.cfi_endproc
 3867              	.LFE120:
 3869              		.section	.text.RAINBOW_BEACON,"ax",%progbits
 3870              		.align	1
 3871              		.global	RAINBOW_BEACON
 3872              		.syntax unified
 3873              		.thumb
 3874              		.thumb_func
 3875              		.fpu fpv4-sp-d16
 3877              	RAINBOW_BEACON:
 3878              	.LVL296:
 3879              	.LFB122:
   9:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** 
  10:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** bool RAINBOW_BEACON(effect_params_t* params) { return effect_runner_sin_cos_i(params, &RAINBOW_BEAC
 3880              		.loc 13 10 46 is_stmt 1 view -0
 3881              		.cfi_startproc
 3882              		@ args = 0, pretend = 0, frame = 0
 3883              		@ frame_needed = 0, uses_anonymous_args = 0
 3884              		@ link register save eliminated.
 3885              		.loc 13 10 48 view .LVU924
 3886              		.loc 13 10 55 is_stmt 0 view .LVU925
 3887 0000 0149     		ldr	r1, .L179
 3888 0002 FFF7FEBF 		b	effect_runner_sin_cos_i
 3889              	.LVL297:
 3890              	.L180:
 3891              		.loc 13 10 55 view .LVU926
 3892 0006 00BF     		.align	2
 3893              	.L179:
 3894 0008 00000000 		.word	RAINBOW_BEACON_math
 3895              		.cfi_endproc
 3896              	.LFE122:
 3898              		.section	.text.RAINBOW_PINWHEELS,"ax",%progbits
 3899              		.align	1
 3900              		.global	RAINBOW_PINWHEELS
 3901              		.syntax unified
 3902              		.thumb
 3903              		.thumb_func
 3904              		.fpu fpv4-sp-d16
 3906              	RAINBOW_PINWHEELS:
 3907              	.LVL298:
 3908              	.LFB124:
   9:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** 
  10:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** bool RAINBOW_PINWHEELS(effect_params_t* params) { return effect_runner_sin_cos_i(params, &RAINBOW_P
 3909              		.loc 14 10 49 is_stmt 1 view -0
 3910              		.cfi_startproc
 3911              		@ args = 0, pretend = 0, frame = 0
 3912              		@ frame_needed = 0, uses_anonymous_args = 0
 3913              		@ link register save eliminated.
 3914              		.loc 14 10 51 view .LVU928
 3915              		.loc 14 10 58 is_stmt 0 view .LVU929
 3916 0000 0149     		ldr	r1, .L182
 3917 0002 FFF7FEBF 		b	effect_runner_sin_cos_i
 3918              	.LVL299:
 3919              	.L183:
 3920              		.loc 14 10 58 view .LVU930
 3921 0006 00BF     		.align	2
 3922              	.L182:
 3923 0008 00000000 		.word	RAINBOW_PINWHEELS_math
 3924              		.cfi_endproc
 3925              	.LFE124:
 3927              		.section	.text.effect_runner_reactive,"ax",%progbits
 3928              		.align	1
 3929              		.global	effect_runner_reactive
 3930              		.syntax unified
 3931              		.thumb
 3932              		.thumb_func
 3933              		.fpu fpv4-sp-d16
 3935              	effect_runner_reactive:
 3936              	.LVL300:
 3937              	.LFB84:
 3938              		.file 33 "quantum/rgb_matrix_runners/effect_runner_reactive.h"
   1:quantum/rgb_matrix_runners/effect_runner_reactive.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_reactive.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_reactive.h **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
   4:quantum/rgb_matrix_runners/effect_runner_reactive.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_reactive.h **** typedef HSV (*reactive_f)(HSV hsv, uint16_t offset);
   6:quantum/rgb_matrix_runners/effect_runner_reactive.h **** 
   7:quantum/rgb_matrix_runners/effect_runner_reactive.h **** bool effect_runner_reactive(effect_params_t* params, reactive_f effect_func) {
 3939              		.loc 33 7 78 is_stmt 1 view -0
 3940              		.cfi_startproc
 3941              		@ args = 0, pretend = 0, frame = 16
 3942              		@ frame_needed = 0, uses_anonymous_args = 0
   8:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3943              		.loc 33 8 5 view .LVU932
   7:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3944              		.loc 33 7 78 is_stmt 0 view .LVU933
 3945 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3946              		.cfi_def_cfa_offset 36
 3947              		.cfi_offset 4, -36
 3948              		.cfi_offset 5, -32
 3949              		.cfi_offset 6, -28
 3950              		.cfi_offset 7, -24
 3951              		.cfi_offset 8, -20
 3952              		.cfi_offset 9, -16
 3953              		.cfi_offset 10, -12
 3954              		.cfi_offset 11, -8
 3955              		.cfi_offset 14, -4
 3956              		.loc 33 8 5 view .LVU934
 3957 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   9:quantum/rgb_matrix_runners/effect_runner_reactive.h **** 
  10:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     uint16_t max_tick = 65535 / rgb_matrix_config.speed;
 3958              		.loc 33 10 50 view .LVU935
 3959 0006 314D     		ldr	r5, .L193
 3960              	.LBB276:
 3961              	.LBB277:
  11:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  12:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3962              		.loc 33 12 9 view .LVU936
 3963 0008 DFF8C4B0 		ldr	fp, .L193+4
 3964              	.LBB278:
  13:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         uint16_t tick = max_tick;
  14:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         // Reverse search to find most recent key hit
  15:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         for (int8_t j = g_last_hit_tracker.count - 1; j >= 0; j--) {
 3965              		.loc 33 15 43 view .LVU937
 3966 000c DFF8C490 		ldr	r9, .L193+8
 3967              	.LBE278:
 3968              	.LBE277:
 3969              	.LBE276:
  10:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3970              		.loc 33 10 50 view .LVU938
 3971 0010 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
   8:quantum/rgb_matrix_runners/effect_runner_reactive.h **** 
 3972              		.loc 33 8 5 view .LVU939
 3973 0012 C4EB0414 		rsb	r4, r4, r4, lsl #4
 3974 0016 E4B2     		uxtb	r4, r4
 3975              	.LVL301:
   8:quantum/rgb_matrix_runners/effect_runner_reactive.h **** 
 3976              		.loc 33 8 5 is_stmt 1 view .LVU940
 3977 0018 04F10F06 		add	r6, r4, #15
 3978 001c F6B2     		uxtb	r6, r6
 3979              	.LVL302:
   8:quantum/rgb_matrix_runners/effect_runner_reactive.h **** 
 3980              		.loc 33 8 5 view .LVU941
   7:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3981              		.loc 33 7 78 is_stmt 0 view .LVU942
 3982 001e 85B0     		sub	sp, sp, #20
 3983              		.cfi_def_cfa_offset 56
 3984 0020 772E     		cmp	r6, #119
 3985 0022 B246     		mov	r10, r6
   7:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3986              		.loc 33 7 78 view .LVU943
 3987 0024 8046     		mov	r8, r0
 3988 0026 0191     		str	r1, [sp, #4]
 3989 0028 28BF     		it	cs
 3990 002a 4FF0770A 		movcs	r10, #119
 3991              	.LVL303:
   8:quantum/rgb_matrix_runners/effect_runner_reactive.h **** 
 3992              		.loc 33 8 44 is_stmt 1 view .LVU944
  10:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3993              		.loc 33 10 5 view .LVU945
  10:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3994              		.loc 33 10 14 is_stmt 0 view .LVU946
 3995 002e 4FF6FF77 		movw	r7, #65535
 3996 0032 B7FBF3F7 		udiv	r7, r7, r3
 3997              	.LVL304:
  11:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3998              		.loc 33 11 5 is_stmt 1 view .LVU947
 3999              	.LBB289:
  11:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4000              		.loc 33 11 10 view .LVU948
 4001              	.L185:
  11:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4002              		.loc 33 11 10 is_stmt 0 view .LVU949
 4003 0036 E0B2     		uxtb	r0, r4
  11:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4004              		.loc 33 11 5 discriminator 1 view .LVU950
 4005 0038 8245     		cmp	r10, r0
 4006 003a 06D8     		bhi	.L192
 4007              	.LBE289:
  16:quantum/rgb_matrix_runners/effect_runner_reactive.h ****             if (g_last_hit_tracker.index[j] == i && g_last_hit_tracker.tick[j] < tick) {
  17:quantum/rgb_matrix_runners/effect_runner_reactive.h ****                 tick = g_last_hit_tracker.tick[j];
  18:quantum/rgb_matrix_runners/effect_runner_reactive.h ****                 break;
  19:quantum/rgb_matrix_runners/effect_runner_reactive.h ****             }
  20:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         }
  21:quantum/rgb_matrix_runners/effect_runner_reactive.h **** 
  22:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         uint16_t offset = scale16by8(tick, rgb_matrix_config.speed);
  23:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         RGB      rgb    = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, offset));
  24:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  25:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     }
  26:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     return led_max < DRIVER_LED_TOTAL;
 4008              		.loc 33 26 5 is_stmt 1 view .LVU951
  27:quantum/rgb_matrix_runners/effect_runner_reactive.h **** }
 4009              		.loc 33 27 1 is_stmt 0 view .LVU952
 4010 003c 762E     		cmp	r6, #118
 4011 003e 8CBF     		ite	hi
 4012 0040 0020     		movhi	r0, #0
 4013 0042 0120     		movls	r0, #1
 4014 0044 05B0     		add	sp, sp, #20
 4015              		.cfi_remember_state
 4016              		.cfi_def_cfa_offset 36
 4017              		@ sp needed
 4018 0046 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4019              	.LVL305:
 4020              	.L192:
 4021              		.cfi_restore_state
 4022              	.LBB290:
 4023              	.LBB287:
  12:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         uint16_t tick = max_tick;
 4024              		.loc 33 12 9 is_stmt 1 view .LVU953
 4025 004a 14F80B20 		ldrb	r2, [r4, fp]	@ zero_extendqisi2
 4026 004e 98F80130 		ldrb	r3, [r8, #1]	@ zero_extendqisi2
 4027 0052 1A42     		tst	r2, r3
 4028 0054 2AD0     		beq	.L187
  13:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         // Reverse search to find most recent key hit
 4029              		.loc 33 13 9 view .LVU954
  15:quantum/rgb_matrix_runners/effect_runner_reactive.h ****             if (g_last_hit_tracker.index[j] == i && g_last_hit_tracker.tick[j] < tick) {
 4030              		.loc 33 15 9 view .LVU955
 4031              	.LBB279:
  15:quantum/rgb_matrix_runners/effect_runner_reactive.h ****             if (g_last_hit_tracker.index[j] == i && g_last_hit_tracker.tick[j] < tick) {
 4032              		.loc 33 15 14 view .LVU956
 4033              	.LVL306:
  15:quantum/rgb_matrix_runners/effect_runner_reactive.h ****             if (g_last_hit_tracker.index[j] == i && g_last_hit_tracker.tick[j] < tick) {
 4034              		.loc 33 15 50 is_stmt 0 view .LVU957
 4035 0056 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
  16:quantum/rgb_matrix_runners/effect_runner_reactive.h ****                 tick = g_last_hit_tracker.tick[j];
 4036              		.loc 33 16 41 view .LVU958
 4037 005a DFF87CC0 		ldr	ip, .L193+12
  15:quantum/rgb_matrix_runners/effect_runner_reactive.h ****             if (g_last_hit_tracker.index[j] == i && g_last_hit_tracker.tick[j] < tick) {
 4038              		.loc 33 15 50 view .LVU959
 4039 005e 013B     		subs	r3, r3, #1
 4040 0060 5BB2     		sxtb	r3, r3
 4041              	.LVL307:
 4042              	.L188:
  15:quantum/rgb_matrix_runners/effect_runner_reactive.h ****             if (g_last_hit_tracker.index[j] == i && g_last_hit_tracker.tick[j] < tick) {
 4043              		.loc 33 15 9 discriminator 1 view .LVU960
 4044 0062 1A06     		lsls	r2, r3, #24
 4045 0064 24D5     		bpl	.L191
 4046              	.LBE279:
 4047              	.LBE287:
 4048              	.LBE290:
  10:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4049              		.loc 33 10 14 view .LVU961
 4050 0066 3946     		mov	r1, r7
 4051              	.L190:
 4052              	.LVL308:
 4053              	.LBB291:
 4054              	.LBB288:
  22:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         RGB      rgb    = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, offset));
 4055              		.loc 33 22 9 is_stmt 1 view .LVU962
 4056              	.LBB280:
 4057              	.LBI280:
 246:./lib/lib8tion/scale8.h **** {
 4058              		.loc 4 246 35 view .LVU963
 4059              	.LBB281:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 4060              		.loc 4 249 5 view .LVU964
 253:./lib/lib8tion/scale8.h **** #endif
 4061              		.loc 4 253 5 view .LVU965
 4062              		.loc 4 255 5 view .LVU966
 4063              		.loc 4 255 5 is_stmt 0 view .LVU967
 4064              	.LBE281:
 4065              	.LBE280:
  23:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4066              		.loc 33 23 9 is_stmt 1 view .LVU968
 4067              	.LBB284:
 4068              	.LBB282:
 253:./lib/lib8tion/scale8.h **** #endif
 4069              		.loc 4 253 17 is_stmt 0 view .LVU969
 4070 0068 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 4071              	.LVL309:
 253:./lib/lib8tion/scale8.h **** #endif
 4072              		.loc 4 253 17 view .LVU970
 4073              	.LBE282:
 4074              	.LBE284:
  23:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4075              		.loc 33 23 27 view .LVU971
 4076 006a A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 4077              	.LBB285:
 4078              	.LBB283:
 253:./lib/lib8tion/scale8.h **** #endif
 4079              		.loc 4 253 17 view .LVU972
 4080 006c 5943     		muls	r1, r3, r1
 4081              	.LVL310:
 253:./lib/lib8tion/scale8.h **** #endif
 4082              		.loc 4 253 17 view .LVU973
 4083              	.LBE283:
 4084              	.LBE285:
  23:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4085              		.loc 33 23 27 view .LVU974
 4086 006e 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 4087 0070 43EA0023 		orr	r3, r3, r0, lsl #8
 4088 0074 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
 4089 0076 C1F30F21 		ubfx	r1, r1, #8, #16
 4090 007a 43EA0040 		orr	r0, r3, r0, lsl #16
 4091 007e 019B     		ldr	r3, [sp, #4]
 4092 0080 9847     		blx	r3
 4093              	.LVL311:
  23:quantum/rgb_matrix_runners/effect_runner_reactive.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4094              		.loc 33 23 27 view .LVU975
 4095 0082 C0F30723 		ubfx	r3, r0, #8, #8
 4096 0086 8DF80C00 		strb	r0, [sp, #12]
 4097 008a C0F30740 		ubfx	r0, r0, #16, #8
 4098 008e 8DF80D30 		strb	r3, [sp, #13]
 4099 0092 8DF80E00 		strb	r0, [sp, #14]
 4100 0096 0398     		ldr	r0, [sp, #12]
 4101 0098 FFF7FEFF 		bl	hsv_to_rgb
 4102              	.LVL312:
  24:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     }
 4103              		.loc 33 24 9 is_stmt 1 view .LVU976
 4104 009c C0F30743 		ubfx	r3, r0, #16, #8
 4105 00a0 C2B2     		uxtb	r2, r0
 4106 00a2 C0F30721 		ubfx	r1, r0, #8, #8
 4107 00a6 2046     		mov	r0, r4
 4108 00a8 FFF7FEFF 		bl	rgb_matrix_set_color
 4109              	.LVL313:
 4110              	.L187:
  24:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     }
 4111              		.loc 33 24 9 is_stmt 0 view .LVU977
 4112 00ac 0134     		adds	r4, r4, #1
 4113              	.LVL314:
  24:quantum/rgb_matrix_runners/effect_runner_reactive.h ****     }
 4114              		.loc 33 24 9 view .LVU978
 4115 00ae C2E7     		b	.L185
 4116              	.LVL315:
 4117              	.L191:
 4118              	.LBB286:
  16:quantum/rgb_matrix_runners/effect_runner_reactive.h ****                 tick = g_last_hit_tracker.tick[j];
 4119              		.loc 33 16 13 is_stmt 1 view .LVU979
  16:quantum/rgb_matrix_runners/effect_runner_reactive.h ****                 tick = g_last_hit_tracker.tick[j];
 4120              		.loc 33 16 16 is_stmt 0 view .LVU980
 4121 00b0 13F80C20 		ldrb	r2, [r3, ip]	@ zero_extendqisi2
 4122 00b4 8242     		cmp	r2, r0
 4123 00b6 07D1     		bne	.L189
  16:quantum/rgb_matrix_runners/effect_runner_reactive.h ****                 tick = g_last_hit_tracker.tick[j];
 4124              		.loc 33 16 76 discriminator 1 view .LVU981
 4125 00b8 03F10C02 		add	r2, r3, #12
 4126 00bc 09EB4202 		add	r2, r9, r2, lsl #1
 4127 00c0 B2F80110 		ldrh	r1, [r2, #1]	@ unaligned
  16:quantum/rgb_matrix_runners/effect_runner_reactive.h ****                 tick = g_last_hit_tracker.tick[j];
 4128              		.loc 33 16 50 discriminator 1 view .LVU982
 4129 00c4 B942     		cmp	r1, r7
 4130 00c6 CFD3     		bcc	.L190
 4131              	.L189:
 4132              	.LVL316:
  16:quantum/rgb_matrix_runners/effect_runner_reactive.h ****                 tick = g_last_hit_tracker.tick[j];
 4133              		.loc 33 16 50 discriminator 1 view .LVU983
 4134 00c8 013B     		subs	r3, r3, #1
 4135              	.LVL317:
  16:quantum/rgb_matrix_runners/effect_runner_reactive.h ****                 tick = g_last_hit_tracker.tick[j];
 4136              		.loc 33 16 50 discriminator 1 view .LVU984
 4137 00ca CAE7     		b	.L188
 4138              	.L194:
 4139              		.align	2
 4140              	.L193:
 4141 00cc 00000000 		.word	rgb_matrix_config
 4142 00d0 46010000 		.word	g_led_config+326
 4143 00d4 00000000 		.word	g_last_hit_tracker
 4144 00d8 11000000 		.word	g_last_hit_tracker+17
 4145              	.LBE286:
 4146              	.LBE288:
 4147              	.LBE291:
 4148              		.cfi_endproc
 4149              	.LFE84:
 4151              		.section	.text.SOLID_REACTIVE_SIMPLE,"ax",%progbits
 4152              		.align	1
 4153              		.global	SOLID_REACTIVE_SIMPLE
 4154              		.syntax unified
 4155              		.thumb
 4156              		.thumb_func
 4157              		.fpu fpv4-sp-d16
 4159              	SOLID_REACTIVE_SIMPLE:
 4160              	.LVL318:
 4161              	.LFB130:
  10:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** 
  11:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** bool SOLID_REACTIVE_SIMPLE(effect_params_t* params) { return effect_runner_reactive(params, &SOLID_
 4162              		.loc 15 11 53 is_stmt 1 view -0
 4163              		.cfi_startproc
 4164              		@ args = 0, pretend = 0, frame = 0
 4165              		@ frame_needed = 0, uses_anonymous_args = 0
 4166              		@ link register save eliminated.
 4167              		.loc 15 11 55 view .LVU986
 4168              		.loc 15 11 62 is_stmt 0 view .LVU987
 4169 0000 0149     		ldr	r1, .L196
 4170 0002 FFF7FEBF 		b	effect_runner_reactive
 4171              	.LVL319:
 4172              	.L197:
 4173              		.loc 15 11 62 view .LVU988
 4174 0006 00BF     		.align	2
 4175              	.L196:
 4176 0008 00000000 		.word	SOLID_REACTIVE_SIMPLE_math
 4177              		.cfi_endproc
 4178              	.LFE130:
 4180              		.section	.text.SOLID_REACTIVE,"ax",%progbits
 4181              		.align	1
 4182              		.global	SOLID_REACTIVE
 4183              		.syntax unified
 4184              		.thumb
 4185              		.thumb_func
 4186              		.fpu fpv4-sp-d16
 4188              	SOLID_REACTIVE:
 4189              	.LVL320:
 4190              	.LFB132:
  10:quantum/rgb_matrix_animations/solid_reactive_anim.h **** 
  11:quantum/rgb_matrix_animations/solid_reactive_anim.h **** bool SOLID_REACTIVE(effect_params_t* params) { return effect_runner_reactive(params, &SOLID_REACTIV
 4191              		.loc 16 11 46 is_stmt 1 view -0
 4192              		.cfi_startproc
 4193              		@ args = 0, pretend = 0, frame = 0
 4194              		@ frame_needed = 0, uses_anonymous_args = 0
 4195              		@ link register save eliminated.
 4196              		.loc 16 11 48 view .LVU990
 4197              		.loc 16 11 55 is_stmt 0 view .LVU991
 4198 0000 0149     		ldr	r1, .L199
 4199 0002 FFF7FEBF 		b	effect_runner_reactive
 4200              	.LVL321:
 4201              	.L200:
 4202              		.loc 16 11 55 view .LVU992
 4203 0006 00BF     		.align	2
 4204              	.L199:
 4205 0008 00000000 		.word	SOLID_REACTIVE_math
 4206              		.cfi_endproc
 4207              	.LFE132:
 4209              		.section	.text.effect_runner_reactive_splash,"ax",%progbits
 4210              		.align	1
 4211              		.global	effect_runner_reactive_splash
 4212              		.syntax unified
 4213              		.thumb
 4214              		.thumb_func
 4215              		.fpu fpv4-sp-d16
 4217              	effect_runner_reactive_splash:
 4218              	.LVL322:
 4219              	.LFB85:
 4220              		.file 34 "quantum/rgb_matrix_runners/effect_runner_reactive_splash.h"
   1:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
   4:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** typedef HSV (*reactive_splash_f)(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint16_t tick);
   6:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** 
   7:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** bool effect_runner_reactive_splash(uint8_t start, effect_params_t* params, reactive_splash_f effect
 4221              		.loc 34 7 107 is_stmt 1 view -0
 4222              		.cfi_startproc
 4223              		@ args = 0, pretend = 0, frame = 48
 4224              		@ frame_needed = 0, uses_anonymous_args = 0
   8:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4225              		.loc 34 8 5 view .LVU994
   7:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4226              		.loc 34 7 107 is_stmt 0 view .LVU995
 4227 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4228              		.cfi_def_cfa_offset 36
 4229              		.cfi_offset 4, -36
 4230              		.cfi_offset 5, -32
 4231              		.cfi_offset 6, -28
 4232              		.cfi_offset 7, -24
 4233              		.cfi_offset 8, -20
 4234              		.cfi_offset 9, -16
 4235              		.cfi_offset 10, -12
 4236              		.cfi_offset 11, -8
 4237              		.cfi_offset 14, -4
 4238              		.loc 34 8 5 view .LVU996
 4239 0004 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 4240              	.LBB292:
 4241              	.LBB293:
 4242              	.LBB294:
 4243              	.LBB295:
   9:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** 
  10:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     uint8_t count = g_last_hit_tracker.count;
  11:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  12:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  13:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         HSV hsv = rgb_matrix_config.hsv;
  14:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         hsv.v   = 0;
  15:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         for (uint8_t j = start; j < count; j++) {
  16:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dx   = g_led_config.point[i].x - g_last_hit_tracker.x[j];
  17:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dy   = g_led_config.point[i].y - g_last_hit_tracker.y[j];
  18:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint8_t  dist = sqrt16(dx * dx + dy * dy);
  19:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint16_t tick = scale16by8(g_last_hit_tracker.tick[j], rgb_matrix_config.speed);
 4244              		.loc 34 19 29 view .LVU997
 4245 0006 DFF824B1 		ldr	fp, .L208+12
 4246              	.LBE295:
 4247              	.LBE294:
 4248              	.LBE293:
 4249              	.LBE292:
   8:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** 
 4250              		.loc 34 8 5 view .LVU998
 4251 000a C4EB0414 		rsb	r4, r4, r4, lsl #4
 4252 000e E4B2     		uxtb	r4, r4
 4253              	.LVL323:
   8:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** 
 4254              		.loc 34 8 5 is_stmt 1 view .LVU999
 4255 0010 04F10F06 		add	r6, r4, #15
 4256 0014 F6B2     		uxtb	r6, r6
 4257              	.LVL324:
   8:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** 
 4258              		.loc 34 8 5 view .LVU1000
   7:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4259              		.loc 34 7 107 is_stmt 0 view .LVU1001
 4260 0016 8FB0     		sub	sp, sp, #60
 4261              		.cfi_def_cfa_offset 96
 4262 0018 772E     		cmp	r6, #119
 4263 001a 3346     		mov	r3, r6
 4264 001c 28BF     		it	cs
 4265 001e 7723     		movcs	r3, #119
 4266 0020 0593     		str	r3, [sp, #20]
 4267              	.LVL325:
   8:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** 
 4268              		.loc 34 8 44 is_stmt 1 view .LVU1002
  10:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4269              		.loc 34 10 5 view .LVU1003
  10:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4270              		.loc 34 10 13 is_stmt 0 view .LVU1004
 4271 0022 3F4B     		ldr	r3, .L208
   7:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4272              		.loc 34 7 107 view .LVU1005
 4273 0024 0692     		str	r2, [sp, #24]
  10:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4274              		.loc 34 10 13 view .LVU1006
 4275 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4276 0028 0493     		str	r3, [sp, #16]
 4277              	.LVL326:
  11:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4278              		.loc 34 11 5 is_stmt 1 view .LVU1007
 4279              	.LBB316:
  11:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4280              		.loc 34 11 10 view .LVU1008
  11:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4281              		.loc 34 11 10 is_stmt 0 view .LVU1009
 4282 002a 3E4B     		ldr	r3, .L208+4
 4283 002c 03EB4407 		add	r7, r3, r4, lsl #1
 4284              	.LBB313:
  12:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         HSV hsv = rgb_matrix_config.hsv;
 4285              		.loc 34 12 9 view .LVU1010
 4286 0030 03F5A373 		add	r3, r3, #326
 4287              	.LBE313:
 4288              	.LBE316:
   7:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4289              		.loc 34 7 107 view .LVU1011
 4290 0034 8146     		mov	r9, r0
 4291 0036 8A46     		mov	r10, r1
 4292              	.LBB317:
 4293              	.LBB314:
  12:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         HSV hsv = rgb_matrix_config.hsv;
 4294              		.loc 34 12 9 view .LVU1012
 4295 0038 0893     		str	r3, [sp, #32]
 4296              	.LVL327:
 4297              	.L202:
  12:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         HSV hsv = rgb_matrix_config.hsv;
 4298              		.loc 34 12 9 view .LVU1013
 4299              	.LBE314:
  11:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4300              		.loc 34 11 5 discriminator 1 view .LVU1014
 4301 003a 059A     		ldr	r2, [sp, #20]
 4302 003c E3B2     		uxtb	r3, r4
 4303 003e 9A42     		cmp	r2, r3
 4304 0040 06D8     		bhi	.L207
 4305              	.LBE317:
  20:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             hsv           = effect_func(hsv, dx, dy, dist, tick);
  21:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         }
  22:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         hsv.v   = scale8(hsv.v, rgb_matrix_config.hsv.v);
  23:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         RGB rgb = hsv_to_rgb(hsv);
  24:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  25:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     }
  26:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     return led_max < DRIVER_LED_TOTAL;
 4306              		.loc 34 26 5 is_stmt 1 view .LVU1015
  27:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h **** }
 4307              		.loc 34 27 1 is_stmt 0 view .LVU1016
 4308 0042 762E     		cmp	r6, #118
 4309 0044 8CBF     		ite	hi
 4310 0046 0020     		movhi	r0, #0
 4311 0048 0120     		movls	r0, #1
 4312 004a 0FB0     		add	sp, sp, #60
 4313              		.cfi_remember_state
 4314              		.cfi_def_cfa_offset 36
 4315              		@ sp needed
 4316 004c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4317              	.LVL328:
 4318              	.L207:
 4319              		.cfi_restore_state
 4320              	.LBB318:
 4321              	.LBB315:
  12:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         HSV hsv = rgb_matrix_config.hsv;
 4322              		.loc 34 12 9 is_stmt 1 view .LVU1017
 4323 0050 089B     		ldr	r3, [sp, #32]
 4324 0052 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 4325 0054 9AF80130 		ldrb	r3, [r10, #1]	@ zero_extendqisi2
 4326 0058 1A42     		tst	r2, r3
 4327 005a 22D0     		beq	.L204
  13:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         hsv.v   = 0;
 4328              		.loc 34 13 9 view .LVU1018
  13:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         hsv.v   = 0;
 4329              		.loc 34 13 13 is_stmt 0 view .LVU1019
 4330 005c 324B     		ldr	r3, .L208+8
 4331 005e 304A     		ldr	r2, .L208
 4332 0060 1B88     		ldrh	r3, [r3]	@ unaligned
 4333 0062 ADF83030 		strh	r3, [sp, #48]	@ unaligned
 4334              	.LVL329:
  14:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         for (uint8_t j = start; j < count; j++) {
 4335              		.loc 34 14 9 is_stmt 1 view .LVU1020
  15:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dx   = g_led_config.point[i].x - g_last_hit_tracker.x[j];
 4336              		.loc 34 15 9 view .LVU1021
 4337              	.LBB306:
  15:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dx   = g_led_config.point[i].x - g_last_hit_tracker.x[j];
 4338              		.loc 34 15 14 view .LVU1022
  15:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dx   = g_led_config.point[i].x - g_last_hit_tracker.x[j];
 4339              		.loc 34 15 14 is_stmt 0 view .LVU1023
 4340 0066 09F10105 		add	r5, r9, #1
 4341 006a AB18     		adds	r3, r5, r2
 4342 006c 0393     		str	r3, [sp, #12]
 4343 006e C846     		mov	r8, r9
 4344              	.LBE306:
  14:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         for (uint8_t j = start; j < count; j++) {
 4345              		.loc 34 14 17 view .LVU1024
 4346 0070 0023     		movs	r3, #0
 4347              	.LBB307:
 4348              	.LBB304:
  19:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             hsv           = effect_func(hsv, dx, dy, dist, tick);
 4349              		.loc 34 19 29 view .LVU1025
 4350 0072 0792     		str	r2, [sp, #28]
 4351              	.LVL330:
 4352              	.L205:
  19:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             hsv           = effect_func(hsv, dx, dy, dist, tick);
 4353              		.loc 34 19 29 view .LVU1026
 4354              	.LBE304:
  15:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dx   = g_led_config.point[i].x - g_last_hit_tracker.x[j];
 4355              		.loc 34 15 9 discriminator 1 view .LVU1027
 4356 0074 0499     		ldr	r1, [sp, #16]
 4357 0076 5FFA88F2 		uxtb	r2, r8
 4358 007a 9142     		cmp	r1, r2
 4359 007c 14D8     		bhi	.L206
 4360              	.LBE307:
  22:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         RGB rgb = hsv_to_rgb(hsv);
 4361              		.loc 34 22 9 is_stmt 1 view .LVU1028
 4362              	.LVL331:
 4363              	.LBB308:
 4364              	.LBI308:
  20:./lib/lib8tion/scale8.h **** {
 4365              		.loc 4 20 34 view .LVU1029
 4366              	.LBB309:
  26:./lib/lib8tion/scale8.h **** #endif
 4367              		.loc 4 26 5 view .LVU1030
  26:./lib/lib8tion/scale8.h **** #endif
 4368              		.loc 4 26 5 is_stmt 0 view .LVU1031
 4369              	.LBE309:
 4370              	.LBE308:
  23:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4371              		.loc 34 23 9 is_stmt 1 view .LVU1032
 4372              	.LBB311:
 4373              	.LBB310:
  26:./lib/lib8tion/scale8.h **** #endif
 4374              		.loc 4 26 25 is_stmt 0 view .LVU1033
 4375 007e 9BF80300 		ldrb	r0, [fp, #3]	@ zero_extendqisi2
 4376 0082 10FB03F3 		smulbb	r3, r0, r3
 4377              	.LVL332:
  26:./lib/lib8tion/scale8.h **** #endif
 4378              		.loc 4 26 47 view .LVU1034
 4379 0086 1B12     		asrs	r3, r3, #8
 4380 0088 8DF83230 		strb	r3, [sp, #50]
 4381              	.LBE310:
 4382              	.LBE311:
  23:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4383              		.loc 34 23 19 view .LVU1035
 4384 008c 0C98     		ldr	r0, [sp, #48]
 4385 008e FFF7FEFF 		bl	hsv_to_rgb
 4386              	.LVL333:
  24:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     }
 4387              		.loc 34 24 9 is_stmt 1 view .LVU1036
 4388 0092 C0F30743 		ubfx	r3, r0, #16, #8
 4389 0096 C2B2     		uxtb	r2, r0
 4390 0098 C0F30721 		ubfx	r1, r0, #8, #8
 4391 009c 2046     		mov	r0, r4
 4392 009e FFF7FEFF 		bl	rgb_matrix_set_color
 4393              	.LVL334:
 4394              	.L204:
  24:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     }
 4395              		.loc 34 24 9 is_stmt 0 view .LVU1037
 4396 00a2 0134     		adds	r4, r4, #1
 4397              	.LVL335:
  24:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     }
 4398              		.loc 34 24 9 view .LVU1038
 4399 00a4 0237     		adds	r7, r7, #2
 4400 00a6 C8E7     		b	.L202
 4401              	.LVL336:
 4402              	.L206:
  24:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****     }
 4403              		.loc 34 24 9 view .LVU1039
 4404 00a8 0B93     		str	r3, [sp, #44]
 4405              	.LBB312:
 4406              	.LBB305:
  16:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dy   = g_led_config.point[i].y - g_last_hit_tracker.y[j];
 4407              		.loc 34 16 13 is_stmt 1 discriminator 3 view .LVU1040
  16:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dy   = g_led_config.point[i].y - g_last_hit_tracker.y[j];
 4408              		.loc 34 16 75 is_stmt 0 discriminator 3 view .LVU1041
 4409 00aa 039B     		ldr	r3, [sp, #12]
 4410              	.LVL337:
  16:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dy   = g_led_config.point[i].y - g_last_hit_tracker.y[j];
 4411              		.loc 34 16 50 discriminator 3 view .LVU1042
 4412 00ac 97F85810 		ldrb	r1, [r7, #88]	@ zero_extendqisi2
  16:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dy   = g_led_config.point[i].y - g_last_hit_tracker.y[j];
 4413              		.loc 34 16 75 discriminator 3 view .LVU1043
 4414 00b0 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 4415 00b4 0393     		str	r3, [sp, #12]
  17:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint8_t  dist = sqrt16(dx * dx + dy * dy);
 4416              		.loc 34 17 75 discriminator 3 view .LVU1044
 4417 00b6 D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
  16:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dy   = g_led_config.point[i].y - g_last_hit_tracker.y[j];
 4418              		.loc 34 16 53 discriminator 3 view .LVU1045
 4419 00b8 891A     		subs	r1, r1, r2
  17:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint8_t  dist = sqrt16(dx * dx + dy * dy);
 4420              		.loc 34 17 50 discriminator 3 view .LVU1046
 4421 00ba 97F85920 		ldrb	r2, [r7, #89]	@ zero_extendqisi2
  17:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint8_t  dist = sqrt16(dx * dx + dy * dy);
 4422              		.loc 34 17 53 discriminator 3 view .LVU1047
 4423 00be 121A     		subs	r2, r2, r0
 4424 00c0 92B2     		uxth	r2, r2
  16:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             int16_t  dy   = g_led_config.point[i].y - g_last_hit_tracker.y[j];
 4425              		.loc 34 16 53 discriminator 3 view .LVU1048
 4426 00c2 89B2     		uxth	r1, r1
 4427              	.LVL338:
  17:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint8_t  dist = sqrt16(dx * dx + dy * dy);
 4428              		.loc 34 17 13 is_stmt 1 discriminator 3 view .LVU1049
  18:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint16_t tick = scale16by8(g_last_hit_tracker.tick[j], rgb_matrix_config.speed);
 4429              		.loc 34 18 13 discriminator 3 view .LVU1050
  18:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint16_t tick = scale16by8(g_last_hit_tracker.tick[j], rgb_matrix_config.speed);
 4430              		.loc 34 18 49 is_stmt 0 discriminator 3 view .LVU1051
 4431 00c4 12FB02F0 		smulbb	r0, r2, r2
  18:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint16_t tick = scale16by8(g_last_hit_tracker.tick[j], rgb_matrix_config.speed);
 4432              		.loc 34 18 29 discriminator 3 view .LVU1052
 4433 00c8 11FB0100 		smlabb	r0, r1, r1, r0
 4434 00cc 80B2     		uxth	r0, r0
  18:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint16_t tick = scale16by8(g_last_hit_tracker.tick[j], rgb_matrix_config.speed);
 4435              		.loc 34 18 49 discriminator 3 view .LVU1053
 4436 00ce 0A92     		str	r2, [sp, #40]
  18:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             uint16_t tick = scale16by8(g_last_hit_tracker.tick[j], rgb_matrix_config.speed);
 4437              		.loc 34 18 29 discriminator 3 view .LVU1054
 4438 00d0 0991     		str	r1, [sp, #36]
 4439 00d2 FFF7FEFF 		bl	sqrt16
 4440              	.LVL339:
  19:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             hsv           = effect_func(hsv, dx, dy, dist, tick);
 4441              		.loc 34 19 13 is_stmt 1 discriminator 3 view .LVU1055
 4442              	.LBB296:
 4443              	.LBI296:
 246:./lib/lib8tion/scale8.h **** {
 4444              		.loc 4 246 35 discriminator 3 view .LVU1056
 4445              	.LBB297:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 4446              		.loc 4 249 5 discriminator 3 view .LVU1057
 253:./lib/lib8tion/scale8.h **** #endif
 4447              		.loc 4 253 5 discriminator 3 view .LVU1058
 4448              	.LBE297:
 4449              	.LBE296:
  19:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             hsv           = effect_func(hsv, dx, dy, dist, tick);
 4450              		.loc 34 19 29 is_stmt 0 discriminator 3 view .LVU1059
 4451 00d6 079B     		ldr	r3, [sp, #28]
 4452              	.LBB301:
 4453              	.LBB298:
 253:./lib/lib8tion/scale8.h **** #endif
 4454              		.loc 4 253 17 discriminator 3 view .LVU1060
 4455 00d8 9BF804E0 		ldrb	lr, [fp, #4]	@ zero_extendqisi2
 4456              	.LBE298:
 4457              	.LBE301:
  20:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         }
 4458              		.loc 34 20 29 discriminator 3 view .LVU1061
 4459 00dc 0A9A     		ldr	r2, [sp, #40]
 4460 00de 0999     		ldr	r1, [sp, #36]
 4461 00e0 069D     		ldr	r5, [sp, #24]
  19:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****             hsv           = effect_func(hsv, dx, dy, dist, tick);
 4462              		.loc 34 19 29 discriminator 3 view .LVU1062
 4463 00e2 08F10C0C 		add	ip, r8, #12
 4464 00e6 03EB4C0C 		add	ip, r3, ip, lsl #1
  20:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         }
 4465              		.loc 34 20 29 discriminator 3 view .LVU1063
 4466 00ea 0B9B     		ldr	r3, [sp, #44]
 4467              	.LBB302:
 4468              	.LBB299:
 253:./lib/lib8tion/scale8.h **** #endif
 4469              		.loc 4 253 17 discriminator 3 view .LVU1064
 4470 00ec BCF801C0 		ldrh	ip, [ip, #1]	@ unaligned
 4471              	.LBE299:
 4472              	.LBE302:
  20:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         }
 4473              		.loc 34 20 29 discriminator 3 view .LVU1065
 4474 00f0 8DF83230 		strb	r3, [sp, #50]
 4475              	.LBB303:
 4476              	.LBB300:
 253:./lib/lib8tion/scale8.h **** #endif
 4477              		.loc 4 253 17 discriminator 3 view .LVU1066
 4478 00f4 0CFB0EFC 		mul	ip, ip, lr
 253:./lib/lib8tion/scale8.h **** #endif
 4479              		.loc 4 253 12 discriminator 3 view .LVU1067
 4480 00f8 4FEA1C2C 		lsr	ip, ip, #8
 4481              	.LVL340:
 4482              		.loc 4 255 5 is_stmt 1 discriminator 3 view .LVU1068
 4483              		.loc 4 255 5 is_stmt 0 discriminator 3 view .LVU1069
 4484              	.LBE300:
 4485              	.LBE303:
  20:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         }
 4486              		.loc 34 20 13 is_stmt 1 discriminator 3 view .LVU1070
  20:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         }
 4487              		.loc 34 20 29 is_stmt 0 discriminator 3 view .LVU1071
 4488 00fc 0346     		mov	r3, r0
 4489 00fe CDF800C0 		str	ip, [sp]
 4490 0102 12B2     		sxth	r2, r2
 4491 0104 09B2     		sxth	r1, r1
 4492 0106 0C98     		ldr	r0, [sp, #48]
 4493              	.LVL341:
  20:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         }
 4494              		.loc 34 20 29 discriminator 3 view .LVU1072
 4495 0108 A847     		blx	r5
 4496              	.LVL342:
  20:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         }
 4497              		.loc 34 20 29 discriminator 3 view .LVU1073
 4498 010a C0F30723 		ubfx	r3, r0, #8, #8
 4499 010e 8DF83130 		strb	r3, [sp, #49]
 4500 0112 8DF83000 		strb	r0, [sp, #48]
 4501 0116 08F10108 		add	r8, r8, #1
 4502              	.LVL343:
  20:quantum/rgb_matrix_runners/effect_runner_reactive_splash.h ****         }
 4503              		.loc 34 20 29 discriminator 3 view .LVU1074
 4504 011a C0F30743 		ubfx	r3, r0, #16, #8
 4505 011e A9E7     		b	.L205
 4506              	.L209:
 4507              		.align	2
 4508              	.L208:
 4509 0120 00000000 		.word	g_last_hit_tracker
 4510 0124 00000000 		.word	g_led_config
 4511 0128 01000000 		.word	rgb_matrix_config+1
 4512 012c 00000000 		.word	rgb_matrix_config
 4513              	.LBE305:
 4514              	.LBE312:
 4515              	.LBE315:
 4516              	.LBE318:
 4517              		.cfi_endproc
 4518              	.LFE85:
 4520              		.section	.text.SOLID_REACTIVE_WIDE,"ax",%progbits
 4521              		.align	1
 4522              		.global	SOLID_REACTIVE_WIDE
 4523              		.syntax unified
 4524              		.thumb
 4525              		.thumb_func
 4526              		.fpu fpv4-sp-d16
 4528              	SOLID_REACTIVE_WIDE:
 4529              	.LVL344:
 4530              	.LFB134:
  20:quantum/rgb_matrix_animations/solid_reactive_wide.h **** 
  21:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #            ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_WIDE
  22:quantum/rgb_matrix_animations/solid_reactive_wide.h **** bool SOLID_REACTIVE_WIDE(effect_params_t* params) { return effect_runner_reactive_splash(qsub8(g_la
 4531              		.loc 17 22 51 is_stmt 1 view -0
 4532              		.cfi_startproc
 4533              		@ args = 0, pretend = 0, frame = 0
 4534              		@ frame_needed = 0, uses_anonymous_args = 0
 4535              		@ link register save eliminated.
 4536              		.loc 17 22 53 view .LVU1076
 4537              	.LBB319:
 4538              	.LBI319:
  88:./lib/lib8tion/math8.h **** {
 4539              		.loc 1 88 34 view .LVU1077
 4540              	.LBB320:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4541              		.loc 1 91 5 view .LVU1078
 4542              	.LBE320:
 4543              	.LBE319:
 4544              		.loc 17 22 60 is_stmt 0 view .LVU1079
 4545 0000 054B     		ldr	r3, .L212
 4546              		.loc 17 22 60 view .LVU1080
 4547 0002 064A     		ldr	r2, .L212+4
 4548              	.LBB322:
 4549              	.LBB321:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4550              		.loc 1 91 19 view .LVU1081
 4551 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4552              		.loc 1 91 19 view .LVU1082
 4553 0006 013B     		subs	r3, r3, #1
 4554              	.LVL345:
  92:./lib/lib8tion/math8.h ****     return t;
 4555              		.loc 1 92 5 is_stmt 1 view .LVU1083
  92:./lib/lib8tion/math8.h ****     return t;
 4556              		.loc 1 92 18 is_stmt 0 view .LVU1084
 4557 0008 B3F1FF3F 		cmp	r3, #-1
 4558 000c 08BF     		it	eq
 4559 000e 0023     		moveq	r3, #0
 4560              	.LVL346:
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4561              		.loc 1 93 5 is_stmt 1 view .LVU1085
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4562              		.loc 1 93 5 is_stmt 0 view .LVU1086
 4563              	.LBE321:
 4564              	.LBE322:
 4565              		.loc 17 22 60 view .LVU1087
 4566 0010 0146     		mov	r1, r0
 4567 0012 D8B2     		uxtb	r0, r3
 4568              	.LVL347:
 4569              		.loc 17 22 60 view .LVU1088
 4570 0014 FFF7FEBF 		b	effect_runner_reactive_splash
 4571              	.LVL348:
 4572              	.L213:
 4573              		.loc 17 22 60 view .LVU1089
 4574              		.align	2
 4575              	.L212:
 4576 0018 00000000 		.word	g_last_hit_tracker
 4577 001c 00000000 		.word	SOLID_REACTIVE_WIDE_math
 4578              		.cfi_endproc
 4579              	.LFE134:
 4581              		.section	.text.SOLID_REACTIVE_MULTIWIDE,"ax",%progbits
 4582              		.align	1
 4583              		.global	SOLID_REACTIVE_MULTIWIDE
 4584              		.syntax unified
 4585              		.thumb
 4586              		.thumb_func
 4587              		.fpu fpv4-sp-d16
 4589              	SOLID_REACTIVE_MULTIWIDE:
 4590              	.LVL349:
 4591              	.LFB135:
  23:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #            endif
  24:quantum/rgb_matrix_animations/solid_reactive_wide.h **** 
  25:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #            ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_MULTIWIDE
  26:quantum/rgb_matrix_animations/solid_reactive_wide.h **** bool SOLID_REACTIVE_MULTIWIDE(effect_params_t* params) { return effect_runner_reactive_splash(0, pa
 4592              		.loc 17 26 56 is_stmt 1 view -0
 4593              		.cfi_startproc
 4594              		@ args = 0, pretend = 0, frame = 0
 4595              		@ frame_needed = 0, uses_anonymous_args = 0
 4596              		@ link register save eliminated.
 4597              		.loc 17 26 58 view .LVU1091
 4598              		.loc 17 26 65 is_stmt 0 view .LVU1092
 4599 0000 0146     		mov	r1, r0
 4600 0002 024A     		ldr	r2, .L215
 4601 0004 0020     		movs	r0, #0
 4602              	.LVL350:
 4603              		.loc 17 26 65 view .LVU1093
 4604 0006 FFF7FEBF 		b	effect_runner_reactive_splash
 4605              	.LVL351:
 4606              	.L216:
 4607              		.loc 17 26 65 view .LVU1094
 4608 000a 00BF     		.align	2
 4609              	.L215:
 4610 000c 00000000 		.word	SOLID_REACTIVE_WIDE_math
 4611              		.cfi_endproc
 4612              	.LFE135:
 4614              		.section	.text.SOLID_REACTIVE_CROSS,"ax",%progbits
 4615              		.align	1
 4616              		.global	SOLID_REACTIVE_CROSS
 4617              		.syntax unified
 4618              		.thumb
 4619              		.thumb_func
 4620              		.fpu fpv4-sp-d16
 4622              	SOLID_REACTIVE_CROSS:
 4623              	.LVL352:
 4624              	.LFB137:
  25:quantum/rgb_matrix_animations/solid_reactive_cross.h **** 
  26:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #            ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_CROSS
  27:quantum/rgb_matrix_animations/solid_reactive_cross.h **** bool SOLID_REACTIVE_CROSS(effect_params_t* params) { return effect_runner_reactive_splash(qsub8(g_l
 4625              		.loc 18 27 52 is_stmt 1 view -0
 4626              		.cfi_startproc
 4627              		@ args = 0, pretend = 0, frame = 0
 4628              		@ frame_needed = 0, uses_anonymous_args = 0
 4629              		@ link register save eliminated.
 4630              		.loc 18 27 54 view .LVU1096
 4631              	.LBB323:
 4632              	.LBI323:
  88:./lib/lib8tion/math8.h **** {
 4633              		.loc 1 88 34 view .LVU1097
 4634              	.LBB324:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4635              		.loc 1 91 5 view .LVU1098
 4636              	.LBE324:
 4637              	.LBE323:
 4638              		.loc 18 27 61 is_stmt 0 view .LVU1099
 4639 0000 054B     		ldr	r3, .L219
 4640              		.loc 18 27 61 view .LVU1100
 4641 0002 064A     		ldr	r2, .L219+4
 4642              	.LBB326:
 4643              	.LBB325:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4644              		.loc 1 91 19 view .LVU1101
 4645 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4646              		.loc 1 91 19 view .LVU1102
 4647 0006 013B     		subs	r3, r3, #1
 4648              	.LVL353:
  92:./lib/lib8tion/math8.h ****     return t;
 4649              		.loc 1 92 5 is_stmt 1 view .LVU1103
  92:./lib/lib8tion/math8.h ****     return t;
 4650              		.loc 1 92 18 is_stmt 0 view .LVU1104
 4651 0008 B3F1FF3F 		cmp	r3, #-1
 4652 000c 08BF     		it	eq
 4653 000e 0023     		moveq	r3, #0
 4654              	.LVL354:
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4655              		.loc 1 93 5 is_stmt 1 view .LVU1105
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4656              		.loc 1 93 5 is_stmt 0 view .LVU1106
 4657              	.LBE325:
 4658              	.LBE326:
 4659              		.loc 18 27 61 view .LVU1107
 4660 0010 0146     		mov	r1, r0
 4661 0012 D8B2     		uxtb	r0, r3
 4662              	.LVL355:
 4663              		.loc 18 27 61 view .LVU1108
 4664 0014 FFF7FEBF 		b	effect_runner_reactive_splash
 4665              	.LVL356:
 4666              	.L220:
 4667              		.loc 18 27 61 view .LVU1109
 4668              		.align	2
 4669              	.L219:
 4670 0018 00000000 		.word	g_last_hit_tracker
 4671 001c 00000000 		.word	SOLID_REACTIVE_CROSS_math
 4672              		.cfi_endproc
 4673              	.LFE137:
 4675              		.section	.text.SOLID_REACTIVE_MULTICROSS,"ax",%progbits
 4676              		.align	1
 4677              		.global	SOLID_REACTIVE_MULTICROSS
 4678              		.syntax unified
 4679              		.thumb
 4680              		.thumb_func
 4681              		.fpu fpv4-sp-d16
 4683              	SOLID_REACTIVE_MULTICROSS:
 4684              	.LVL357:
 4685              	.LFB138:
  28:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #            endif
  29:quantum/rgb_matrix_animations/solid_reactive_cross.h **** 
  30:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #            ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_MULTICROSS
  31:quantum/rgb_matrix_animations/solid_reactive_cross.h **** bool SOLID_REACTIVE_MULTICROSS(effect_params_t* params) { return effect_runner_reactive_splash(0, p
 4686              		.loc 18 31 57 is_stmt 1 view -0
 4687              		.cfi_startproc
 4688              		@ args = 0, pretend = 0, frame = 0
 4689              		@ frame_needed = 0, uses_anonymous_args = 0
 4690              		@ link register save eliminated.
 4691              		.loc 18 31 59 view .LVU1111
 4692              		.loc 18 31 66 is_stmt 0 view .LVU1112
 4693 0000 0146     		mov	r1, r0
 4694 0002 024A     		ldr	r2, .L222
 4695 0004 0020     		movs	r0, #0
 4696              	.LVL358:
 4697              		.loc 18 31 66 view .LVU1113
 4698 0006 FFF7FEBF 		b	effect_runner_reactive_splash
 4699              	.LVL359:
 4700              	.L223:
 4701              		.loc 18 31 66 view .LVU1114
 4702 000a 00BF     		.align	2
 4703              	.L222:
 4704 000c 00000000 		.word	SOLID_REACTIVE_CROSS_math
 4705              		.cfi_endproc
 4706              	.LFE138:
 4708              		.section	.text.SOLID_REACTIVE_NEXUS,"ax",%progbits
 4709              		.align	1
 4710              		.global	SOLID_REACTIVE_NEXUS
 4711              		.syntax unified
 4712              		.thumb
 4713              		.thumb_func
 4714              		.fpu fpv4-sp-d16
 4716              	SOLID_REACTIVE_NEXUS:
 4717              	.LVL360:
 4718              	.LFB140:
  23:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** 
  24:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #            ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_NEXUS
  25:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** bool SOLID_REACTIVE_NEXUS(effect_params_t* params) { return effect_runner_reactive_splash(qsub8(g_l
 4719              		.loc 19 25 52 is_stmt 1 view -0
 4720              		.cfi_startproc
 4721              		@ args = 0, pretend = 0, frame = 0
 4722              		@ frame_needed = 0, uses_anonymous_args = 0
 4723              		@ link register save eliminated.
 4724              		.loc 19 25 54 view .LVU1116
 4725              	.LBB327:
 4726              	.LBI327:
  88:./lib/lib8tion/math8.h **** {
 4727              		.loc 1 88 34 view .LVU1117
 4728              	.LBB328:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4729              		.loc 1 91 5 view .LVU1118
 4730              	.LBE328:
 4731              	.LBE327:
 4732              		.loc 19 25 61 is_stmt 0 view .LVU1119
 4733 0000 054B     		ldr	r3, .L226
 4734              		.loc 19 25 61 view .LVU1120
 4735 0002 064A     		ldr	r2, .L226+4
 4736              	.LBB330:
 4737              	.LBB329:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4738              		.loc 1 91 19 view .LVU1121
 4739 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4740              		.loc 1 91 19 view .LVU1122
 4741 0006 013B     		subs	r3, r3, #1
 4742              	.LVL361:
  92:./lib/lib8tion/math8.h ****     return t;
 4743              		.loc 1 92 5 is_stmt 1 view .LVU1123
  92:./lib/lib8tion/math8.h ****     return t;
 4744              		.loc 1 92 18 is_stmt 0 view .LVU1124
 4745 0008 B3F1FF3F 		cmp	r3, #-1
 4746 000c 08BF     		it	eq
 4747 000e 0023     		moveq	r3, #0
 4748              	.LVL362:
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4749              		.loc 1 93 5 is_stmt 1 view .LVU1125
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4750              		.loc 1 93 5 is_stmt 0 view .LVU1126
 4751              	.LBE329:
 4752              	.LBE330:
 4753              		.loc 19 25 61 view .LVU1127
 4754 0010 0146     		mov	r1, r0
 4755 0012 D8B2     		uxtb	r0, r3
 4756              	.LVL363:
 4757              		.loc 19 25 61 view .LVU1128
 4758 0014 FFF7FEBF 		b	effect_runner_reactive_splash
 4759              	.LVL364:
 4760              	.L227:
 4761              		.loc 19 25 61 view .LVU1129
 4762              		.align	2
 4763              	.L226:
 4764 0018 00000000 		.word	g_last_hit_tracker
 4765 001c 00000000 		.word	SOLID_REACTIVE_NEXUS_math
 4766              		.cfi_endproc
 4767              	.LFE140:
 4769              		.section	.text.SOLID_REACTIVE_MULTINEXUS,"ax",%progbits
 4770              		.align	1
 4771              		.global	SOLID_REACTIVE_MULTINEXUS
 4772              		.syntax unified
 4773              		.thumb
 4774              		.thumb_func
 4775              		.fpu fpv4-sp-d16
 4777              	SOLID_REACTIVE_MULTINEXUS:
 4778              	.LVL365:
 4779              	.LFB141:
  26:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #            endif
  27:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** 
  28:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #            ifndef DISABLE_RGB_MATRIX_SOLID_REACTIVE_MULTINEXUS
  29:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** bool SOLID_REACTIVE_MULTINEXUS(effect_params_t* params) { return effect_runner_reactive_splash(0, p
 4780              		.loc 19 29 57 is_stmt 1 view -0
 4781              		.cfi_startproc
 4782              		@ args = 0, pretend = 0, frame = 0
 4783              		@ frame_needed = 0, uses_anonymous_args = 0
 4784              		@ link register save eliminated.
 4785              		.loc 19 29 59 view .LVU1131
 4786              		.loc 19 29 66 is_stmt 0 view .LVU1132
 4787 0000 0146     		mov	r1, r0
 4788 0002 024A     		ldr	r2, .L229
 4789 0004 0020     		movs	r0, #0
 4790              	.LVL366:
 4791              		.loc 19 29 66 view .LVU1133
 4792 0006 FFF7FEBF 		b	effect_runner_reactive_splash
 4793              	.LVL367:
 4794              	.L230:
 4795              		.loc 19 29 66 view .LVU1134
 4796 000a 00BF     		.align	2
 4797              	.L229:
 4798 000c 00000000 		.word	SOLID_REACTIVE_NEXUS_math
 4799              		.cfi_endproc
 4800              	.LFE141:
 4802              		.section	.text.SPLASH,"ax",%progbits
 4803              		.align	1
 4804              		.global	SPLASH
 4805              		.syntax unified
 4806              		.thumb
 4807              		.thumb_func
 4808              		.fpu fpv4-sp-d16
 4810              	SPLASH:
 4811              	.LVL368:
 4812              	.LFB143:
  21:quantum/rgb_matrix_animations/splash_anim.h **** 
  22:quantum/rgb_matrix_animations/splash_anim.h **** #            ifndef DISABLE_RGB_MATRIX_SPLASH
  23:quantum/rgb_matrix_animations/splash_anim.h **** bool SPLASH(effect_params_t* params) { return effect_runner_reactive_splash(qsub8(g_last_hit_tracke
 4813              		.loc 20 23 38 is_stmt 1 view -0
 4814              		.cfi_startproc
 4815              		@ args = 0, pretend = 0, frame = 0
 4816              		@ frame_needed = 0, uses_anonymous_args = 0
 4817              		@ link register save eliminated.
 4818              		.loc 20 23 40 view .LVU1136
 4819              	.LBB331:
 4820              	.LBI331:
  88:./lib/lib8tion/math8.h **** {
 4821              		.loc 1 88 34 view .LVU1137
 4822              	.LBB332:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4823              		.loc 1 91 5 view .LVU1138
 4824              	.LBE332:
 4825              	.LBE331:
 4826              		.loc 20 23 47 is_stmt 0 view .LVU1139
 4827 0000 054B     		ldr	r3, .L233
 4828              		.loc 20 23 47 view .LVU1140
 4829 0002 064A     		ldr	r2, .L233+4
 4830              	.LBB334:
 4831              	.LBB333:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4832              		.loc 1 91 19 view .LVU1141
 4833 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4834              		.loc 1 91 19 view .LVU1142
 4835 0006 013B     		subs	r3, r3, #1
 4836              	.LVL369:
  92:./lib/lib8tion/math8.h ****     return t;
 4837              		.loc 1 92 5 is_stmt 1 view .LVU1143
  92:./lib/lib8tion/math8.h ****     return t;
 4838              		.loc 1 92 18 is_stmt 0 view .LVU1144
 4839 0008 B3F1FF3F 		cmp	r3, #-1
 4840 000c 08BF     		it	eq
 4841 000e 0023     		moveq	r3, #0
 4842              	.LVL370:
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4843              		.loc 1 93 5 is_stmt 1 view .LVU1145
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4844              		.loc 1 93 5 is_stmt 0 view .LVU1146
 4845              	.LBE333:
 4846              	.LBE334:
 4847              		.loc 20 23 47 view .LVU1147
 4848 0010 0146     		mov	r1, r0
 4849 0012 D8B2     		uxtb	r0, r3
 4850              	.LVL371:
 4851              		.loc 20 23 47 view .LVU1148
 4852 0014 FFF7FEBF 		b	effect_runner_reactive_splash
 4853              	.LVL372:
 4854              	.L234:
 4855              		.loc 20 23 47 view .LVU1149
 4856              		.align	2
 4857              	.L233:
 4858 0018 00000000 		.word	g_last_hit_tracker
 4859 001c 00000000 		.word	SPLASH_math
 4860              		.cfi_endproc
 4861              	.LFE143:
 4863              		.section	.text.MULTISPLASH,"ax",%progbits
 4864              		.align	1
 4865              		.global	MULTISPLASH
 4866              		.syntax unified
 4867              		.thumb
 4868              		.thumb_func
 4869              		.fpu fpv4-sp-d16
 4871              	MULTISPLASH:
 4872              	.LVL373:
 4873              	.LFB144:
  24:quantum/rgb_matrix_animations/splash_anim.h **** #            endif
  25:quantum/rgb_matrix_animations/splash_anim.h **** 
  26:quantum/rgb_matrix_animations/splash_anim.h **** #            ifndef DISABLE_RGB_MATRIX_MULTISPLASH
  27:quantum/rgb_matrix_animations/splash_anim.h **** bool MULTISPLASH(effect_params_t* params) { return effect_runner_reactive_splash(0, params, &SPLASH
 4874              		.loc 20 27 43 is_stmt 1 view -0
 4875              		.cfi_startproc
 4876              		@ args = 0, pretend = 0, frame = 0
 4877              		@ frame_needed = 0, uses_anonymous_args = 0
 4878              		@ link register save eliminated.
 4879              		.loc 20 27 45 view .LVU1151
 4880              		.loc 20 27 52 is_stmt 0 view .LVU1152
 4881 0000 0146     		mov	r1, r0
 4882 0002 024A     		ldr	r2, .L236
 4883 0004 0020     		movs	r0, #0
 4884              	.LVL374:
 4885              		.loc 20 27 52 view .LVU1153
 4886 0006 FFF7FEBF 		b	effect_runner_reactive_splash
 4887              	.LVL375:
 4888              	.L237:
 4889              		.loc 20 27 52 view .LVU1154
 4890 000a 00BF     		.align	2
 4891              	.L236:
 4892 000c 00000000 		.word	SPLASH_math
 4893              		.cfi_endproc
 4894              	.LFE144:
 4896              		.section	.text.SOLID_SPLASH,"ax",%progbits
 4897              		.align	1
 4898              		.global	SOLID_SPLASH
 4899              		.syntax unified
 4900              		.thumb
 4901              		.thumb_func
 4902              		.fpu fpv4-sp-d16
 4904              	SOLID_SPLASH:
 4905              	.LVL376:
 4906              	.LFB146:
  20:quantum/rgb_matrix_animations/solid_splash_anim.h **** 
  21:quantum/rgb_matrix_animations/solid_splash_anim.h **** #            ifndef DISABLE_RGB_MATRIX_SOLID_SPLASH
  22:quantum/rgb_matrix_animations/solid_splash_anim.h **** bool SOLID_SPLASH(effect_params_t* params) { return effect_runner_reactive_splash(qsub8(g_last_hit_
 4907              		.loc 21 22 44 is_stmt 1 view -0
 4908              		.cfi_startproc
 4909              		@ args = 0, pretend = 0, frame = 0
 4910              		@ frame_needed = 0, uses_anonymous_args = 0
 4911              		@ link register save eliminated.
 4912              		.loc 21 22 46 view .LVU1156
 4913              	.LBB335:
 4914              	.LBI335:
  88:./lib/lib8tion/math8.h **** {
 4915              		.loc 1 88 34 view .LVU1157
 4916              	.LBB336:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4917              		.loc 1 91 5 view .LVU1158
 4918              	.LBE336:
 4919              	.LBE335:
 4920              		.loc 21 22 53 is_stmt 0 view .LVU1159
 4921 0000 054B     		ldr	r3, .L240
 4922              		.loc 21 22 53 view .LVU1160
 4923 0002 064A     		ldr	r2, .L240+4
 4924              	.LBB338:
 4925              	.LBB337:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4926              		.loc 1 91 19 view .LVU1161
 4927 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 4928              		.loc 1 91 19 view .LVU1162
 4929 0006 013B     		subs	r3, r3, #1
 4930              	.LVL377:
  92:./lib/lib8tion/math8.h ****     return t;
 4931              		.loc 1 92 5 is_stmt 1 view .LVU1163
  92:./lib/lib8tion/math8.h ****     return t;
 4932              		.loc 1 92 18 is_stmt 0 view .LVU1164
 4933 0008 B3F1FF3F 		cmp	r3, #-1
 4934 000c 08BF     		it	eq
 4935 000e 0023     		moveq	r3, #0
 4936              	.LVL378:
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4937              		.loc 1 93 5 is_stmt 1 view .LVU1165
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 4938              		.loc 1 93 5 is_stmt 0 view .LVU1166
 4939              	.LBE337:
 4940              	.LBE338:
 4941              		.loc 21 22 53 view .LVU1167
 4942 0010 0146     		mov	r1, r0
 4943 0012 D8B2     		uxtb	r0, r3
 4944              	.LVL379:
 4945              		.loc 21 22 53 view .LVU1168
 4946 0014 FFF7FEBF 		b	effect_runner_reactive_splash
 4947              	.LVL380:
 4948              	.L241:
 4949              		.loc 21 22 53 view .LVU1169
 4950              		.align	2
 4951              	.L240:
 4952 0018 00000000 		.word	g_last_hit_tracker
 4953 001c 00000000 		.word	SOLID_SPLASH_math
 4954              		.cfi_endproc
 4955              	.LFE146:
 4957              		.section	.text.SOLID_MULTISPLASH,"ax",%progbits
 4958              		.align	1
 4959              		.global	SOLID_MULTISPLASH
 4960              		.syntax unified
 4961              		.thumb
 4962              		.thumb_func
 4963              		.fpu fpv4-sp-d16
 4965              	SOLID_MULTISPLASH:
 4966              	.LVL381:
 4967              	.LFB147:
  23:quantum/rgb_matrix_animations/solid_splash_anim.h **** #            endif
  24:quantum/rgb_matrix_animations/solid_splash_anim.h **** 
  25:quantum/rgb_matrix_animations/solid_splash_anim.h **** #            ifndef DISABLE_RGB_MATRIX_SOLID_MULTISPLASH
  26:quantum/rgb_matrix_animations/solid_splash_anim.h **** bool SOLID_MULTISPLASH(effect_params_t* params) { return effect_runner_reactive_splash(0, params, &
 4968              		.loc 21 26 49 is_stmt 1 view -0
 4969              		.cfi_startproc
 4970              		@ args = 0, pretend = 0, frame = 0
 4971              		@ frame_needed = 0, uses_anonymous_args = 0
 4972              		@ link register save eliminated.
 4973              		.loc 21 26 51 view .LVU1171
 4974              		.loc 21 26 58 is_stmt 0 view .LVU1172
 4975 0000 0146     		mov	r1, r0
 4976 0002 024A     		ldr	r2, .L243
 4977 0004 0020     		movs	r0, #0
 4978              	.LVL382:
 4979              		.loc 21 26 58 view .LVU1173
 4980 0006 FFF7FEBF 		b	effect_runner_reactive_splash
 4981              	.LVL383:
 4982              	.L244:
 4983              		.loc 21 26 58 view .LVU1174
 4984 000a 00BF     		.align	2
 4985              	.L243:
 4986 000c 00000000 		.word	SOLID_SPLASH_math
 4987              		.cfi_endproc
 4988              	.LFE147:
 4990              		.section	.text.SOLID_COLOR,"ax",%progbits
 4991              		.align	1
 4992              		.global	SOLID_COLOR
 4993              		.syntax unified
 4994              		.thumb
 4995              		.thumb_func
 4996              		.fpu fpv4-sp-d16
 4998              	SOLID_COLOR:
 4999              	.LVL384:
 5000              	.LFB86:
 5001              		.file 35 "quantum/rgb_matrix_animations/solid_color_anim.h"
   1:quantum/rgb_matrix_animations/solid_color_anim.h **** RGB_MATRIX_EFFECT(SOLID_COLOR)
   2:quantum/rgb_matrix_animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   3:quantum/rgb_matrix_animations/solid_color_anim.h **** 
   4:quantum/rgb_matrix_animations/solid_color_anim.h **** bool SOLID_COLOR(effect_params_t* params) {
 5002              		.loc 35 4 43 is_stmt 1 view -0
 5003              		.cfi_startproc
 5004              		@ args = 0, pretend = 0, frame = 8
 5005              		@ frame_needed = 0, uses_anonymous_args = 0
   5:quantum/rgb_matrix_animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5006              		.loc 35 5 5 view .LVU1176
   4:quantum/rgb_matrix_animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5007              		.loc 35 4 43 is_stmt 0 view .LVU1177
 5008 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 5009              		.cfi_def_cfa_offset 32
 5010              		.cfi_offset 4, -24
 5011              		.cfi_offset 5, -20
 5012              		.cfi_offset 6, -16
 5013              		.cfi_offset 7, -12
 5014              		.cfi_offset 8, -8
 5015              		.cfi_offset 14, -4
   6:quantum/rgb_matrix_animations/solid_color_anim.h **** 
   7:quantum/rgb_matrix_animations/solid_color_anim.h ****     RGB rgb = hsv_to_rgb(rgb_matrix_config.hsv);
 5016              		.loc 35 7 15 view .LVU1178
 5017 0004 1D4A     		ldr	r2, .L252
   5:quantum/rgb_matrix_animations/solid_color_anim.h **** 
 5018              		.loc 35 5 5 view .LVU1179
 5019 0006 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 5020              		.loc 35 7 15 view .LVU1180
 5021 0008 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 5022              	.LBB339:
   8:quantum/rgb_matrix_animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
   9:quantum/rgb_matrix_animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5023              		.loc 35 9 9 view .LVU1181
 5024 000a DFF87480 		ldr	r8, .L252+4
 5025              	.LBE339:
   4:quantum/rgb_matrix_animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5026              		.loc 35 4 43 view .LVU1182
 5027 000e 0646     		mov	r6, r0
   5:quantum/rgb_matrix_animations/solid_color_anim.h **** 
 5028              		.loc 35 5 5 view .LVU1183
 5029 0010 C4EB0414 		rsb	r4, r4, r4, lsl #4
   7:quantum/rgb_matrix_animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5030              		.loc 35 7 15 view .LVU1184
 5031 0014 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 5032              	.LVL385:
   5:quantum/rgb_matrix_animations/solid_color_anim.h **** 
 5033              		.loc 35 5 5 view .LVU1185
 5034 0016 E4B2     		uxtb	r4, r4
 5035              	.LVL386:
   5:quantum/rgb_matrix_animations/solid_color_anim.h **** 
 5036              		.loc 35 5 5 is_stmt 1 view .LVU1186
   7:quantum/rgb_matrix_animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5037              		.loc 35 7 15 is_stmt 0 view .LVU1187
 5038 0018 43EA0023 		orr	r3, r3, r0, lsl #8
   5:quantum/rgb_matrix_animations/solid_color_anim.h **** 
 5039              		.loc 35 5 5 view .LVU1188
 5040 001c 04F10F05 		add	r5, r4, #15
   7:quantum/rgb_matrix_animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5041              		.loc 35 7 15 view .LVU1189
 5042 0020 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
   5:quantum/rgb_matrix_animations/solid_color_anim.h **** 
 5043              		.loc 35 5 5 view .LVU1190
 5044 0022 EDB2     		uxtb	r5, r5
 5045              	.LVL387:
   5:quantum/rgb_matrix_animations/solid_color_anim.h **** 
 5046              		.loc 35 5 5 is_stmt 1 view .LVU1191
 5047 0024 772D     		cmp	r5, #119
   7:quantum/rgb_matrix_animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5048              		.loc 35 7 15 is_stmt 0 view .LVU1192
 5049 0026 43EA0040 		orr	r0, r3, r0, lsl #16
 5050 002a 2F46     		mov	r7, r5
 5051 002c 28BF     		it	cs
 5052 002e 7727     		movcs	r7, #119
 5053              	.LVL388:
   5:quantum/rgb_matrix_animations/solid_color_anim.h **** 
 5054              		.loc 35 5 44 is_stmt 1 view .LVU1193
   7:quantum/rgb_matrix_animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5055              		.loc 35 7 5 view .LVU1194
   7:quantum/rgb_matrix_animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5056              		.loc 35 7 15 is_stmt 0 view .LVU1195
 5057 0030 FFF7FEFF 		bl	hsv_to_rgb
 5058              	.LVL389:
 5059 0034 C0F30723 		ubfx	r3, r0, #8, #8
 5060 0038 8DF80400 		strb	r0, [sp, #4]
 5061 003c C0F30740 		ubfx	r0, r0, #16, #8
 5062 0040 8DF80530 		strb	r3, [sp, #5]
 5063 0044 8DF80600 		strb	r0, [sp, #6]
   8:quantum/rgb_matrix_animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5064              		.loc 35 8 5 is_stmt 1 view .LVU1196
 5065              	.LBB340:
   8:quantum/rgb_matrix_animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5066              		.loc 35 8 10 view .LVU1197
 5067              	.LVL390:
 5068              	.L246:
   8:quantum/rgb_matrix_animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5069              		.loc 35 8 5 is_stmt 0 discriminator 1 view .LVU1198
 5070 0048 E3B2     		uxtb	r3, r4
 5071 004a 9F42     		cmp	r7, r3
 5072 004c 06D8     		bhi	.L248
 5073              	.LBE340:
  10:quantum/rgb_matrix_animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  11:quantum/rgb_matrix_animations/solid_color_anim.h ****     }
  12:quantum/rgb_matrix_animations/solid_color_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 5074              		.loc 35 12 5 is_stmt 1 view .LVU1199
  13:quantum/rgb_matrix_animations/solid_color_anim.h **** }
 5075              		.loc 35 13 1 is_stmt 0 view .LVU1200
 5076 004e 762D     		cmp	r5, #118
 5077 0050 8CBF     		ite	hi
 5078 0052 0020     		movhi	r0, #0
 5079 0054 0120     		movls	r0, #1
 5080 0056 02B0     		add	sp, sp, #8
 5081              		.cfi_remember_state
 5082              		.cfi_def_cfa_offset 24
 5083              		@ sp needed
 5084 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5085              	.LVL391:
 5086              	.L248:
 5087              		.cfi_restore_state
 5088              	.LBB341:
   9:quantum/rgb_matrix_animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5089              		.loc 35 9 9 is_stmt 1 view .LVU1201
 5090 005c 14F80820 		ldrb	r2, [r4, r8]	@ zero_extendqisi2
 5091 0060 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 5092 0062 1A42     		tst	r2, r3
 5093 0064 08D0     		beq	.L247
  10:quantum/rgb_matrix_animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5094              		.loc 35 10 9 view .LVU1202
 5095 0066 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 5096 006a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 5097 006e 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 5098 0072 2046     		mov	r0, r4
 5099 0074 FFF7FEFF 		bl	rgb_matrix_set_color
 5100              	.LVL392:
 5101              	.L247:
  10:quantum/rgb_matrix_animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5102              		.loc 35 10 9 is_stmt 0 view .LVU1203
 5103 0078 0134     		adds	r4, r4, #1
 5104              	.LVL393:
  10:quantum/rgb_matrix_animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5105              		.loc 35 10 9 view .LVU1204
 5106 007a E5E7     		b	.L246
 5107              	.L253:
 5108              		.align	2
 5109              	.L252:
 5110 007c 00000000 		.word	rgb_matrix_config
 5111 0080 46010000 		.word	g_led_config+326
 5112              	.LBE341:
 5113              		.cfi_endproc
 5114              	.LFE86:
 5116              		.section	.text.ALPHAS_MODS,"ax",%progbits
 5117              		.align	1
 5118              		.global	ALPHAS_MODS
 5119              		.syntax unified
 5120              		.thumb
 5121              		.thumb_func
 5122              		.fpu fpv4-sp-d16
 5124              	ALPHAS_MODS:
 5125              	.LVL394:
 5126              	.LFB87:
 5127              		.file 36 "quantum/rgb_matrix_animations/alpha_mods_anim.h"
   1:quantum/rgb_matrix_animations/alpha_mods_anim.h **** #ifndef DISABLE_RGB_MATRIX_ALPHAS_MODS
   2:quantum/rgb_matrix_animations/alpha_mods_anim.h **** RGB_MATRIX_EFFECT(ALPHAS_MODS)
   3:quantum/rgb_matrix_animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
   5:quantum/rgb_matrix_animations/alpha_mods_anim.h **** // alphas = color1, mods = color2
   6:quantum/rgb_matrix_animations/alpha_mods_anim.h **** bool ALPHAS_MODS(effect_params_t* params) {
 5128              		.loc 36 6 43 is_stmt 1 view -0
 5129              		.cfi_startproc
 5130              		@ args = 0, pretend = 0, frame = 16
 5131              		@ frame_needed = 0, uses_anonymous_args = 0
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5132              		.loc 36 7 5 view .LVU1206
   6:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5133              		.loc 36 6 43 is_stmt 0 view .LVU1207
 5134 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5135              		.cfi_def_cfa_offset 28
 5136              		.cfi_offset 4, -28
 5137              		.cfi_offset 5, -24
 5138              		.cfi_offset 6, -20
 5139              		.cfi_offset 7, -16
 5140              		.cfi_offset 8, -12
 5141              		.cfi_offset 9, -8
 5142              		.cfi_offset 14, -4
   8:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
   9:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     HSV hsv  = rgb_matrix_config.hsv;
 5143              		.loc 36 9 9 view .LVU1208
 5144 0004 DFF8BC90 		ldr	r9, .L263
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
 5145              		.loc 36 7 5 view .LVU1209
 5146 0008 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 5147              		.loc 36 9 9 view .LVU1210
 5148 000a 99F80180 		ldrb	r8, [r9, #1]	@ zero_extendqisi2
 5149 000e 4B46     		mov	r3, r9
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
 5150              		.loc 36 7 5 view .LVU1211
 5151 0010 C4EB0414 		rsb	r4, r4, r4, lsl #4
 5152              		.loc 36 9 9 view .LVU1212
 5153 0014 33F8012F 		ldrh	r2, [r3, #1]!	@ unaligned
   6:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5154              		.loc 36 6 43 view .LVU1213
 5155 0018 85B0     		sub	sp, sp, #20
 5156              		.cfi_def_cfa_offset 48
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
 5157              		.loc 36 7 5 view .LVU1214
 5158 001a E4B2     		uxtb	r4, r4
 5159              	.LVL395:
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
 5160              		.loc 36 7 5 is_stmt 1 view .LVU1215
 5161              		.loc 36 9 9 is_stmt 0 view .LVU1216
 5162 001c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5163 001e ADF80420 		strh	r2, [sp, #4]	@ unaligned
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
 5164              		.loc 36 7 5 view .LVU1217
 5165 0022 04F10F05 		add	r5, r4, #15
 5166              		.loc 36 9 9 view .LVU1218
 5167 0026 8DF80630 		strb	r3, [sp, #6]
  10:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB rgb1 = hsv_to_rgb(hsv);
 5168              		.loc 36 10 16 view .LVU1219
 5169 002a 8DF80480 		strb	r8, [sp, #4]
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
 5170              		.loc 36 7 5 view .LVU1220
 5171 002e EDB2     		uxtb	r5, r5
 5172              	.LVL396:
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
 5173              		.loc 36 7 5 is_stmt 1 view .LVU1221
 5174 0030 772D     		cmp	r5, #119
   6:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5175              		.loc 36 6 43 is_stmt 0 view .LVU1222
 5176 0032 0646     		mov	r6, r0
 5177              		.loc 36 10 16 view .LVU1223
 5178 0034 0198     		ldr	r0, [sp, #4]
 5179              	.LVL397:
 5180              		.loc 36 10 16 view .LVU1224
 5181 0036 2F46     		mov	r7, r5
 5182 0038 28BF     		it	cs
 5183 003a 7727     		movcs	r7, #119
 5184              	.LVL398:
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
 5185              		.loc 36 7 44 is_stmt 1 view .LVU1225
   9:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB rgb1 = hsv_to_rgb(hsv);
 5186              		.loc 36 9 5 view .LVU1226
 5187              		.loc 36 10 5 view .LVU1227
 5188              		.loc 36 10 16 is_stmt 0 view .LVU1228
 5189 003c FFF7FEFF 		bl	hsv_to_rgb
 5190              	.LVL399:
 5191 0040 C0F30723 		ubfx	r3, r0, #8, #8
 5192 0044 8DF80930 		strb	r3, [sp, #9]
  11:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 5193              		.loc 36 11 11 view .LVU1229
 5194 0048 99F80430 		ldrb	r3, [r9, #4]	@ zero_extendqisi2
  10:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 5195              		.loc 36 10 16 view .LVU1230
 5196 004c 8DF80800 		strb	r0, [sp, #8]
 5197              		.loc 36 11 11 view .LVU1231
 5198 0050 9844     		add	r8, r8, r3
 5199              	.LVL400:
  12:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB rgb2 = hsv_to_rgb(hsv);
 5200              		.loc 36 12 16 view .LVU1232
 5201 0052 8DF80480 		strb	r8, [sp, #4]
 5202              	.LVL401:
  10:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 5203              		.loc 36 10 16 view .LVU1233
 5204 0056 C0F30740 		ubfx	r0, r0, #16, #8
 5205 005a 8DF80A00 		strb	r0, [sp, #10]
  11:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 5206              		.loc 36 11 5 is_stmt 1 view .LVU1234
 5207              		.loc 36 12 5 view .LVU1235
 5208              		.loc 36 12 16 is_stmt 0 view .LVU1236
 5209 005e 0198     		ldr	r0, [sp, #4]
 5210              	.LBB342:
  13:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
  14:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  15:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5211              		.loc 36 15 9 view .LVU1237
 5212 0060 DFF86480 		ldr	r8, .L263+4
 5213              	.LBE342:
  12:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB rgb2 = hsv_to_rgb(hsv);
 5214              		.loc 36 12 16 view .LVU1238
 5215 0064 FFF7FEFF 		bl	hsv_to_rgb
 5216              	.LVL402:
 5217 0068 C0F30723 		ubfx	r3, r0, #8, #8
 5218 006c 8DF80C00 		strb	r0, [sp, #12]
 5219 0070 C0F30740 		ubfx	r0, r0, #16, #8
 5220 0074 8DF80D30 		strb	r3, [sp, #13]
 5221 0078 8DF80E00 		strb	r0, [sp, #14]
  14:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5222              		.loc 36 14 5 is_stmt 1 view .LVU1239
 5223              	.LBB343:
  14:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5224              		.loc 36 14 10 view .LVU1240
 5225              	.LVL403:
 5226              	.L255:
  14:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5227              		.loc 36 14 5 is_stmt 0 discriminator 1 view .LVU1241
 5228 007c E3B2     		uxtb	r3, r4
 5229 007e 9F42     		cmp	r7, r3
 5230 0080 06D8     		bhi	.L258
 5231              	.LBE343:
  16:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
  17:quantum/rgb_matrix_animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb2.r, rgb2.g, rgb2.b);
  18:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         } else {
  19:quantum/rgb_matrix_animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb1.r, rgb1.g, rgb1.b);
  20:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         }
  21:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     }
  22:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 5232              		.loc 36 22 5 is_stmt 1 view .LVU1242
  23:quantum/rgb_matrix_animations/alpha_mods_anim.h **** }
 5233              		.loc 36 23 1 is_stmt 0 view .LVU1243
 5234 0082 762D     		cmp	r5, #118
 5235 0084 8CBF     		ite	hi
 5236 0086 0020     		movhi	r0, #0
 5237 0088 0120     		movls	r0, #1
 5238 008a 05B0     		add	sp, sp, #20
 5239              		.cfi_remember_state
 5240              		.cfi_def_cfa_offset 28
 5241              		@ sp needed
 5242 008c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5243              	.LVL404:
 5244              	.L258:
 5245              		.cfi_restore_state
 5246              	.LBB344:
  15:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
 5247              		.loc 36 15 9 is_stmt 1 view .LVU1244
 5248 0090 14F80830 		ldrb	r3, [r4, r8]	@ zero_extendqisi2
 5249 0094 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 5250 0096 1342     		tst	r3, r2
 5251 0098 11D0     		beq	.L256
  16:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
 5252              		.loc 36 16 9 view .LVU1245
  16:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
 5253              		.loc 36 16 12 is_stmt 0 view .LVU1246
 5254 009a DB07     		lsls	r3, r3, #31
  17:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         } else {
 5255              		.loc 36 17 13 is_stmt 1 view .LVU1247
 5256 009c 43BF     		ittte	mi
 5257 009e 9DF80E30 		ldrbmi	r3, [sp, #14]	@ zero_extendqisi2
 5258 00a2 9DF80C20 		ldrbmi	r2, [sp, #12]	@ zero_extendqisi2
 5259 00a6 9DF80D10 		ldrbmi	r1, [sp, #13]	@ zero_extendqisi2
  19:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         }
 5260              		.loc 36 19 13 view .LVU1248
 5261 00aa 9DF80A30 		ldrbpl	r3, [sp, #10]	@ zero_extendqisi2
 5262 00ae 5CBF     		itt	pl
 5263 00b0 9DF80820 		ldrbpl	r2, [sp, #8]	@ zero_extendqisi2
 5264 00b4 9DF80910 		ldrbpl	r1, [sp, #9]	@ zero_extendqisi2
 5265 00b8 2046     		mov	r0, r4
 5266 00ba FFF7FEFF 		bl	rgb_matrix_set_color
 5267              	.LVL405:
 5268              	.L256:
  19:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         }
 5269              		.loc 36 19 13 is_stmt 0 view .LVU1249
 5270 00be 0134     		adds	r4, r4, #1
 5271              	.LVL406:
  19:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         }
 5272              		.loc 36 19 13 view .LVU1250
 5273 00c0 DCE7     		b	.L255
 5274              	.L264:
 5275 00c2 00BF     		.align	2
 5276              	.L263:
 5277 00c4 00000000 		.word	rgb_matrix_config
 5278 00c8 46010000 		.word	g_led_config+326
 5279              	.LBE344:
 5280              		.cfi_endproc
 5281              	.LFE87:
 5283              		.section	.text.GRADIENT_UP_DOWN,"ax",%progbits
 5284              		.align	1
 5285              		.global	GRADIENT_UP_DOWN
 5286              		.syntax unified
 5287              		.thumb
 5288              		.thumb_func
 5289              		.fpu fpv4-sp-d16
 5291              	GRADIENT_UP_DOWN:
 5292              	.LVL407:
 5293              	.LFB88:
 5294              		.file 37 "quantum/rgb_matrix_animations/gradient_up_down_anim.h"
   1:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** #ifndef DISABLE_RGB_MATRIX_GRADIENT_UP_DOWN
   2:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** RGB_MATRIX_EFFECT(GRADIENT_UP_DOWN)
   3:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
   5:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** bool GRADIENT_UP_DOWN(effect_params_t* params) {
 5295              		.loc 37 5 48 is_stmt 1 view -0
 5296              		.cfi_startproc
 5297              		@ args = 0, pretend = 0, frame = 8
 5298              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5299              		.loc 37 6 5 view .LVU1252
   5:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5300              		.loc 37 5 48 is_stmt 0 view .LVU1253
 5301 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5302              		.cfi_def_cfa_offset 48
 5303              		.cfi_offset 4, -36
 5304              		.cfi_offset 5, -32
 5305              		.cfi_offset 6, -28
 5306              		.cfi_offset 7, -24
 5307              		.cfi_offset 8, -20
 5308              		.cfi_offset 9, -16
 5309              		.cfi_offset 10, -12
 5310              		.cfi_offset 11, -8
 5311              		.cfi_offset 14, -4
   7:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
   8:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     HSV     hsv   = rgb_matrix_config.hsv;
 5312              		.loc 37 8 13 view .LVU1254
 5313 0004 204D     		ldr	r5, .L270
   6:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
 5314              		.loc 37 6 5 view .LVU1255
 5315 0006 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 5316              	.LBB345:
 5317              	.LBB346:
  26:./lib/lib8tion/scale8.h **** #endif
 5318              		.loc 4 26 25 view .LVU1256
 5319 0008 2F79     		ldrb	r7, [r5, #4]	@ zero_extendqisi2
 5320              	.LBE346:
 5321              	.LBE345:
 5322              	.LBB348:
 5323              	.LBB349:
   9:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
  10:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  11:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5324              		.loc 37 11 9 view .LVU1257
 5325 000a DFF88090 		ldr	r9, .L270+4
 5326              	.LBE349:
 5327              	.LBE348:
   8:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 5328              		.loc 37 8 13 view .LVU1258
 5329 000e 2B46     		mov	r3, r5
   6:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
 5330              		.loc 37 6 5 view .LVU1259
 5331 0010 C4EB0414 		rsb	r4, r4, r4, lsl #4
 5332 0014 E4B2     		uxtb	r4, r4
 5333              	.LVL408:
   6:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
 5334              		.loc 37 6 5 is_stmt 1 view .LVU1260
   8:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 5335              		.loc 37 8 13 is_stmt 0 view .LVU1261
 5336 0016 33F8012F 		ldrh	r2, [r3, #1]!	@ unaligned
 5337 001a ADF80020 		strh	r2, [sp]	@ unaligned
   6:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
 5338              		.loc 37 6 5 view .LVU1262
 5339 001e 04F10F06 		add	r6, r4, #15
 5340 0022 F6B2     		uxtb	r6, r6
 5341              	.LVL409:
   6:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
 5342              		.loc 37 6 5 is_stmt 1 view .LVU1263
 5343 0024 772E     		cmp	r6, #119
   8:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 5344              		.loc 37 8 13 is_stmt 0 view .LVU1264
 5345 0026 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5346 0028 8DF80230 		strb	r3, [sp, #2]
 5347 002c B246     		mov	r10, r6
   5:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5348              		.loc 37 5 48 view .LVU1265
 5349 002e 8046     		mov	r8, r0
 5350 0030 28BF     		it	cs
 5351 0032 4FF0770A 		movcs	r10, #119
 5352              	.LVL410:
   6:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
 5353              		.loc 37 6 44 is_stmt 1 view .LVU1266
   8:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 5354              		.loc 37 8 5 view .LVU1267
   9:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5355              		.loc 37 9 5 view .LVU1268
 5356              	.LBB352:
 5357              	.LBI345:
  20:./lib/lib8tion/scale8.h **** {
 5358              		.loc 4 20 34 view .LVU1269
 5359              	.LBB347:
  26:./lib/lib8tion/scale8.h **** #endif
 5360              		.loc 4 26 5 view .LVU1270
  26:./lib/lib8tion/scale8.h **** #endif
 5361              		.loc 4 26 47 is_stmt 0 view .LVU1271
 5362 0036 BF08     		lsrs	r7, r7, #2
 5363              	.LVL411:
  26:./lib/lib8tion/scale8.h **** #endif
 5364              		.loc 4 26 47 view .LVU1272
 5365              	.LBE347:
 5366              	.LBE352:
  10:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5367              		.loc 37 10 5 is_stmt 1 view .LVU1273
 5368              	.LBB353:
  10:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5369              		.loc 37 10 10 view .LVU1274
 5370              	.LBB350:
  12:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         // The y range will be 0..64, map this to 0..4
  13:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         // Relies on hue being 8-bit and wrapping
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         hsv.h   = rgb_matrix_config.hsv.h + scale * (g_led_config.point[i].y >> 4);
 5371              		.loc 37 14 75 is_stmt 0 view .LVU1275
 5372 0038 A9F1ED0B 		sub	fp, r9, #237
 5373              	.LVL412:
 5374              	.L266:
 5375              		.loc 37 14 75 view .LVU1276
 5376              	.LBE350:
  10:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5377              		.loc 37 10 5 discriminator 1 view .LVU1277
 5378 003c E3B2     		uxtb	r3, r4
 5379 003e 9A45     		cmp	r10, r3
 5380 0040 06D8     		bhi	.L269
 5381              	.LBE353:
  15:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
  18:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 5382              		.loc 37 18 5 is_stmt 1 view .LVU1278
  19:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** }
 5383              		.loc 37 19 1 is_stmt 0 view .LVU1279
 5384 0042 762E     		cmp	r6, #118
 5385 0044 8CBF     		ite	hi
 5386 0046 0020     		movhi	r0, #0
 5387 0048 0120     		movls	r0, #1
 5388 004a 03B0     		add	sp, sp, #12
 5389              		.cfi_remember_state
 5390              		.cfi_def_cfa_offset 36
 5391              		@ sp needed
 5392 004c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5393              	.LVL413:
 5394              	.L269:
 5395              		.cfi_restore_state
 5396              	.LBB354:
 5397              	.LBB351:
  11:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         // The y range will be 0..64, map this to 0..4
 5398              		.loc 37 11 9 is_stmt 1 view .LVU1280
 5399 0050 14F80920 		ldrb	r2, [r4, r9]	@ zero_extendqisi2
 5400 0054 98F80130 		ldrb	r3, [r8, #1]	@ zero_extendqisi2
 5401 0058 1A42     		tst	r2, r3
 5402 005a 12D0     		beq	.L268
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5403              		.loc 37 14 9 view .LVU1281
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5404              		.loc 37 14 51 is_stmt 0 view .LVU1282
 5405 005c 1BF81430 		ldrb	r3, [fp, r4, lsl #1]	@ zero_extendqisi2
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5406              		.loc 37 14 43 view .LVU1283
 5407 0060 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5408              		.loc 37 14 51 view .LVU1284
 5409 0062 1B09     		lsrs	r3, r3, #4
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5410              		.loc 37 14 43 view .LVU1285
 5411 0064 03FB0723 		mla	r3, r3, r7, r2
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5412              		.loc 37 14 17 view .LVU1286
 5413 0068 8DF80030 		strb	r3, [sp]
  15:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5414              		.loc 37 15 9 is_stmt 1 view .LVU1287
  15:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5415              		.loc 37 15 19 is_stmt 0 view .LVU1288
 5416 006c 0098     		ldr	r0, [sp]
 5417 006e FFF7FEFF 		bl	hsv_to_rgb
 5418              	.LVL414:
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
 5419              		.loc 37 16 9 is_stmt 1 view .LVU1289
 5420 0072 C0F30743 		ubfx	r3, r0, #16, #8
 5421 0076 C2B2     		uxtb	r2, r0
 5422 0078 C0F30721 		ubfx	r1, r0, #8, #8
 5423 007c 2046     		mov	r0, r4
 5424 007e FFF7FEFF 		bl	rgb_matrix_set_color
 5425              	.LVL415:
 5426              	.L268:
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
 5427              		.loc 37 16 9 is_stmt 0 view .LVU1290
 5428 0082 0134     		adds	r4, r4, #1
 5429              	.LVL416:
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
 5430              		.loc 37 16 9 view .LVU1291
 5431 0084 DAE7     		b	.L266
 5432              	.L271:
 5433 0086 00BF     		.align	2
 5434              	.L270:
 5435 0088 00000000 		.word	rgb_matrix_config
 5436 008c 46010000 		.word	g_led_config+326
 5437              	.LBE351:
 5438              	.LBE354:
 5439              		.cfi_endproc
 5440              	.LFE88:
 5442              		.section	.text.GRADIENT_LEFT_RIGHT,"ax",%progbits
 5443              		.align	1
 5444              		.global	GRADIENT_LEFT_RIGHT
 5445              		.syntax unified
 5446              		.thumb
 5447              		.thumb_func
 5448              		.fpu fpv4-sp-d16
 5450              	GRADIENT_LEFT_RIGHT:
 5451              	.LVL417:
 5452              	.LFB89:
 5453              		.file 38 "quantum/rgb_matrix_animations/gradient_left_right_anim.h"
   1:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** #ifndef DISABLE_RGB_MATRIX_GRADIENT_LEFT_RIGHT
   2:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** RGB_MATRIX_EFFECT(GRADIENT_LEFT_RIGHT)
   3:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
   5:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** bool GRADIENT_LEFT_RIGHT(effect_params_t* params) {
 5454              		.loc 38 5 51 is_stmt 1 view -0
 5455              		.cfi_startproc
 5456              		@ args = 0, pretend = 0, frame = 8
 5457              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5458              		.loc 38 6 5 view .LVU1293
   5:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5459              		.loc 38 5 51 is_stmt 0 view .LVU1294
 5460 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5461              		.cfi_def_cfa_offset 48
 5462              		.cfi_offset 4, -36
 5463              		.cfi_offset 5, -32
 5464              		.cfi_offset 6, -28
 5465              		.cfi_offset 7, -24
 5466              		.cfi_offset 8, -20
 5467              		.cfi_offset 9, -16
 5468              		.cfi_offset 10, -12
 5469              		.cfi_offset 11, -8
 5470              		.cfi_offset 14, -4
   7:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
   8:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     HSV     hsv   = rgb_matrix_config.hsv;
 5471              		.loc 38 8 13 view .LVU1295
 5472 0004 204D     		ldr	r5, .L277
   6:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
 5473              		.loc 38 6 5 view .LVU1296
 5474 0006 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 5475              	.LBB355:
 5476              	.LBB356:
  26:./lib/lib8tion/scale8.h **** #endif
 5477              		.loc 4 26 25 view .LVU1297
 5478 0008 2F79     		ldrb	r7, [r5, #4]	@ zero_extendqisi2
 5479              	.LBE356:
 5480              	.LBE355:
 5481              	.LBB358:
 5482              	.LBB359:
   9:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
  10:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  11:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5483              		.loc 38 11 9 view .LVU1298
 5484 000a DFF88090 		ldr	r9, .L277+4
 5485              	.LBE359:
 5486              	.LBE358:
   8:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 5487              		.loc 38 8 13 view .LVU1299
 5488 000e 2B46     		mov	r3, r5
   6:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
 5489              		.loc 38 6 5 view .LVU1300
 5490 0010 C4EB0414 		rsb	r4, r4, r4, lsl #4
 5491 0014 E4B2     		uxtb	r4, r4
 5492              	.LVL418:
   6:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
 5493              		.loc 38 6 5 is_stmt 1 view .LVU1301
   8:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 5494              		.loc 38 8 13 is_stmt 0 view .LVU1302
 5495 0016 33F8012F 		ldrh	r2, [r3, #1]!	@ unaligned
 5496 001a ADF80020 		strh	r2, [sp]	@ unaligned
   6:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
 5497              		.loc 38 6 5 view .LVU1303
 5498 001e 04F10F06 		add	r6, r4, #15
 5499 0022 F6B2     		uxtb	r6, r6
 5500              	.LVL419:
   6:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
 5501              		.loc 38 6 5 is_stmt 1 view .LVU1304
 5502 0024 772E     		cmp	r6, #119
   8:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 5503              		.loc 38 8 13 is_stmt 0 view .LVU1305
 5504 0026 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5505 0028 8DF80230 		strb	r3, [sp, #2]
 5506 002c B246     		mov	r10, r6
   5:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5507              		.loc 38 5 51 view .LVU1306
 5508 002e 8046     		mov	r8, r0
 5509 0030 28BF     		it	cs
 5510 0032 4FF0770A 		movcs	r10, #119
 5511              	.LVL420:
   6:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
 5512              		.loc 38 6 44 is_stmt 1 view .LVU1307
   8:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 5513              		.loc 38 8 5 view .LVU1308
   9:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5514              		.loc 38 9 5 view .LVU1309
 5515              	.LBB362:
 5516              	.LBI355:
  20:./lib/lib8tion/scale8.h **** {
 5517              		.loc 4 20 34 view .LVU1310
 5518              	.LBB357:
  26:./lib/lib8tion/scale8.h **** #endif
 5519              		.loc 4 26 5 view .LVU1311
  26:./lib/lib8tion/scale8.h **** #endif
 5520              		.loc 4 26 47 is_stmt 0 view .LVU1312
 5521 0036 BF08     		lsrs	r7, r7, #2
 5522              	.LVL421:
  26:./lib/lib8tion/scale8.h **** #endif
 5523              		.loc 4 26 47 view .LVU1313
 5524              	.LBE357:
 5525              	.LBE362:
  10:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5526              		.loc 38 10 5 is_stmt 1 view .LVU1314
 5527              	.LBB363:
  10:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5528              		.loc 38 10 10 view .LVU1315
 5529              	.LBB360:
  12:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         // The x range will be 0..224, map this to 0..7
  13:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         // Relies on hue being 8-bit and wrapping
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         hsv.h   = rgb_matrix_config.hsv.h + (scale * g_led_config.point[i].x >> 5);
 5530              		.loc 38 14 75 is_stmt 0 view .LVU1316
 5531 0038 A9F1EE0B 		sub	fp, r9, #238
 5532              	.LVL422:
 5533              	.L273:
 5534              		.loc 38 14 75 view .LVU1317
 5535              	.LBE360:
  10:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5536              		.loc 38 10 5 discriminator 1 view .LVU1318
 5537 003c E3B2     		uxtb	r3, r4
 5538 003e 9A45     		cmp	r10, r3
 5539 0040 06D8     		bhi	.L276
 5540              	.LBE363:
  15:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
  18:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 5541              		.loc 38 18 5 is_stmt 1 view .LVU1319
  19:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** }
 5542              		.loc 38 19 1 is_stmt 0 view .LVU1320
 5543 0042 762E     		cmp	r6, #118
 5544 0044 8CBF     		ite	hi
 5545 0046 0020     		movhi	r0, #0
 5546 0048 0120     		movls	r0, #1
 5547 004a 03B0     		add	sp, sp, #12
 5548              		.cfi_remember_state
 5549              		.cfi_def_cfa_offset 36
 5550              		@ sp needed
 5551 004c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5552              	.LVL423:
 5553              	.L276:
 5554              		.cfi_restore_state
 5555              	.LBB364:
 5556              	.LBB361:
  11:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         // The x range will be 0..224, map this to 0..7
 5557              		.loc 38 11 9 is_stmt 1 view .LVU1321
 5558 0050 14F80920 		ldrb	r2, [r4, r9]	@ zero_extendqisi2
 5559 0054 98F80130 		ldrb	r3, [r8, #1]	@ zero_extendqisi2
 5560 0058 1A42     		tst	r2, r3
 5561 005a 13D0     		beq	.L275
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5562              		.loc 38 14 9 view .LVU1322
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5563              		.loc 38 14 75 is_stmt 0 view .LVU1323
 5564 005c 1BF81430 		ldrb	r3, [fp, r4, lsl #1]	@ zero_extendqisi2
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5565              		.loc 38 14 52 view .LVU1324
 5566 0060 07FB03F2 		mul	r2, r7, r3
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5567              		.loc 38 14 43 view .LVU1325
 5568 0064 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 5569 0066 03EB5213 		add	r3, r3, r2, lsr #5
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 5570              		.loc 38 14 17 view .LVU1326
 5571 006a 8DF80030 		strb	r3, [sp]
  15:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5572              		.loc 38 15 9 is_stmt 1 view .LVU1327
  15:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5573              		.loc 38 15 19 is_stmt 0 view .LVU1328
 5574 006e 0098     		ldr	r0, [sp]
 5575 0070 FFF7FEFF 		bl	hsv_to_rgb
 5576              	.LVL424:
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
 5577              		.loc 38 16 9 is_stmt 1 view .LVU1329
 5578 0074 C0F30743 		ubfx	r3, r0, #16, #8
 5579 0078 C2B2     		uxtb	r2, r0
 5580 007a C0F30721 		ubfx	r1, r0, #8, #8
 5581 007e 2046     		mov	r0, r4
 5582 0080 FFF7FEFF 		bl	rgb_matrix_set_color
 5583              	.LVL425:
 5584              	.L275:
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
 5585              		.loc 38 16 9 is_stmt 0 view .LVU1330
 5586 0084 0134     		adds	r4, r4, #1
 5587              	.LVL426:
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
 5588              		.loc 38 16 9 view .LVU1331
 5589 0086 D9E7     		b	.L273
 5590              	.L278:
 5591              		.align	2
 5592              	.L277:
 5593 0088 00000000 		.word	rgb_matrix_config
 5594 008c 46010000 		.word	g_led_config+326
 5595              	.LBE361:
 5596              	.LBE364:
 5597              		.cfi_endproc
 5598              	.LFE89:
 5600              		.section	.text.BREATHING,"ax",%progbits
 5601              		.align	1
 5602              		.global	BREATHING
 5603              		.syntax unified
 5604              		.thumb
 5605              		.thumb_func
 5606              		.fpu fpv4-sp-d16
 5608              	BREATHING:
 5609              	.LVL427:
 5610              	.LFB90:
 5611              		.file 39 "quantum/rgb_matrix_animations/breathing_anim.h"
   1:quantum/rgb_matrix_animations/breathing_anim.h **** #ifndef DISABLE_RGB_MATRIX_BREATHING
   2:quantum/rgb_matrix_animations/breathing_anim.h **** RGB_MATRIX_EFFECT(BREATHING)
   3:quantum/rgb_matrix_animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/breathing_anim.h **** 
   5:quantum/rgb_matrix_animations/breathing_anim.h **** bool BREATHING(effect_params_t* params) {
 5612              		.loc 39 5 41 is_stmt 1 view -0
 5613              		.cfi_startproc
 5614              		@ args = 0, pretend = 0, frame = 8
 5615              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix_animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5616              		.loc 39 6 5 view .LVU1333
   5:quantum/rgb_matrix_animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5617              		.loc 39 5 41 is_stmt 0 view .LVU1334
 5618 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 5619              		.cfi_def_cfa_offset 32
 5620              		.cfi_offset 4, -24
 5621              		.cfi_offset 5, -20
 5622              		.cfi_offset 6, -16
 5623              		.cfi_offset 7, -12
 5624              		.cfi_offset 8, -8
 5625              		.cfi_offset 14, -4
   7:quantum/rgb_matrix_animations/breathing_anim.h **** 
   8:quantum/rgb_matrix_animations/breathing_anim.h ****     HSV      hsv  = rgb_matrix_config.hsv;
 5626              		.loc 39 8 14 view .LVU1335
 5627 0004 2A4A     		ldr	r2, .L287
   6:quantum/rgb_matrix_animations/breathing_anim.h **** 
 5628              		.loc 39 6 5 view .LVU1336
 5629 0006 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 5630              		.loc 39 8 14 view .LVU1337
 5631 0008 1346     		mov	r3, r2
   5:quantum/rgb_matrix_animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5632              		.loc 39 5 41 view .LVU1338
 5633 000a 0646     		mov	r6, r0
 5634              		.loc 39 8 14 view .LVU1339
 5635 000c 33F8011F 		ldrh	r1, [r3, #1]!	@ unaligned
   9:quantum/rgb_matrix_animations/breathing_anim.h ****     uint16_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 5636              		.loc 39 9 21 view .LVU1340
 5637 0010 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 5638              	.LVL428:
   8:quantum/rgb_matrix_animations/breathing_anim.h ****     uint16_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 5639              		.loc 39 8 14 view .LVU1341
 5640 0012 93F80280 		ldrb	r8, [r3, #2]	@ zero_extendqisi2
 5641              	.LBB365:
 5642              	.LBB366:
 253:./lib/lib8tion/scale8.h **** #endif
 5643              		.loc 4 253 17 view .LVU1342
 5644 0016 274B     		ldr	r3, .L287+4
 5645              	.LBE366:
 5646              	.LBE365:
   8:quantum/rgb_matrix_animations/breathing_anim.h ****     uint16_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 5647              		.loc 39 8 14 view .LVU1343
 5648 0018 ADF80010 		strh	r1, [sp]	@ unaligned
   6:quantum/rgb_matrix_animations/breathing_anim.h **** 
 5649              		.loc 39 6 5 view .LVU1344
 5650 001c C4EB0414 		rsb	r4, r4, r4, lsl #4
 5651              	.LBB370:
 5652              	.LBB367:
 253:./lib/lib8tion/scale8.h **** #endif
 5653              		.loc 4 253 17 view .LVU1345
 5654 0020 1B88     		ldrh	r3, [r3]
 5655              	.LBE367:
 5656              	.LBE370:
   6:quantum/rgb_matrix_animations/breathing_anim.h **** 
 5657              		.loc 39 6 5 view .LVU1346
 5658 0022 E4B2     		uxtb	r4, r4
 5659              	.LVL429:
   6:quantum/rgb_matrix_animations/breathing_anim.h **** 
 5660              		.loc 39 6 5 is_stmt 1 view .LVU1347
 5661 0024 04F10F05 		add	r5, r4, #15
 5662              	.LBB371:
 5663              	.LBB368:
 253:./lib/lib8tion/scale8.h **** #endif
 5664              		.loc 4 253 17 is_stmt 0 view .LVU1348
 5665 0028 C008     		lsrs	r0, r0, #3
 5666 002a 5843     		muls	r0, r3, r0
 5667              	.LBE368:
 5668              	.LBE371:
   6:quantum/rgb_matrix_animations/breathing_anim.h **** 
 5669              		.loc 39 6 5 view .LVU1349
 5670 002c EDB2     		uxtb	r5, r5
 5671              	.LVL430:
   6:quantum/rgb_matrix_animations/breathing_anim.h **** 
 5672              		.loc 39 6 5 is_stmt 1 view .LVU1350
 5673 002e 772D     		cmp	r5, #119
  10:quantum/rgb_matrix_animations/breathing_anim.h ****     hsv.v         = scale8(abs8(sin8(time) - 128) * 2, hsv.v);
 5674              		.loc 39 10 33 is_stmt 0 view .LVU1351
 5675 0030 C0F30720 		ubfx	r0, r0, #8, #8
 5676 0034 2F46     		mov	r7, r5
 5677 0036 28BF     		it	cs
 5678 0038 7727     		movcs	r7, #119
 5679              	.LVL431:
   6:quantum/rgb_matrix_animations/breathing_anim.h **** 
 5680              		.loc 39 6 44 is_stmt 1 view .LVU1352
   8:quantum/rgb_matrix_animations/breathing_anim.h ****     uint16_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 5681              		.loc 39 8 5 view .LVU1353
   9:quantum/rgb_matrix_animations/breathing_anim.h ****     hsv.v         = scale8(abs8(sin8(time) - 128) * 2, hsv.v);
 5682              		.loc 39 9 5 view .LVU1354
 5683              	.LBB372:
 5684              	.LBI365:
 246:./lib/lib8tion/scale8.h **** {
 5685              		.loc 4 246 35 view .LVU1355
 5686              	.LBB369:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 5687              		.loc 4 249 5 view .LVU1356
 253:./lib/lib8tion/scale8.h **** #endif
 5688              		.loc 4 253 5 view .LVU1357
 5689              		.loc 4 255 5 view .LVU1358
 5690              		.loc 4 255 5 is_stmt 0 view .LVU1359
 5691              	.LBE369:
 5692              	.LBE372:
 5693              		.loc 39 10 5 is_stmt 1 view .LVU1360
 5694              		.loc 39 10 33 is_stmt 0 view .LVU1361
 5695 003a FFF7FEFF 		bl	sin8_C
 5696              	.LVL432:
 5697              		.loc 39 10 44 view .LVU1362
 5698 003e A0F18003 		sub	r3, r0, #128
 5699              		.loc 39 10 28 view .LVU1363
 5700 0042 5BB2     		sxtb	r3, r3
 5701              	.LVL433:
 5702              	.LBB373:
 5703              	.LBI373:
 404:./lib/lib8tion/math8.h **** {
 5704              		.loc 1 404 33 is_stmt 1 view .LVU1364
 5705              	.LBB374:
 407:./lib/lib8tion/math8.h ****     return i;
 5706              		.loc 1 407 5 view .LVU1365
 407:./lib/lib8tion/math8.h ****     return i;
 5707              		.loc 1 407 7 is_stmt 0 view .LVU1366
 5708 0044 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 5709              		.loc 1 407 16 is_stmt 1 view .LVU1367
 407:./lib/lib8tion/math8.h ****     return i;
 5710              		.loc 1 407 18 is_stmt 0 view .LVU1368
 5711 0046 BCBF     		itt	lt
 5712 0048 C0F18000 		rsblt	r0, r0, #128
 5713 004c 43B2     		sxtblt	r3, r0
 5714              	.LVL434:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 5715              		.loc 1 408 5 is_stmt 1 view .LVU1369
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 5716              		.loc 1 408 5 is_stmt 0 view .LVU1370
 5717              	.LBE374:
 5718              	.LBE373:
 5719              	.LBB375:
 5720              	.LBI375:
  20:./lib/lib8tion/scale8.h **** {
 5721              		.loc 4 20 34 is_stmt 1 view .LVU1371
 5722              	.LBB376:
  26:./lib/lib8tion/scale8.h **** #endif
 5723              		.loc 4 26 5 view .LVU1372
  26:./lib/lib8tion/scale8.h **** #endif
 5724              		.loc 4 26 5 is_stmt 0 view .LVU1373
 5725              	.LBE376:
 5726              	.LBE375:
  11:quantum/rgb_matrix_animations/breathing_anim.h ****     RGB rgb       = hsv_to_rgb(hsv);
 5727              		.loc 39 11 5 is_stmt 1 view .LVU1374
  10:quantum/rgb_matrix_animations/breathing_anim.h ****     RGB rgb       = hsv_to_rgb(hsv);
 5728              		.loc 39 10 21 is_stmt 0 view .LVU1375
 5729 004e 5B00     		lsls	r3, r3, #1
 5730              	.LVL435:
 5731              	.LBB378:
 5732              	.LBB377:
  26:./lib/lib8tion/scale8.h **** #endif
 5733              		.loc 4 26 25 view .LVU1376
 5734 0050 DBB2     		uxtb	r3, r3
 5735 0052 13FB08F3 		smulbb	r3, r3, r8
  26:./lib/lib8tion/scale8.h **** #endif
 5736              		.loc 4 26 47 view .LVU1377
 5737 0056 1B12     		asrs	r3, r3, #8
 5738 0058 8DF80230 		strb	r3, [sp, #2]
 5739              	.LBE377:
 5740              	.LBE378:
 5741              		.loc 39 11 21 view .LVU1378
 5742 005c 0098     		ldr	r0, [sp]
 5743              	.LBB379:
  12:quantum/rgb_matrix_animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  13:quantum/rgb_matrix_animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5744              		.loc 39 13 9 view .LVU1379
 5745 005e DFF85880 		ldr	r8, .L287+8
 5746              	.LBE379:
  11:quantum/rgb_matrix_animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5747              		.loc 39 11 21 view .LVU1380
 5748 0062 FFF7FEFF 		bl	hsv_to_rgb
 5749              	.LVL436:
  11:quantum/rgb_matrix_animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5750              		.loc 39 11 21 view .LVU1381
 5751 0066 C0F30723 		ubfx	r3, r0, #8, #8
 5752 006a 8DF80400 		strb	r0, [sp, #4]
 5753 006e C0F30740 		ubfx	r0, r0, #16, #8
 5754 0072 8DF80530 		strb	r3, [sp, #5]
 5755 0076 8DF80600 		strb	r0, [sp, #6]
  12:quantum/rgb_matrix_animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5756              		.loc 39 12 5 is_stmt 1 view .LVU1382
 5757              	.LBB380:
  12:quantum/rgb_matrix_animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5758              		.loc 39 12 10 view .LVU1383
 5759              	.LVL437:
 5760              	.L281:
  12:quantum/rgb_matrix_animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5761              		.loc 39 12 5 is_stmt 0 discriminator 1 view .LVU1384
 5762 007a E3B2     		uxtb	r3, r4
 5763 007c 9F42     		cmp	r7, r3
 5764 007e 06D8     		bhi	.L283
 5765              	.LBE380:
  14:quantum/rgb_matrix_animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix_animations/breathing_anim.h ****     }
  16:quantum/rgb_matrix_animations/breathing_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 5766              		.loc 39 16 5 is_stmt 1 view .LVU1385
  17:quantum/rgb_matrix_animations/breathing_anim.h **** }
 5767              		.loc 39 17 1 is_stmt 0 view .LVU1386
 5768 0080 762D     		cmp	r5, #118
 5769 0082 8CBF     		ite	hi
 5770 0084 0020     		movhi	r0, #0
 5771 0086 0120     		movls	r0, #1
 5772 0088 02B0     		add	sp, sp, #8
 5773              		.cfi_remember_state
 5774              		.cfi_def_cfa_offset 24
 5775              		@ sp needed
 5776 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5777              	.LVL438:
 5778              	.L283:
 5779              		.cfi_restore_state
 5780              	.LBB381:
  13:quantum/rgb_matrix_animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5781              		.loc 39 13 9 is_stmt 1 view .LVU1387
 5782 008e 14F80820 		ldrb	r2, [r4, r8]	@ zero_extendqisi2
 5783 0092 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 5784 0094 1A42     		tst	r2, r3
 5785 0096 08D0     		beq	.L282
  14:quantum/rgb_matrix_animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5786              		.loc 39 14 9 view .LVU1388
 5787 0098 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 5788 009c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 5789 00a0 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 5790 00a4 2046     		mov	r0, r4
 5791 00a6 FFF7FEFF 		bl	rgb_matrix_set_color
 5792              	.LVL439:
 5793              	.L282:
  14:quantum/rgb_matrix_animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5794              		.loc 39 14 9 is_stmt 0 view .LVU1389
 5795 00aa 0134     		adds	r4, r4, #1
 5796              	.LVL440:
  14:quantum/rgb_matrix_animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5797              		.loc 39 14 9 view .LVU1390
 5798 00ac E5E7     		b	.L281
 5799              	.L288:
 5800 00ae 00BF     		.align	2
 5801              	.L287:
 5802 00b0 00000000 		.word	rgb_matrix_config
 5803 00b4 00000000 		.word	g_rgb_timer
 5804 00b8 46010000 		.word	g_led_config+326
 5805              	.LBE381:
 5806              		.cfi_endproc
 5807              	.LFE90:
 5809              		.section	.text.raindrops_set_color.isra.1,"ax",%progbits
 5810              		.align	1
 5811              		.syntax unified
 5812              		.thumb
 5813              		.thumb_func
 5814              		.fpu fpv4-sp-d16
 5816              	raindrops_set_color.isra.1:
 5817              	.LVL441:
 5818              	.LFB201:
 5819              		.file 40 "quantum/rgb_matrix_animations/raindrops_anim.h"
   1:quantum/rgb_matrix_animations/raindrops_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINDROPS
   2:quantum/rgb_matrix_animations/raindrops_anim.h **** RGB_MATRIX_EFFECT(RAINDROPS)
   3:quantum/rgb_matrix_animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/raindrops_anim.h **** 
   5:quantum/rgb_matrix_animations/raindrops_anim.h **** static void raindrops_set_color(int i, effect_params_t* params) {
 5820              		.loc 40 5 13 is_stmt 1 view -0
 5821              		.cfi_startproc
 5822              		@ args = 0, pretend = 0, frame = 8
 5823              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 5824              		.loc 40 6 5 view .LVU1392
   5:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 5825              		.loc 40 5 13 is_stmt 0 view .LVU1393
 5826 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 5827              		.cfi_def_cfa_offset 24
 5828              		.cfi_offset 4, -12
 5829              		.cfi_offset 5, -8
 5830              		.cfi_offset 14, -4
 5831              		.loc 40 6 10 view .LVU1394
 5832 0002 1A4B     		ldr	r3, .L294
 5833 0004 0344     		add	r3, r3, r0
   5:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 5834              		.loc 40 5 13 view .LVU1395
 5835 0006 0446     		mov	r4, r0
 5836              		.loc 40 6 9 view .LVU1396
 5837 0008 93F84631 		ldrb	r3, [r3, #326]	@ zero_extendqisi2
 5838              		.loc 40 6 8 view .LVU1397
 5839 000c 1942     		tst	r1, r3
 5840 000e 2AD0     		beq	.L293
   7:quantum/rgb_matrix_animations/raindrops_anim.h ****     HSV hsv = {0, rgb_matrix_config.hsv.s, rgb_matrix_config.hsv.v};
 5841              		.loc 40 7 5 is_stmt 1 view .LVU1398
 5842              		.loc 40 7 40 is_stmt 0 view .LVU1399
 5843 0010 174B     		ldr	r3, .L294+4
   8:quantum/rgb_matrix_animations/raindrops_anim.h **** 
   9:quantum/rgb_matrix_animations/raindrops_anim.h ****     // Take the shortest path between hues
  10:quantum/rgb_matrix_animations/raindrops_anim.h ****     int16_t deltaH = ((rgb_matrix_config.hsv.h + 180) % 360 - rgb_matrix_config.hsv.h) / 4;
 5844              		.loc 40 10 45 view .LVU1400
 5845 0012 5D78     		ldrb	r5, [r3, #1]	@ zero_extendqisi2
   7:quantum/rgb_matrix_animations/raindrops_anim.h ****     HSV hsv = {0, rgb_matrix_config.hsv.s, rgb_matrix_config.hsv.v};
 5846              		.loc 40 7 9 view .LVU1401
 5847 0014 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 5848 0016 8DF80120 		strb	r2, [sp, #1]
 5849 001a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5850 001c 8DF80220 		strb	r2, [sp, #2]
 5851              		.loc 40 10 5 is_stmt 1 view .LVU1402
 5852              	.LVL442:
  11:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (deltaH > 127) {
 5853              		.loc 40 11 5 view .LVU1403
  12:quantum/rgb_matrix_animations/raindrops_anim.h ****         deltaH -= 256;
  13:quantum/rgb_matrix_animations/raindrops_anim.h ****     } else if (deltaH < -127) {
 5854              		.loc 40 13 12 view .LVU1404
  14:quantum/rgb_matrix_animations/raindrops_anim.h ****         deltaH += 256;
  15:quantum/rgb_matrix_animations/raindrops_anim.h ****     }
  16:quantum/rgb_matrix_animations/raindrops_anim.h **** 
  17:quantum/rgb_matrix_animations/raindrops_anim.h ****     hsv.h   = rgb_matrix_config.hsv.h + (deltaH * (rand() & 0x03));
 5855              		.loc 40 17 5 view .LVU1405
 5856              		.loc 40 17 52 is_stmt 0 view .LVU1406
 5857 0020 FFF7FEFF 		bl	rand
 5858              	.LVL443:
  10:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (deltaH > 127) {
 5859              		.loc 40 10 48 view .LVU1407
 5860 0024 05F1B401 		add	r1, r5, #180
 5861              	.LVL444:
  10:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (deltaH > 127) {
 5862              		.loc 40 10 55 view .LVU1408
 5863 0028 4FF4B472 		mov	r2, #360
 5864 002c B1FBF2F3 		udiv	r3, r1, r2
 5865 0030 02FB1313 		mls	r3, r2, r3, r1
  10:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (deltaH > 127) {
 5866              		.loc 40 10 88 view .LVU1409
 5867 0034 5B1B     		subs	r3, r3, r5
 5868 0036 48BF     		it	mi
 5869 0038 0333     		addmi	r3, r3, #3
 5870              		.loc 40 17 39 view .LVU1410
 5871 003a 00F00300 		and	r0, r0, #3
 5872 003e 43F38F03 		sbfx	r3, r3, #2, #16
 5873 0042 03FB0053 		mla	r3, r3, r0, r5
 5874              		.loc 40 17 13 view .LVU1411
 5875 0046 8DF80030 		strb	r3, [sp]
  18:quantum/rgb_matrix_animations/raindrops_anim.h ****     RGB rgb = hsv_to_rgb(hsv);
 5876              		.loc 40 18 5 is_stmt 1 view .LVU1412
 5877              		.loc 40 18 15 is_stmt 0 view .LVU1413
 5878 004a 0098     		ldr	r0, [sp]
 5879 004c FFF7FEFF 		bl	hsv_to_rgb
 5880              	.LVL445:
  19:quantum/rgb_matrix_animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5881              		.loc 40 19 5 is_stmt 1 view .LVU1414
 5882 0050 C0F30743 		ubfx	r3, r0, #16, #8
 5883 0054 C2B2     		uxtb	r2, r0
 5884 0056 C0F30721 		ubfx	r1, r0, #8, #8
 5885 005a 2046     		mov	r0, r4
  20:quantum/rgb_matrix_animations/raindrops_anim.h **** }
 5886              		.loc 40 20 1 is_stmt 0 view .LVU1415
 5887 005c 03B0     		add	sp, sp, #12
 5888              		.cfi_remember_state
 5889              		.cfi_def_cfa_offset 12
 5890              		@ sp needed
 5891 005e BDE83040 		pop	{r4, r5, lr}
 5892              		.cfi_restore 14
 5893              		.cfi_restore 5
 5894              		.cfi_restore 4
 5895              		.cfi_def_cfa_offset 0
 5896              	.LVL446:
  19:quantum/rgb_matrix_animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5897              		.loc 40 19 5 view .LVU1416
 5898 0062 FFF7FEBF 		b	rgb_matrix_set_color
 5899              	.LVL447:
 5900              	.L293:
 5901              		.cfi_restore_state
 5902              		.loc 40 20 1 view .LVU1417
 5903 0066 03B0     		add	sp, sp, #12
 5904              		.cfi_def_cfa_offset 12
 5905              		@ sp needed
 5906 0068 30BD     		pop	{r4, r5, pc}
 5907              	.L295:
 5908 006a 00BF     		.align	2
 5909              	.L294:
 5910 006c 00000000 		.word	g_led_config
 5911 0070 00000000 		.word	rgb_matrix_config
 5912              		.cfi_endproc
 5913              	.LFE201:
 5915              		.section	.text.RAINDROPS,"ax",%progbits
 5916              		.align	1
 5917              		.global	RAINDROPS
 5918              		.syntax unified
 5919              		.thumb
 5920              		.thumb_func
 5921              		.fpu fpv4-sp-d16
 5923              	RAINDROPS:
 5924              	.LVL448:
 5925              	.LFB126:
  21:quantum/rgb_matrix_animations/raindrops_anim.h **** 
  22:quantum/rgb_matrix_animations/raindrops_anim.h **** bool RAINDROPS(effect_params_t* params) {
 5926              		.loc 40 22 41 is_stmt 1 view -0
 5927              		.cfi_startproc
 5928              		@ args = 0, pretend = 0, frame = 0
 5929              		@ frame_needed = 0, uses_anonymous_args = 0
  23:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (!params->init) {
 5930              		.loc 40 23 5 view .LVU1419
  22:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (!params->init) {
 5931              		.loc 40 22 41 is_stmt 0 view .LVU1420
 5932 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5933              		.cfi_def_cfa_offset 24
 5934              		.cfi_offset 3, -24
 5935              		.cfi_offset 4, -20
 5936              		.cfi_offset 5, -16
 5937              		.cfi_offset 6, -12
 5938              		.cfi_offset 7, -8
 5939              		.cfi_offset 14, -4
 5940              		.loc 40 23 16 view .LVU1421
 5941 0002 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
  22:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (!params->init) {
 5942              		.loc 40 22 41 view .LVU1422
 5943 0004 0546     		mov	r5, r0
 5944              		.loc 40 23 8 view .LVU1423
 5945 0006 EEB9     		cbnz	r6, .L297
  24:quantum/rgb_matrix_animations/raindrops_anim.h ****         // Change one LED every tick, make sure speed is not 0
  25:quantum/rgb_matrix_animations/raindrops_anim.h ****         if (scale16by8(g_rgb_timer, qadd8(rgb_matrix_config.speed, 16)) % 10 == 0) {
 5946              		.loc 40 25 9 is_stmt 1 view .LVU1424
 5947              	.LVL449:
 5948              	.LBB382:
 5949              	.LBI382:
  23:./lib/lib8tion/math8.h **** {
 5950              		.loc 1 23 34 view .LVU1425
 5951              	.LBB383:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 5952              		.loc 1 26 5 view .LVU1426
 5953              	.LBE383:
 5954              	.LBE382:
 5955              		.loc 40 25 13 is_stmt 0 view .LVU1427
 5956 0008 1A4B     		ldr	r3, .L301
 5957              	.LBB386:
 5958              	.LBB387:
 253:./lib/lib8tion/scale8.h **** #endif
 5959              		.loc 4 253 17 view .LVU1428
 5960 000a 1B4A     		ldr	r2, .L301+4
 5961              	.LBE387:
 5962              	.LBE386:
 5963              	.LBB390:
 5964              	.LBB384:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 5965              		.loc 1 26 20 view .LVU1429
 5966 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5967              	.LBE384:
 5968              	.LBE390:
 5969              	.LBB391:
 5970              	.LBB388:
 253:./lib/lib8tion/scale8.h **** #endif
 5971              		.loc 4 253 17 view .LVU1430
 5972 000e 1288     		ldrh	r2, [r2]
 5973              	.LBE388:
 5974              	.LBE391:
 5975              	.LBB392:
 5976              	.LBB385:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 5977              		.loc 1 26 14 view .LVU1431
 5978 0010 1033     		adds	r3, r3, #16
 5979              	.LVL450:
  27:./lib/lib8tion/math8.h ****     return t;
 5980              		.loc 1 27 5 is_stmt 1 view .LVU1432
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 5981              		.loc 1 28 5 view .LVU1433
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 5982              		.loc 1 28 5 is_stmt 0 view .LVU1434
 5983              	.LBE385:
 5984              	.LBE392:
 5985              	.LBB393:
 5986              	.LBI386:
 246:./lib/lib8tion/scale8.h **** {
 5987              		.loc 4 246 35 is_stmt 1 view .LVU1435
 5988              	.LBB389:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 5989              		.loc 4 249 5 view .LVU1436
 253:./lib/lib8tion/scale8.h **** #endif
 5990              		.loc 4 253 5 view .LVU1437
 5991              		.loc 4 255 5 view .LVU1438
 253:./lib/lib8tion/scale8.h **** #endif
 5992              		.loc 4 253 17 is_stmt 0 view .LVU1439
 5993 0012 FF2B     		cmp	r3, #255
 5994 0014 28BF     		it	cs
 5995 0016 FF23     		movcs	r3, #255
 5996 0018 5343     		muls	r3, r2, r3
 5997              	.LBE389:
 5998              	.LBE393:
 5999              		.loc 40 25 78 view .LVU1440
 6000 001a C3F30F23 		ubfx	r3, r3, #8, #16
 6001 001e 0A21     		movs	r1, #10
 6002 0020 B3FBF1F2 		udiv	r2, r3, r1
 6003 0024 01FB1233 		mls	r3, r1, r2, r3
 6004              		.loc 40 25 12 view .LVU1441
 6005 0028 9BB2     		uxth	r3, r3
 6006 002a 4BB9     		cbnz	r3, .L298
  26:quantum/rgb_matrix_animations/raindrops_anim.h ****             raindrops_set_color(rand() % DRIVER_LED_TOTAL, params);
 6007              		.loc 40 26 13 is_stmt 1 view .LVU1442
 6008              		.loc 40 26 33 is_stmt 0 view .LVU1443
 6009 002c FFF7FEFF 		bl	rand
 6010              	.LVL451:
 6011              		.loc 40 26 13 view .LVU1444
 6012 0030 7723     		movs	r3, #119
 6013 0032 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 6014 0034 90FBF3F2 		sdiv	r2, r0, r3
 6015 0038 02FB1300 		mls	r0, r2, r3, r0
 6016 003c FFF7FEFF 		bl	raindrops_set_color.isra.1
 6017              	.LVL452:
 6018              	.L298:
  27:quantum/rgb_matrix_animations/raindrops_anim.h ****         }
  28:quantum/rgb_matrix_animations/raindrops_anim.h ****         return false;
  29:quantum/rgb_matrix_animations/raindrops_anim.h ****     }
  30:quantum/rgb_matrix_animations/raindrops_anim.h **** 
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
  33:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
  34:quantum/rgb_matrix_animations/raindrops_anim.h ****     }
  35:quantum/rgb_matrix_animations/raindrops_anim.h ****     return led_max < DRIVER_LED_TOTAL;
  36:quantum/rgb_matrix_animations/raindrops_anim.h **** }
 6019              		.loc 40 36 1 view .LVU1445
 6020 0040 3046     		mov	r0, r6
 6021 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6022              	.LVL453:
 6023              	.L297:
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 6024              		.loc 40 31 5 is_stmt 1 view .LVU1446
 6025 0044 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 6026 0046 C4EB0414 		rsb	r4, r4, r4, lsl #4
 6027 004a E4B2     		uxtb	r4, r4
 6028              	.LVL454:
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 6029              		.loc 40 31 5 view .LVU1447
 6030 004c 04F10F06 		add	r6, r4, #15
 6031 0050 F6B2     		uxtb	r6, r6
 6032              	.LVL455:
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 6033              		.loc 40 31 5 view .LVU1448
 6034 0052 772E     		cmp	r6, #119
 6035 0054 3746     		mov	r7, r6
 6036 0056 28BF     		it	cs
 6037 0058 7727     		movcs	r7, #119
 6038              	.LVL456:
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 6039              		.loc 40 31 44 view .LVU1449
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 6040              		.loc 40 32 5 view .LVU1450
 6041              	.LBB394:
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 6042              		.loc 40 32 10 view .LVU1451
 6043              	.L299:
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 6044              		.loc 40 32 5 is_stmt 0 discriminator 1 view .LVU1452
 6045 005a A742     		cmp	r7, r4
 6046 005c 04DC     		bgt	.L300
 6047              	.LBE394:
  35:quantum/rgb_matrix_animations/raindrops_anim.h **** }
 6048              		.loc 40 35 5 is_stmt 1 view .LVU1453
 6049 005e 762E     		cmp	r6, #118
 6050 0060 8CBF     		ite	hi
 6051 0062 0026     		movhi	r6, #0
 6052 0064 0126     		movls	r6, #1
  35:quantum/rgb_matrix_animations/raindrops_anim.h **** }
 6053              		.loc 40 35 20 is_stmt 0 view .LVU1454
 6054 0066 EBE7     		b	.L298
 6055              	.L300:
 6056              	.LBB395:
  33:quantum/rgb_matrix_animations/raindrops_anim.h ****     }
 6057              		.loc 40 33 9 is_stmt 1 discriminator 3 view .LVU1455
 6058 0068 2046     		mov	r0, r4
 6059 006a 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 6060 006c FFF7FEFF 		bl	raindrops_set_color.isra.1
 6061              	.LVL457:
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 6062              		.loc 40 32 41 is_stmt 0 discriminator 3 view .LVU1456
 6063 0070 0134     		adds	r4, r4, #1
 6064              	.LVL458:
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 6065              		.loc 40 32 41 discriminator 3 view .LVU1457
 6066 0072 F2E7     		b	.L299
 6067              	.L302:
 6068              		.align	2
 6069              	.L301:
 6070 0074 00000000 		.word	rgb_matrix_config
 6071 0078 00000000 		.word	g_rgb_timer
 6072              	.LBE395:
 6073              		.cfi_endproc
 6074              	.LFE126:
 6076              		.section	.text.jellybean_raindrops_set_color.isra.2,"ax",%progbits
 6077              		.align	1
 6078              		.syntax unified
 6079              		.thumb
 6080              		.thumb_func
 6081              		.fpu fpv4-sp-d16
 6083              	jellybean_raindrops_set_color.isra.2:
 6084              	.LVL459:
 6085              	.LFB202:
 6086              		.file 41 "quantum/rgb_matrix_animations/jellybean_raindrops_anim.h"
   1:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** #ifndef DISABLE_RGB_MATRIX_JELLYBEAN_RAINDROPS
   2:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** RGB_MATRIX_EFFECT(JELLYBEAN_RAINDROPS)
   3:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** 
   5:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** static void jellybean_raindrops_set_color(int i, effect_params_t* params) {
 6087              		.loc 41 5 13 is_stmt 1 view -0
 6088              		.cfi_startproc
 6089              		@ args = 0, pretend = 0, frame = 8
 6090              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 6091              		.loc 41 6 5 view .LVU1459
   5:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 6092              		.loc 41 5 13 is_stmt 0 view .LVU1460
 6093 0000 13B5     		push	{r0, r1, r4, lr}
 6094              		.cfi_def_cfa_offset 16
 6095              		.cfi_offset 4, -8
 6096              		.cfi_offset 14, -4
 6097              		.loc 41 6 10 view .LVU1461
 6098 0002 114B     		ldr	r3, .L307
 6099 0004 0344     		add	r3, r3, r0
   5:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 6100              		.loc 41 5 13 view .LVU1462
 6101 0006 0446     		mov	r4, r0
 6102              		.loc 41 6 9 view .LVU1463
 6103 0008 93F84631 		ldrb	r3, [r3, #326]	@ zero_extendqisi2
 6104              		.loc 41 6 8 view .LVU1464
 6105 000c 1942     		tst	r1, r3
 6106 000e 19D0     		beq	.L306
   7:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     HSV hsv = {rand() & 0xFF, rand() & 0xFF, rgb_matrix_config.hsv.v};
 6107              		.loc 41 7 5 is_stmt 1 view .LVU1465
 6108              		.loc 41 7 16 is_stmt 0 view .LVU1466
 6109 0010 FFF7FEFF 		bl	rand
 6110              	.LVL460:
 6111              		.loc 41 7 9 view .LVU1467
 6112 0014 8DF80000 		strb	r0, [sp]
 6113              		.loc 41 7 31 view .LVU1468
 6114 0018 FFF7FEFF 		bl	rand
 6115              	.LVL461:
 6116              		.loc 41 7 67 view .LVU1469
 6117 001c 0B4B     		ldr	r3, .L307+4
 6118              		.loc 41 7 9 view .LVU1470
 6119 001e 8DF80100 		strb	r0, [sp, #1]
 6120 0022 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 6121 0024 8DF80230 		strb	r3, [sp, #2]
   8:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     RGB rgb = hsv_to_rgb(hsv);
 6122              		.loc 41 8 5 is_stmt 1 view .LVU1471
 6123              		.loc 41 8 15 is_stmt 0 view .LVU1472
 6124 0028 0098     		ldr	r0, [sp]
 6125 002a FFF7FEFF 		bl	hsv_to_rgb
 6126              	.LVL462:
   9:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 6127              		.loc 41 9 5 is_stmt 1 view .LVU1473
 6128 002e C0F30743 		ubfx	r3, r0, #16, #8
 6129 0032 C2B2     		uxtb	r2, r0
 6130 0034 C0F30721 		ubfx	r1, r0, #8, #8
 6131 0038 2046     		mov	r0, r4
  10:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** }
 6132              		.loc 41 10 1 is_stmt 0 view .LVU1474
 6133 003a 02B0     		add	sp, sp, #8
 6134              		.cfi_remember_state
 6135              		.cfi_def_cfa_offset 8
 6136              		@ sp needed
 6137 003c BDE81040 		pop	{r4, lr}
 6138              		.cfi_restore 14
 6139              		.cfi_restore 4
 6140              		.cfi_def_cfa_offset 0
 6141              	.LVL463:
   9:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 6142              		.loc 41 9 5 view .LVU1475
 6143 0040 FFF7FEBF 		b	rgb_matrix_set_color
 6144              	.LVL464:
 6145              	.L306:
 6146              		.cfi_restore_state
 6147              		.loc 41 10 1 view .LVU1476
 6148 0044 02B0     		add	sp, sp, #8
 6149              		.cfi_def_cfa_offset 8
 6150              		@ sp needed
 6151 0046 10BD     		pop	{r4, pc}
 6152              	.L308:
 6153              		.align	2
 6154              	.L307:
 6155 0048 00000000 		.word	g_led_config
 6156 004c 00000000 		.word	rgb_matrix_config
 6157              		.cfi_endproc
 6158              	.LFE202:
 6160              		.section	.text.JELLYBEAN_RAINDROPS,"ax",%progbits
 6161              		.align	1
 6162              		.global	JELLYBEAN_RAINDROPS
 6163              		.syntax unified
 6164              		.thumb
 6165              		.thumb_func
 6166              		.fpu fpv4-sp-d16
 6168              	JELLYBEAN_RAINDROPS:
 6169              	.LVL465:
 6170              	.LFB128:
  11:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** 
  12:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** bool JELLYBEAN_RAINDROPS(effect_params_t* params) {
 6171              		.loc 41 12 51 is_stmt 1 view -0
 6172              		.cfi_startproc
 6173              		@ args = 0, pretend = 0, frame = 0
 6174              		@ frame_needed = 0, uses_anonymous_args = 0
  13:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 6175              		.loc 41 13 5 view .LVU1478
  12:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 6176              		.loc 41 12 51 is_stmt 0 view .LVU1479
 6177 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6178              		.cfi_def_cfa_offset 24
 6179              		.cfi_offset 3, -24
 6180              		.cfi_offset 4, -20
 6181              		.cfi_offset 5, -16
 6182              		.cfi_offset 6, -12
 6183              		.cfi_offset 7, -8
 6184              		.cfi_offset 14, -4
 6185              		.loc 41 13 16 view .LVU1480
 6186 0002 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
  12:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 6187              		.loc 41 12 51 view .LVU1481
 6188 0004 0546     		mov	r5, r0
 6189              		.loc 41 13 8 view .LVU1482
 6190 0006 F6B9     		cbnz	r6, .L310
  14:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         // Change one LED every tick, make sure speed is not 0
  15:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         if (scale16by8(g_rgb_timer, qadd8(rgb_matrix_config.speed, 16)) % 5 == 0) {
 6191              		.loc 41 15 9 is_stmt 1 view .LVU1483
 6192              	.LVL466:
 6193              	.LBB396:
 6194              	.LBI396:
  23:./lib/lib8tion/math8.h **** {
 6195              		.loc 1 23 34 view .LVU1484
 6196              	.LBB397:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 6197              		.loc 1 26 5 view .LVU1485
 6198              	.LBE397:
 6199              	.LBE396:
 6200              		.loc 41 15 13 is_stmt 0 view .LVU1486
 6201 0008 1B4B     		ldr	r3, .L314
 6202              	.LBB400:
 6203              	.LBB401:
 253:./lib/lib8tion/scale8.h **** #endif
 6204              		.loc 4 253 17 view .LVU1487
 6205 000a 1C4A     		ldr	r2, .L314+4
 6206              	.LBE401:
 6207              	.LBE400:
 6208              	.LBB404:
 6209              	.LBB398:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 6210              		.loc 1 26 20 view .LVU1488
 6211 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 6212              	.LBE398:
 6213              	.LBE404:
 6214              	.LBB405:
 6215              	.LBB402:
 253:./lib/lib8tion/scale8.h **** #endif
 6216              		.loc 4 253 17 view .LVU1489
 6217 000e 1288     		ldrh	r2, [r2]
 6218              	.LBE402:
 6219              	.LBE405:
 6220              	.LBB406:
 6221              	.LBB399:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 6222              		.loc 1 26 14 view .LVU1490
 6223 0010 1033     		adds	r3, r3, #16
 6224              	.LVL467:
  27:./lib/lib8tion/math8.h ****     return t;
 6225              		.loc 1 27 5 is_stmt 1 view .LVU1491
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 6226              		.loc 1 28 5 view .LVU1492
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 6227              		.loc 1 28 5 is_stmt 0 view .LVU1493
 6228              	.LBE399:
 6229              	.LBE406:
 6230              	.LBB407:
 6231              	.LBI400:
 246:./lib/lib8tion/scale8.h **** {
 6232              		.loc 4 246 35 is_stmt 1 view .LVU1494
 6233              	.LBB403:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 6234              		.loc 4 249 5 view .LVU1495
 253:./lib/lib8tion/scale8.h **** #endif
 6235              		.loc 4 253 5 view .LVU1496
 6236              		.loc 4 255 5 view .LVU1497
 253:./lib/lib8tion/scale8.h **** #endif
 6237              		.loc 4 253 17 is_stmt 0 view .LVU1498
 6238 0012 FF2B     		cmp	r3, #255
 6239 0014 28BF     		it	cs
 6240 0016 FF23     		movcs	r3, #255
 6241 0018 5343     		muls	r3, r2, r3
 6242              	.LBE403:
 6243              	.LBE407:
 6244              		.loc 41 15 77 view .LVU1499
 6245 001a C3F30F23 		ubfx	r3, r3, #8, #16
 6246 001e 0522     		movs	r2, #5
 6247 0020 B3FBF2F2 		udiv	r2, r3, r2
 6248 0024 02EB8202 		add	r2, r2, r2, lsl #2
 6249 0028 9B1A     		subs	r3, r3, r2
 6250              		.loc 41 15 12 view .LVU1500
 6251 002a 9BB2     		uxth	r3, r3
 6252 002c 4BB9     		cbnz	r3, .L311
  16:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****             jellybean_raindrops_set_color(rand() % DRIVER_LED_TOTAL, params);
 6253              		.loc 41 16 13 is_stmt 1 view .LVU1501
 6254              		.loc 41 16 43 is_stmt 0 view .LVU1502
 6255 002e FFF7FEFF 		bl	rand
 6256              	.LVL468:
 6257              		.loc 41 16 13 view .LVU1503
 6258 0032 7723     		movs	r3, #119
 6259 0034 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 6260 0036 90FBF3F2 		sdiv	r2, r0, r3
 6261 003a 02FB1300 		mls	r0, r2, r3, r0
 6262 003e FFF7FEFF 		bl	jellybean_raindrops_set_color.isra.2
 6263              	.LVL469:
 6264              	.L311:
  17:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         }
  18:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         return false;
  19:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     }
  20:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** 
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
  23:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
  24:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     }
  25:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     return led_max < DRIVER_LED_TOTAL;
  26:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** }
 6265              		.loc 41 26 1 view .LVU1504
 6266 0042 3046     		mov	r0, r6
 6267 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6268              	.LVL470:
 6269              	.L310:
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 6270              		.loc 41 21 5 is_stmt 1 view .LVU1505
 6271 0046 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 6272 0048 C4EB0414 		rsb	r4, r4, r4, lsl #4
 6273 004c E4B2     		uxtb	r4, r4
 6274              	.LVL471:
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 6275              		.loc 41 21 5 view .LVU1506
 6276 004e 04F10F06 		add	r6, r4, #15
 6277 0052 F6B2     		uxtb	r6, r6
 6278              	.LVL472:
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 6279              		.loc 41 21 5 view .LVU1507
 6280 0054 772E     		cmp	r6, #119
 6281 0056 3746     		mov	r7, r6
 6282 0058 28BF     		it	cs
 6283 005a 7727     		movcs	r7, #119
 6284              	.LVL473:
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 6285              		.loc 41 21 44 view .LVU1508
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 6286              		.loc 41 22 5 view .LVU1509
 6287              	.LBB408:
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 6288              		.loc 41 22 10 view .LVU1510
 6289              	.L312:
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 6290              		.loc 41 22 5 is_stmt 0 discriminator 1 view .LVU1511
 6291 005c A742     		cmp	r7, r4
 6292 005e 04DC     		bgt	.L313
 6293              	.LBE408:
  25:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** }
 6294              		.loc 41 25 5 is_stmt 1 view .LVU1512
 6295 0060 762E     		cmp	r6, #118
 6296 0062 8CBF     		ite	hi
 6297 0064 0026     		movhi	r6, #0
 6298 0066 0126     		movls	r6, #1
  25:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** }
 6299              		.loc 41 25 20 is_stmt 0 view .LVU1513
 6300 0068 EBE7     		b	.L311
 6301              	.L313:
 6302              	.LBB409:
  23:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     }
 6303              		.loc 41 23 9 is_stmt 1 discriminator 3 view .LVU1514
 6304 006a 2046     		mov	r0, r4
 6305 006c 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 6306 006e FFF7FEFF 		bl	jellybean_raindrops_set_color.isra.2
 6307              	.LVL474:
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 6308              		.loc 41 22 41 is_stmt 0 discriminator 3 view .LVU1515
 6309 0072 0134     		adds	r4, r4, #1
 6310              	.LVL475:
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 6311              		.loc 41 22 41 discriminator 3 view .LVU1516
 6312 0074 F2E7     		b	.L312
 6313              	.L315:
 6314 0076 00BF     		.align	2
 6315              	.L314:
 6316 0078 00000000 		.word	rgb_matrix_config
 6317 007c 00000000 		.word	g_rgb_timer
 6318              	.LBE409:
 6319              		.cfi_endproc
 6320              	.LFE128:
 6322              		.section	.text.rgb_matrix_set_color_all,"ax",%progbits
 6323              		.align	1
 6324              		.global	rgb_matrix_set_color_all
 6325              		.syntax unified
 6326              		.thumb
 6327              		.thumb_func
 6328              		.fpu fpv4-sp-d16
 6330              	rgb_matrix_set_color_all:
 6331              	.LVL476:
 6332              	.LFB156:
 182:quantum/rgb_matrix.c **** 
 183:quantum/rgb_matrix.c **** void rgb_matrix_set_color_all(uint8_t red, uint8_t green, uint8_t blue) { rgb_matrix_driver.set_col
 6333              		.loc 28 183 73 is_stmt 1 view -0
 6334              		.cfi_startproc
 6335              		@ args = 0, pretend = 0, frame = 0
 6336              		@ frame_needed = 0, uses_anonymous_args = 0
 6337              		@ link register save eliminated.
 6338              		.loc 28 183 75 view .LVU1518
 6339              		.loc 28 183 92 is_stmt 0 view .LVU1519
 6340 0000 014B     		ldr	r3, .L317
 6341              		.loc 28 183 75 view .LVU1520
 6342 0002 9B68     		ldr	r3, [r3, #8]
 6343 0004 1847     		bx	r3	@ indirect register sibling call
 6344              	.LVL477:
 6345              	.L318:
 6346              		.loc 28 183 75 view .LVU1521
 6347 0006 00BF     		.align	2
 6348              	.L317:
 6349 0008 00000000 		.word	rgb_matrix_driver
 6350              		.cfi_endproc
 6351              	.LFE156:
 6353              		.section	.text.process_rgb_matrix,"ax",%progbits
 6354              		.align	1
 6355              		.global	process_rgb_matrix
 6356              		.syntax unified
 6357              		.thumb
 6358              		.thumb_func
 6359              		.fpu fpv4-sp-d16
 6361              	process_rgb_matrix:
 6362              	.LVL478:
 6363              	.LFB157:
 184:quantum/rgb_matrix.c **** 
 185:quantum/rgb_matrix.c **** bool process_rgb_matrix(uint16_t keycode, keyrecord_t *record) {
 6364              		.loc 28 185 64 is_stmt 1 view -0
 6365              		.cfi_startproc
 6366              		@ args = 0, pretend = 0, frame = 8
 6367              		@ frame_needed = 0, uses_anonymous_args = 0
 186:quantum/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 187:quantum/rgb_matrix.c ****     if (record->event.pressed) {
 188:quantum/rgb_matrix.c ****         rgb_anykey_timer = 0;
 189:quantum/rgb_matrix.c ****     }
 190:quantum/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 191:quantum/rgb_matrix.c **** 
 192:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 193:quantum/rgb_matrix.c ****     uint8_t led[LED_HITS_TO_REMEMBER];
 6368              		.loc 28 193 5 view .LVU1523
 194:quantum/rgb_matrix.c ****     uint8_t led_count = 0;
 6369              		.loc 28 194 5 view .LVU1524
 195:quantum/rgb_matrix.c **** 
 196:quantum/rgb_matrix.c **** #    if defined(RGB_MATRIX_KEYRELEASES)
 197:quantum/rgb_matrix.c ****     if (!record->event.pressed)
 198:quantum/rgb_matrix.c **** #    elif defined(RGB_MATRIX_KEYPRESSES)
 199:quantum/rgb_matrix.c ****     if (record->event.pressed)
 6370              		.loc 28 199 5 view .LVU1525
 185:quantum/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 6371              		.loc 28 185 64 is_stmt 0 view .LVU1526
 6372 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 6373              		.cfi_def_cfa_offset 32
 6374              		.cfi_offset 4, -24
 6375              		.cfi_offset 5, -20
 6376              		.cfi_offset 6, -16
 6377              		.cfi_offset 7, -12
 6378              		.cfi_offset 8, -8
 6379              		.cfi_offset 14, -4
 6380              		.loc 28 199 8 view .LVU1527
 6381 0004 8D78     		ldrb	r5, [r1, #2]	@ zero_extendqisi2
 185:quantum/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 6382              		.loc 28 185 64 view .LVU1528
 6383 0006 0B46     		mov	r3, r1
 6384              		.loc 28 199 8 view .LVU1529
 6385 0008 2DB1     		cbz	r5, .L320
 200:quantum/rgb_matrix.c **** #    endif  // defined(RGB_MATRIX_KEYRELEASES)
 201:quantum/rgb_matrix.c ****     {
 202:quantum/rgb_matrix.c ****         led_count = rgb_matrix_map_row_column_to_led(record->event.key.row, record->event.key.col, 
 6386              		.loc 28 202 9 is_stmt 1 view .LVU1530
 6387              		.loc 28 202 21 is_stmt 0 view .LVU1531
 6388 000a 6A46     		mov	r2, sp
 6389 000c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6390              	.LVL479:
 6391              		.loc 28 202 21 view .LVU1532
 6392 000e 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6393              	.LVL480:
 6394              		.loc 28 202 21 view .LVU1533
 6395 0010 FFF7FEFF 		bl	rgb_matrix_map_row_column_to_led
 6396              	.LVL481:
 6397              		.loc 28 202 21 view .LVU1534
 6398 0014 0546     		mov	r5, r0
 6399              	.LVL482:
 6400              	.L320:
 203:quantum/rgb_matrix.c ****     }
 204:quantum/rgb_matrix.c **** 
 205:quantum/rgb_matrix.c ****     if (last_hit_buffer.count + led_count > LED_HITS_TO_REMEMBER) {
 6401              		.loc 28 205 5 is_stmt 1 view .LVU1535
 6402              		.loc 28 205 24 is_stmt 0 view .LVU1536
 6403 0016 294C     		ldr	r4, .L329
 6404 0018 2778     		ldrb	r7, [r4]	@ zero_extendqisi2
 6405              		.loc 28 205 31 view .LVU1537
 6406 001a 7B19     		adds	r3, r7, r5
 6407              		.loc 28 205 8 view .LVU1538
 6408 001c 082B     		cmp	r3, #8
 6409 001e 21DD     		ble	.L321
 206:quantum/rgb_matrix.c ****         memcpy(&last_hit_buffer.x[0], &last_hit_buffer.x[led_count], LED_HITS_TO_REMEMBER - led_cou
 6410              		.loc 28 206 9 is_stmt 1 view .LVU1539
 6411              		.loc 28 206 91 is_stmt 0 view .LVU1540
 6412 0020 C5F10806 		rsb	r6, r5, #8
 6413              		.loc 28 206 39 view .LVU1541
 6414 0024 691C     		adds	r1, r5, #1
 6415              		.loc 28 206 9 view .LVU1542
 6416 0026 3246     		mov	r2, r6
 6417 0028 2144     		add	r1, r1, r4
 6418 002a 601C     		adds	r0, r4, #1
 6419 002c FFF7FEFF 		bl	memcpy
 6420              	.LVL483:
 207:quantum/rgb_matrix.c ****         memcpy(&last_hit_buffer.y[0], &last_hit_buffer.y[led_count], LED_HITS_TO_REMEMBER - led_cou
 6421              		.loc 28 207 9 is_stmt 1 view .LVU1543
 6422              		.loc 28 207 39 is_stmt 0 view .LVU1544
 6423 0030 05F10901 		add	r1, r5, #9
 6424              		.loc 28 207 9 view .LVU1545
 6425 0034 3246     		mov	r2, r6
 6426 0036 2144     		add	r1, r1, r4
 6427 0038 04F10900 		add	r0, r4, #9
 6428 003c FFF7FEFF 		bl	memcpy
 6429              	.LVL484:
 208:quantum/rgb_matrix.c ****         memcpy(&last_hit_buffer.tick[0], &last_hit_buffer.tick[led_count], (LED_HITS_TO_REMEMBER - 
 6430              		.loc 28 208 9 is_stmt 1 view .LVU1546
 6431              		.loc 28 208 42 is_stmt 0 view .LVU1547
 6432 0040 04EB4501 		add	r1, r4, r5, lsl #1
 6433              		.loc 28 208 9 view .LVU1548
 6434 0044 7200     		lsls	r2, r6, #1
 6435 0046 1931     		adds	r1, r1, #25
 6436 0048 04F11900 		add	r0, r4, #25
 6437 004c FFF7FEFF 		bl	memcpy
 6438              	.LVL485:
 209:quantum/rgb_matrix.c ****         memcpy(&last_hit_buffer.index[0], &last_hit_buffer.index[led_count], LED_HITS_TO_REMEMBER -
 6439              		.loc 28 209 9 is_stmt 1 view .LVU1549
 6440              		.loc 28 209 43 is_stmt 0 view .LVU1550
 6441 0050 05F11101 		add	r1, r5, #17
 6442              		.loc 28 209 9 view .LVU1551
 6443 0054 3246     		mov	r2, r6
 6444 0056 2144     		add	r1, r1, r4
 6445 0058 04F11100 		add	r0, r4, #17
 210:quantum/rgb_matrix.c ****         last_hit_buffer.count--;
 6446              		.loc 28 210 30 view .LVU1552
 6447 005c 013F     		subs	r7, r7, #1
 209:quantum/rgb_matrix.c ****         memcpy(&last_hit_buffer.index[0], &last_hit_buffer.index[led_count], LED_HITS_TO_REMEMBER -
 6448              		.loc 28 209 9 view .LVU1553
 6449 005e FFF7FEFF 		bl	memcpy
 6450              	.LVL486:
 6451              		.loc 28 210 9 is_stmt 1 view .LVU1554
 6452              		.loc 28 210 30 is_stmt 0 view .LVU1555
 6453 0062 2770     		strb	r7, [r4]
 6454              	.L321:
 194:quantum/rgb_matrix.c **** 
 6455              		.loc 28 194 13 discriminator 1 view .LVU1556
 6456 0064 0022     		movs	r2, #0
 6457 0066 2678     		ldrb	r6, [r4]	@ zero_extendqisi2
 6458              	.LBB410:
 6459              	.LBB411:
 211:quantum/rgb_matrix.c ****     }
 212:quantum/rgb_matrix.c **** 
 213:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < led_count; i++) {
 214:quantum/rgb_matrix.c ****         uint8_t index                = last_hit_buffer.count;
 215:quantum/rgb_matrix.c ****         last_hit_buffer.x[index]     = g_led_config.point[led[i]].x;
 6460              		.loc 28 215 66 discriminator 1 view .LVU1557
 6461 0068 154F     		ldr	r7, .L329+4
 6462              	.LBE411:
 6463              	.LBE410:
 194:quantum/rgb_matrix.c **** 
 6464              		.loc 28 194 13 discriminator 1 view .LVU1558
 6465 006a 1146     		mov	r1, r2
 6466              	.LBB414:
 6467              	.LBB412:
 216:quantum/rgb_matrix.c ****         last_hit_buffer.y[index]     = g_led_config.point[led[i]].y;
 217:quantum/rgb_matrix.c ****         last_hit_buffer.index[index] = led[i];
 218:quantum/rgb_matrix.c ****         last_hit_buffer.tick[index]  = 0;
 6468              		.loc 28 218 38 discriminator 1 view .LVU1559
 6469 006c 9446     		mov	ip, r2
 6470              	.L322:
 6471 006e D0B2     		uxtb	r0, r2
 6472 0070 8319     		adds	r3, r0, r6
 6473              	.LBE412:
 213:quantum/rgb_matrix.c ****         uint8_t index                = last_hit_buffer.count;
 6474              		.loc 28 213 5 discriminator 1 view .LVU1560
 6475 0072 A842     		cmp	r0, r5
 6476 0074 DBB2     		uxtb	r3, r3
 6477              	.LVL487:
 213:quantum/rgb_matrix.c ****         uint8_t index                = last_hit_buffer.count;
 6478              		.loc 28 213 5 discriminator 1 view .LVU1561
 6479 0076 07D3     		bcc	.L323
 6480 0078 3544     		add	r5, r5, r6
 6481              	.LVL488:
 213:quantum/rgb_matrix.c ****         uint8_t index                = last_hit_buffer.count;
 6482              		.loc 28 213 5 discriminator 1 view .LVU1562
 6483 007a EDB2     		uxtb	r5, r5
 6484 007c 01B1     		cbz	r1, .L324
 6485 007e 2570     		strb	r5, [r4]
 6486              	.L324:
 6487              	.LBE414:
 219:quantum/rgb_matrix.c ****         last_hit_buffer.count++;
 220:quantum/rgb_matrix.c ****     }
 221:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 222:quantum/rgb_matrix.c **** 
 223:quantum/rgb_matrix.c **** #if defined(RGB_MATRIX_FRAMEBUFFER_EFFECTS) && !defined(DISABLE_RGB_MATRIX_TYPING_HEATMAP)
 224:quantum/rgb_matrix.c ****     if (rgb_matrix_config.mode == RGB_MATRIX_TYPING_HEATMAP) {
 225:quantum/rgb_matrix.c ****         process_rgb_matrix_typing_heatmap(record);
 226:quantum/rgb_matrix.c ****     }
 227:quantum/rgb_matrix.c **** #endif  // defined(RGB_MATRIX_FRAMEBUFFER_EFFECTS) && !defined(DISABLE_RGB_MATRIX_TYPING_HEATMAP)
 228:quantum/rgb_matrix.c **** 
 229:quantum/rgb_matrix.c ****     return true;
 6488              		.loc 28 229 5 is_stmt 1 view .LVU1563
 230:quantum/rgb_matrix.c **** }
 6489              		.loc 28 230 1 is_stmt 0 view .LVU1564
 6490 0080 0120     		movs	r0, #1
 6491 0082 02B0     		add	sp, sp, #8
 6492              		.cfi_remember_state
 6493              		.cfi_def_cfa_offset 24
 6494              		@ sp needed
 6495 0084 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6496              	.LVL489:
 6497              	.L323:
 6498              		.cfi_restore_state
 6499              	.LBB415:
 6500              	.LBB413:
 214:quantum/rgb_matrix.c ****         last_hit_buffer.x[index]     = g_led_config.point[led[i]].x;
 6501              		.loc 28 214 9 is_stmt 1 discriminator 3 view .LVU1565
 215:quantum/rgb_matrix.c ****         last_hit_buffer.y[index]     = g_led_config.point[led[i]].y;
 6502              		.loc 28 215 9 discriminator 3 view .LVU1566
 215:quantum/rgb_matrix.c ****         last_hit_buffer.y[index]     = g_led_config.point[led[i]].y;
 6503              		.loc 28 215 62 is_stmt 0 discriminator 3 view .LVU1567
 6504 0088 1DF802E0 		ldrb	lr, [sp, r2]	@ zero_extendqisi2
 215:quantum/rgb_matrix.c ****         last_hit_buffer.y[index]     = g_led_config.point[led[i]].y;
 6505              		.loc 28 215 66 discriminator 3 view .LVU1568
 6506 008c 0EF12C01 		add	r1, lr, #44
 215:quantum/rgb_matrix.c ****         last_hit_buffer.y[index]     = g_led_config.point[led[i]].y;
 6507              		.loc 28 215 38 discriminator 3 view .LVU1569
 6508 0090 E018     		adds	r0, r4, r3
 6509 0092 17F81180 		ldrb	r8, [r7, r1, lsl #1]	@ zero_extendqisi2
 6510 0096 80F80180 		strb	r8, [r0, #1]
 216:quantum/rgb_matrix.c ****         last_hit_buffer.index[index] = led[i];
 6511              		.loc 28 216 9 is_stmt 1 discriminator 3 view .LVU1570
 216:quantum/rgb_matrix.c ****         last_hit_buffer.index[index] = led[i];
 6512              		.loc 28 216 66 is_stmt 0 discriminator 3 view .LVU1571
 6513 009a 07EB4101 		add	r1, r7, r1, lsl #1
 218:quantum/rgb_matrix.c ****         last_hit_buffer.count++;
 6514              		.loc 28 218 38 discriminator 3 view .LVU1572
 6515 009e 0C33     		adds	r3, r3, #12
 6516              	.LVL490:
 218:quantum/rgb_matrix.c ****         last_hit_buffer.count++;
 6517              		.loc 28 218 38 discriminator 3 view .LVU1573
 6518 00a0 04EB4303 		add	r3, r4, r3, lsl #1
 216:quantum/rgb_matrix.c ****         last_hit_buffer.index[index] = led[i];
 6519              		.loc 28 216 38 discriminator 3 view .LVU1574
 6520 00a4 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 6521 00a6 4172     		strb	r1, [r0, #9]
 217:quantum/rgb_matrix.c ****         last_hit_buffer.tick[index]  = 0;
 6522              		.loc 28 217 9 is_stmt 1 discriminator 3 view .LVU1575
 217:quantum/rgb_matrix.c ****         last_hit_buffer.tick[index]  = 0;
 6523              		.loc 28 217 38 is_stmt 0 discriminator 3 view .LVU1576
 6524 00a8 80F811E0 		strb	lr, [r0, #17]
 218:quantum/rgb_matrix.c ****         last_hit_buffer.count++;
 6525              		.loc 28 218 9 is_stmt 1 discriminator 3 view .LVU1577
 6526 00ac 0132     		adds	r2, r2, #1
 6527              	.LVL491:
 218:quantum/rgb_matrix.c ****         last_hit_buffer.count++;
 6528              		.loc 28 218 38 is_stmt 0 discriminator 3 view .LVU1578
 6529 00ae 83F801C0 		strb	ip, [r3, #1]
 6530 00b2 83F802C0 		strb	ip, [r3, #2]
 219:quantum/rgb_matrix.c ****     }
 6531              		.loc 28 219 9 is_stmt 1 discriminator 3 view .LVU1579
 219:quantum/rgb_matrix.c ****     }
 6532              		.loc 28 219 9 is_stmt 0 discriminator 3 view .LVU1580
 6533 00b6 0121     		movs	r1, #1
 6534 00b8 D9E7     		b	.L322
 6535              	.L330:
 6536 00ba 00BF     		.align	2
 6537              	.L329:
 6538 00bc 00000000 		.word	.LANCHOR1
 6539 00c0 00000000 		.word	g_led_config
 6540              	.LBE413:
 6541              	.LBE415:
 6542              		.cfi_endproc
 6543              	.LFE157:
 6545              		.section	.text.rgb_matrix_test,"ax",%progbits
 6546              		.align	1
 6547              		.global	rgb_matrix_test
 6548              		.syntax unified
 6549              		.thumb
 6550              		.thumb_func
 6551              		.fpu fpv4-sp-d16
 6553              	rgb_matrix_test:
 6554              	.LFB158:
 231:quantum/rgb_matrix.c **** 
 232:quantum/rgb_matrix.c **** void rgb_matrix_test(void) {
 6555              		.loc 28 232 28 is_stmt 1 view -0
 6556              		.cfi_startproc
 6557              		@ args = 0, pretend = 0, frame = 0
 6558              		@ frame_needed = 0, uses_anonymous_args = 0
 6559              		@ link register save eliminated.
 233:quantum/rgb_matrix.c ****     // Mask out bits 4 and 5
 234:quantum/rgb_matrix.c ****     // Increase the factor to make the test animation slower (and reduce to make it faster)
 235:quantum/rgb_matrix.c ****     uint8_t factor = 10;
 6560              		.loc 28 235 5 view .LVU1582
 6561              	.LVL492:
 236:quantum/rgb_matrix.c ****     switch ((g_rgb_timer & (0b11 << factor)) >> factor) {
 6562              		.loc 28 236 5 view .LVU1583
 6563              		.loc 28 236 26 is_stmt 0 view .LVU1584
 6564 0000 0C4B     		ldr	r3, .L337
 6565              		.loc 28 236 46 view .LVU1585
 6566 0002 1B68     		ldr	r3, [r3]
 6567 0004 C3F38123 		ubfx	r3, r3, #10, #2
 6568              		.loc 28 236 5 view .LVU1586
 6569 0008 022B     		cmp	r3, #2
 6570 000a 0CD0     		beq	.L332
 6571 000c 032B     		cmp	r3, #3
 6572 000e 0ED0     		beq	.L333
 6573 0010 012B     		cmp	r3, #1
 237:quantum/rgb_matrix.c ****         case 0: {
 238:quantum/rgb_matrix.c ****             rgb_matrix_set_color_all(20, 0, 0);
 6574              		.loc 28 238 13 view .LVU1587
 6575 0012 4FF00002 		mov	r2, #0
 236:quantum/rgb_matrix.c ****     switch ((g_rgb_timer & (0b11 << factor)) >> factor) {
 6576              		.loc 28 236 5 view .LVU1588
 6577 0016 03D0     		beq	.L334
 6578              	.L335:
 6579              		.loc 28 238 13 is_stmt 1 view .LVU1589
 6580 0018 1146     		mov	r1, r2
 6581 001a 1420     		movs	r0, #20
 6582              	.L336:
 239:quantum/rgb_matrix.c ****             break;
 240:quantum/rgb_matrix.c ****         }
 241:quantum/rgb_matrix.c ****         case 1: {
 242:quantum/rgb_matrix.c ****             rgb_matrix_set_color_all(0, 20, 0);
 243:quantum/rgb_matrix.c ****             break;
 244:quantum/rgb_matrix.c ****         }
 245:quantum/rgb_matrix.c ****         case 2: {
 246:quantum/rgb_matrix.c ****             rgb_matrix_set_color_all(0, 0, 20);
 6583              		.loc 28 246 13 is_stmt 0 view .LVU1590
 6584 001c FFF7FEBF 		b	rgb_matrix_set_color_all
 6585              	.LVL493:
 6586              	.L334:
 242:quantum/rgb_matrix.c ****             break;
 6587              		.loc 28 242 13 is_stmt 1 view .LVU1591
 6588 0020 1421     		movs	r1, #20
 6589 0022 1046     		mov	r0, r2
 6590 0024 FAE7     		b	.L336
 6591              	.L332:
 6592              		.loc 28 246 13 view .LVU1592
 6593 0026 0021     		movs	r1, #0
 6594 0028 1422     		movs	r2, #20
 6595 002a 0846     		mov	r0, r1
 6596 002c F6E7     		b	.L336
 6597              	.L333:
 247:quantum/rgb_matrix.c ****             break;
 248:quantum/rgb_matrix.c ****         }
 249:quantum/rgb_matrix.c ****         case 3: {
 250:quantum/rgb_matrix.c ****             rgb_matrix_set_color_all(20, 20, 20);
 6598              		.loc 28 250 13 view .LVU1593
 6599 002e 1422     		movs	r2, #20
 6600 0030 F2E7     		b	.L335
 6601              	.L338:
 6602 0032 00BF     		.align	2
 6603              	.L337:
 6604 0034 00000000 		.word	g_rgb_timer
 6605              		.cfi_endproc
 6606              	.LFE158:
 6608              		.section	.text.rgb_matrix_indicators_kb,"ax",%progbits
 6609              		.align	1
 6610              		.weak	rgb_matrix_indicators_kb
 6611              		.syntax unified
 6612              		.thumb
 6613              		.thumb_func
 6614              		.fpu fpv4-sp-d16
 6616              	rgb_matrix_indicators_kb:
 6617              	.LFB167:
 251:quantum/rgb_matrix.c ****             break;
 252:quantum/rgb_matrix.c ****         }
 253:quantum/rgb_matrix.c ****     }
 254:quantum/rgb_matrix.c **** }
 255:quantum/rgb_matrix.c **** 
 256:quantum/rgb_matrix.c **** static bool rgb_matrix_none(effect_params_t *params) {
 257:quantum/rgb_matrix.c ****     if (!params->init) {
 258:quantum/rgb_matrix.c ****         return false;
 259:quantum/rgb_matrix.c ****     }
 260:quantum/rgb_matrix.c **** 
 261:quantum/rgb_matrix.c ****     rgb_matrix_set_color_all(0, 0, 0);
 262:quantum/rgb_matrix.c ****     return false;
 263:quantum/rgb_matrix.c **** }
 264:quantum/rgb_matrix.c **** 
 265:quantum/rgb_matrix.c **** static void rgb_task_timers(void) {
 266:quantum/rgb_matrix.c **** #if defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 267:quantum/rgb_matrix.c ****     uint32_t deltaTime = timer_elapsed32(rgb_timer_buffer);
 268:quantum/rgb_matrix.c **** #endif  // defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 269:quantum/rgb_matrix.c ****     rgb_timer_buffer = timer_read32();
 270:quantum/rgb_matrix.c **** 
 271:quantum/rgb_matrix.c ****     // Update double buffer timers
 272:quantum/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 273:quantum/rgb_matrix.c ****     if (rgb_anykey_timer < UINT32_MAX) {
 274:quantum/rgb_matrix.c ****         if (UINT32_MAX - deltaTime < rgb_anykey_timer) {
 275:quantum/rgb_matrix.c ****             rgb_anykey_timer = UINT32_MAX;
 276:quantum/rgb_matrix.c ****         } else {
 277:quantum/rgb_matrix.c ****             rgb_anykey_timer += deltaTime;
 278:quantum/rgb_matrix.c ****         }
 279:quantum/rgb_matrix.c ****     }
 280:quantum/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 281:quantum/rgb_matrix.c **** 
 282:quantum/rgb_matrix.c ****     // Update double buffer last hit timers
 283:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 284:quantum/rgb_matrix.c ****     uint8_t count = last_hit_buffer.count;
 285:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < count; ++i) {
 286:quantum/rgb_matrix.c ****         if (UINT16_MAX - deltaTime < last_hit_buffer.tick[i]) {
 287:quantum/rgb_matrix.c ****             last_hit_buffer.count--;
 288:quantum/rgb_matrix.c ****             continue;
 289:quantum/rgb_matrix.c ****         }
 290:quantum/rgb_matrix.c ****         last_hit_buffer.tick[i] += deltaTime;
 291:quantum/rgb_matrix.c ****     }
 292:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 293:quantum/rgb_matrix.c **** }
 294:quantum/rgb_matrix.c **** 
 295:quantum/rgb_matrix.c **** static void rgb_task_sync(void) {
 296:quantum/rgb_matrix.c ****     // next task
 297:quantum/rgb_matrix.c ****     if (timer_elapsed32(g_rgb_timer) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTING;
 298:quantum/rgb_matrix.c **** }
 299:quantum/rgb_matrix.c **** 
 300:quantum/rgb_matrix.c **** static void rgb_task_start(void) {
 301:quantum/rgb_matrix.c ****     // reset iter
 302:quantum/rgb_matrix.c ****     rgb_effect_params.iter = 0;
 303:quantum/rgb_matrix.c **** 
 304:quantum/rgb_matrix.c ****     // update double buffers
 305:quantum/rgb_matrix.c ****     g_rgb_timer = rgb_timer_buffer;
 306:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 307:quantum/rgb_matrix.c ****     g_last_hit_tracker = last_hit_buffer;
 308:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 309:quantum/rgb_matrix.c **** 
 310:quantum/rgb_matrix.c ****     // next task
 311:quantum/rgb_matrix.c ****     rgb_task_state = RENDERING;
 312:quantum/rgb_matrix.c **** }
 313:quantum/rgb_matrix.c **** 
 314:quantum/rgb_matrix.c **** static void rgb_task_render(uint8_t effect) {
 315:quantum/rgb_matrix.c ****     bool rendering         = false;
 316:quantum/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 317:quantum/rgb_matrix.c **** 
 318:quantum/rgb_matrix.c ****     // each effect can opt to do calculations
 319:quantum/rgb_matrix.c ****     // and/or request PWM buffer updates.
 320:quantum/rgb_matrix.c ****     switch (effect) {
 321:quantum/rgb_matrix.c ****         case RGB_MATRIX_NONE:
 322:quantum/rgb_matrix.c ****             rendering = rgb_matrix_none(&rgb_effect_params);
 323:quantum/rgb_matrix.c ****             break;
 324:quantum/rgb_matrix.c **** 
 325:quantum/rgb_matrix.c **** // ---------------------------------------------
 326:quantum/rgb_matrix.c **** // -----Begin rgb effect switch case macros-----
 327:quantum/rgb_matrix.c **** #define RGB_MATRIX_EFFECT(name, ...)          \
 328:quantum/rgb_matrix.c ****     case RGB_MATRIX_##name:                   \
 329:quantum/rgb_matrix.c ****         rendering = name(&rgb_effect_params); \
 330:quantum/rgb_matrix.c ****         break;
 331:quantum/rgb_matrix.c **** #include "rgb_matrix_animations/rgb_matrix_effects.inc"
 332:quantum/rgb_matrix.c **** #undef RGB_MATRIX_EFFECT
 333:quantum/rgb_matrix.c **** 
 334:quantum/rgb_matrix.c **** #if defined(RGB_MATRIX_CUSTOM_KB) || defined(RGB_MATRIX_CUSTOM_USER)
 335:quantum/rgb_matrix.c **** #    define RGB_MATRIX_EFFECT(name, ...)          \
 336:quantum/rgb_matrix.c ****         case RGB_MATRIX_CUSTOM_##name:            \
 337:quantum/rgb_matrix.c ****             rendering = name(&rgb_effect_params); \
 338:quantum/rgb_matrix.c ****             break;
 339:quantum/rgb_matrix.c **** #    ifdef RGB_MATRIX_CUSTOM_KB
 340:quantum/rgb_matrix.c **** #        include "rgb_matrix_kb.inc"
 341:quantum/rgb_matrix.c **** #    endif
 342:quantum/rgb_matrix.c **** #    ifdef RGB_MATRIX_CUSTOM_USER
 343:quantum/rgb_matrix.c **** #        include "rgb_matrix_user.inc"
 344:quantum/rgb_matrix.c **** #    endif
 345:quantum/rgb_matrix.c **** #    undef RGB_MATRIX_EFFECT
 346:quantum/rgb_matrix.c **** #endif
 347:quantum/rgb_matrix.c ****             // -----End rgb effect switch case macros-------
 348:quantum/rgb_matrix.c ****             // ---------------------------------------------
 349:quantum/rgb_matrix.c **** 
 350:quantum/rgb_matrix.c ****         // Factory default magic value
 351:quantum/rgb_matrix.c ****         case UINT8_MAX: {
 352:quantum/rgb_matrix.c ****             rgb_matrix_test();
 353:quantum/rgb_matrix.c ****             rgb_task_state = FLUSHING;
 354:quantum/rgb_matrix.c ****         }
 355:quantum/rgb_matrix.c ****             return;
 356:quantum/rgb_matrix.c ****     }
 357:quantum/rgb_matrix.c **** 
 358:quantum/rgb_matrix.c ****     rgb_effect_params.iter++;
 359:quantum/rgb_matrix.c **** 
 360:quantum/rgb_matrix.c ****     // next task
 361:quantum/rgb_matrix.c ****     if (!rendering) {
 362:quantum/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 363:quantum/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 364:quantum/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 365:quantum/rgb_matrix.c ****             rgb_task_state = SYNCING;
 366:quantum/rgb_matrix.c ****         }
 367:quantum/rgb_matrix.c ****     }
 368:quantum/rgb_matrix.c **** }
 369:quantum/rgb_matrix.c **** 
 370:quantum/rgb_matrix.c **** static void rgb_task_flush(uint8_t effect) {
 371:quantum/rgb_matrix.c ****     // update last trackers after the first full render so we can init over several frames
 372:quantum/rgb_matrix.c ****     rgb_last_effect = effect;
 373:quantum/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 374:quantum/rgb_matrix.c **** 
 375:quantum/rgb_matrix.c ****     // update pwm buffers
 376:quantum/rgb_matrix.c ****     rgb_matrix_update_pwm_buffers();
 377:quantum/rgb_matrix.c **** 
 378:quantum/rgb_matrix.c ****     // next task
 379:quantum/rgb_matrix.c ****     rgb_task_state = SYNCING;
 380:quantum/rgb_matrix.c **** }
 381:quantum/rgb_matrix.c **** 
 382:quantum/rgb_matrix.c **** void rgb_matrix_task(void) {
 383:quantum/rgb_matrix.c ****     rgb_task_timers();
 384:quantum/rgb_matrix.c **** 
 385:quantum/rgb_matrix.c ****     // Ideally we would also stop sending zeros to the LED driver PWM buffers
 386:quantum/rgb_matrix.c ****     // while suspended and just do a software shutdown. This is a cheap hack for now.
 387:quantum/rgb_matrix.c ****     bool suspend_backlight =
 388:quantum/rgb_matrix.c **** #if RGB_DISABLE_WHEN_USB_SUSPENDED == true
 389:quantum/rgb_matrix.c ****         g_suspend_state ||
 390:quantum/rgb_matrix.c **** #endif  // RGB_DISABLE_WHEN_USB_SUSPENDED == true
 391:quantum/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 392:quantum/rgb_matrix.c ****         (rgb_anykey_timer > (uint32_t)RGB_DISABLE_TIMEOUT) ||
 393:quantum/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 394:quantum/rgb_matrix.c ****         false;
 395:quantum/rgb_matrix.c **** 
 396:quantum/rgb_matrix.c ****     uint8_t effect = suspend_backlight || !rgb_matrix_config.enable ? 0 : rgb_matrix_config.mode;
 397:quantum/rgb_matrix.c **** 
 398:quantum/rgb_matrix.c ****     switch (rgb_task_state) {
 399:quantum/rgb_matrix.c ****         case STARTING:
 400:quantum/rgb_matrix.c ****             rgb_task_start();
 401:quantum/rgb_matrix.c ****             break;
 402:quantum/rgb_matrix.c ****         case RENDERING:
 403:quantum/rgb_matrix.c ****             rgb_task_render(effect);
 404:quantum/rgb_matrix.c ****             break;
 405:quantum/rgb_matrix.c ****         case FLUSHING:
 406:quantum/rgb_matrix.c ****             rgb_task_flush(effect);
 407:quantum/rgb_matrix.c ****             break;
 408:quantum/rgb_matrix.c ****         case SYNCING:
 409:quantum/rgb_matrix.c ****             rgb_task_sync();
 410:quantum/rgb_matrix.c ****             break;
 411:quantum/rgb_matrix.c ****     }
 412:quantum/rgb_matrix.c **** 
 413:quantum/rgb_matrix.c ****     if (!suspend_backlight) {
 414:quantum/rgb_matrix.c ****         rgb_matrix_indicators();
 415:quantum/rgb_matrix.c ****     }
 416:quantum/rgb_matrix.c **** }
 417:quantum/rgb_matrix.c **** 
 418:quantum/rgb_matrix.c **** void rgb_matrix_indicators(void) {
 419:quantum/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 420:quantum/rgb_matrix.c ****     rgb_matrix_indicators_user();
 421:quantum/rgb_matrix.c **** }
 422:quantum/rgb_matrix.c **** 
 423:quantum/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_kb(void) {}
 6618              		.loc 28 423 59 view -0
 6619              		.cfi_startproc
 6620              		@ args = 0, pretend = 0, frame = 0
 6621              		@ frame_needed = 0, uses_anonymous_args = 0
 6622              		@ link register save eliminated.
 6623              		.loc 28 423 60 view .LVU1595
 6624              		.loc 28 423 1 is_stmt 0 view .LVU1596
 6625 0000 7047     		bx	lr
 6626              		.cfi_endproc
 6627              	.LFE167:
 6629              		.thumb_set rgb_matrix_indicators_kb.localalias.4,rgb_matrix_indicators_kb
 6630              		.section	.text.rgb_matrix_indicators_user,"ax",%progbits
 6631              		.align	1
 6632              		.weak	rgb_matrix_indicators_user
 6633              		.syntax unified
 6634              		.thumb
 6635              		.thumb_func
 6636              		.fpu fpv4-sp-d16
 6638              	rgb_matrix_indicators_user:
 6639              	.LFB205:
 6640              		.cfi_startproc
 6641              		@ args = 0, pretend = 0, frame = 0
 6642              		@ frame_needed = 0, uses_anonymous_args = 0
 6643              		@ link register save eliminated.
 6644 0000 7047     		bx	lr
 6645              		.cfi_endproc
 6646              	.LFE205:
 6648              		.section	.text.rgb_matrix_indicators,"ax",%progbits
 6649              		.align	1
 6650              		.global	rgb_matrix_indicators
 6651              		.syntax unified
 6652              		.thumb
 6653              		.thumb_func
 6654              		.fpu fpv4-sp-d16
 6656              	rgb_matrix_indicators:
 6657              	.LFB166:
 418:quantum/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 6658              		.loc 28 418 34 is_stmt 1 view -0
 6659              		.cfi_startproc
 6660              		@ args = 0, pretend = 0, frame = 0
 6661              		@ frame_needed = 0, uses_anonymous_args = 0
 419:quantum/rgb_matrix.c ****     rgb_matrix_indicators_user();
 6662              		.loc 28 419 5 view .LVU1598
 418:quantum/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 6663              		.loc 28 418 34 is_stmt 0 view .LVU1599
 6664 0000 08B5     		push	{r3, lr}
 6665              		.cfi_def_cfa_offset 8
 6666              		.cfi_offset 3, -8
 6667              		.cfi_offset 14, -4
 419:quantum/rgb_matrix.c ****     rgb_matrix_indicators_user();
 6668              		.loc 28 419 5 view .LVU1600
 6669 0002 FFF7FEFF 		bl	rgb_matrix_indicators_kb
 6670              	.LVL494:
 420:quantum/rgb_matrix.c **** }
 6671              		.loc 28 420 5 is_stmt 1 view .LVU1601
 6672 0006 FFF7FEFF 		bl	rgb_matrix_indicators_user
 6673              	.LVL495:
 421:quantum/rgb_matrix.c **** 
 6674              		.loc 28 421 1 is_stmt 0 view .LVU1602
 6675 000a 08BD     		pop	{r3, pc}
 6676              		.cfi_endproc
 6677              	.LFE166:
 6679              		.section	.text.rgb_matrix_task,"ax",%progbits
 6680              		.align	1
 6681              		.global	rgb_matrix_task
 6682              		.syntax unified
 6683              		.thumb
 6684              		.thumb_func
 6685              		.fpu fpv4-sp-d16
 6687              	rgb_matrix_task:
 6688              	.LFB165:
 382:quantum/rgb_matrix.c ****     rgb_task_timers();
 6689              		.loc 28 382 28 is_stmt 1 view -0
 6690              		.cfi_startproc
 6691              		@ args = 0, pretend = 0, frame = 0
 6692              		@ frame_needed = 0, uses_anonymous_args = 0
 383:quantum/rgb_matrix.c **** 
 6693              		.loc 28 383 5 view .LVU1604
 6694              	.LBB429:
 6695              	.LBI429:
 265:quantum/rgb_matrix.c **** #if defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 6696              		.loc 28 265 13 view .LVU1605
 6697              	.LBB430:
 267:quantum/rgb_matrix.c **** #endif  // defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 6698              		.loc 28 267 5 view .LVU1606
 6699              	.LBE430:
 6700              	.LBE429:
 382:quantum/rgb_matrix.c ****     rgb_task_timers();
 6701              		.loc 28 382 28 is_stmt 0 view .LVU1607
 6702 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6703              		.cfi_def_cfa_offset 24
 6704              		.cfi_offset 3, -24
 6705              		.cfi_offset 4, -20
 6706              		.cfi_offset 5, -16
 6707              		.cfi_offset 6, -12
 6708              		.cfi_offset 7, -8
 6709              		.cfi_offset 14, -4
 6710              	.LBB437:
 6711              	.LBB435:
 267:quantum/rgb_matrix.c **** #endif  // defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 6712              		.loc 28 267 26 view .LVU1608
 6713 0002 954C     		ldr	r4, .L410
 6714 0004 E06A     		ldr	r0, [r4, #44]
 6715 0006 FFF7FEFF 		bl	timer_elapsed32
 6716              	.LVL496:
 6717 000a 0646     		mov	r6, r0
 6718              	.LVL497:
 269:quantum/rgb_matrix.c **** 
 6719              		.loc 28 269 5 is_stmt 1 view .LVU1609
 269:quantum/rgb_matrix.c **** 
 6720              		.loc 28 269 24 is_stmt 0 view .LVU1610
 6721 000c FFF7FEFF 		bl	timer_read32
 6722              	.LVL498:
 284:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < count; ++i) {
 6723              		.loc 28 284 13 view .LVU1611
 6724 0010 94F800E0 		ldrb	lr, [r4]	@ zero_extendqisi2
 269:quantum/rgb_matrix.c **** 
 6725              		.loc 28 269 22 view .LVU1612
 6726 0014 E062     		str	r0, [r4, #44]
 284:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < count; ++i) {
 6727              		.loc 28 284 5 is_stmt 1 view .LVU1613
 6728              	.LVL499:
 285:quantum/rgb_matrix.c ****         if (UINT16_MAX - deltaTime < last_hit_buffer.tick[i]) {
 6729              		.loc 28 285 5 view .LVU1614
 6730              	.LBB431:
 285:quantum/rgb_matrix.c ****         if (UINT16_MAX - deltaTime < last_hit_buffer.tick[i]) {
 6731              		.loc 28 285 10 view .LVU1615
 285:quantum/rgb_matrix.c ****         if (UINT16_MAX - deltaTime < last_hit_buffer.tick[i]) {
 6732              		.loc 28 285 10 is_stmt 0 view .LVU1616
 6733              	.LBE431:
 284:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < count; ++i) {
 6734              		.loc 28 284 13 view .LVU1617
 6735 0016 0022     		movs	r2, #0
 6736              	.LBB432:
 286:quantum/rgb_matrix.c ****             last_hit_buffer.count--;
 6737              		.loc 28 286 24 view .LVU1618
 6738 0018 C6F57F47 		rsb	r7, r6, #65280
 6739              	.LBE432:
 284:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < count; ++i) {
 6740              		.loc 28 284 13 view .LVU1619
 6741 001c 7346     		mov	r3, lr
 6742 001e 9446     		mov	ip, r2
 6743              	.LBB433:
 286:quantum/rgb_matrix.c ****             last_hit_buffer.count--;
 6744              		.loc 28 286 24 view .LVU1620
 6745 0020 FF37     		adds	r7, r7, #255
 6746              	.LVL500:
 6747              	.L343:
 285:quantum/rgb_matrix.c ****         if (UINT16_MAX - deltaTime < last_hit_buffer.tick[i]) {
 6748              		.loc 28 285 5 view .LVU1621
 6749 0022 D1B2     		uxtb	r1, r2
 6750 0024 8E45     		cmp	lr, r1
 6751 0026 13D8     		bhi	.L346
 6752 0028 BCF1000F 		cmp	ip, #0
 6753 002c 00D0     		beq	.L347
 6754 002e 2370     		strb	r3, [r4]
 6755              	.L347:
 6756              	.LVL501:
 285:quantum/rgb_matrix.c ****         if (UINT16_MAX - deltaTime < last_hit_buffer.tick[i]) {
 6757              		.loc 28 285 5 view .LVU1622
 6758              	.LBE433:
 6759              	.LBE435:
 6760              	.LBE437:
 387:quantum/rgb_matrix.c **** #if RGB_DISABLE_WHEN_USB_SUSPENDED == true
 6761              		.loc 28 387 5 is_stmt 1 view .LVU1623
 396:quantum/rgb_matrix.c **** 
 6762              		.loc 28 396 5 view .LVU1624
 396:quantum/rgb_matrix.c **** 
 6763              		.loc 28 396 43 is_stmt 0 view .LVU1625
 6764 0030 8A4B     		ldr	r3, .L410+4
 398:quantum/rgb_matrix.c ****         case STARTING:
 6765              		.loc 28 398 5 view .LVU1626
 6766 0032 8B4C     		ldr	r4, .L410+8
 396:quantum/rgb_matrix.c **** 
 6767              		.loc 28 396 43 view .LVU1627
 6768 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 396:quantum/rgb_matrix.c **** 
 6769              		.loc 28 396 40 view .LVU1628
 6770 0036 12F00305 		ands	r5, r2, #3
 396:quantum/rgb_matrix.c **** 
 6771              		.loc 28 396 13 view .LVU1629
 6772 003a 18BF     		it	ne
 6773 003c 9508     		lsrne	r5, r2, #2
 6774              	.LVL502:
 398:quantum/rgb_matrix.c ****         case STARTING:
 6775              		.loc 28 398 5 is_stmt 1 view .LVU1630
 6776 003e 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 6777 0040 032A     		cmp	r2, #3
 6778 0042 2AD8     		bhi	.L349
 6779 0044 DFE812F0 		tbh	[pc, r2, lsl #1]
 6780              	.L351:
 6781 0048 1700     		.2byte	(.L354-.L351)/2
 6782 004a 2D00     		.2byte	(.L353-.L351)/2
 6783 004c F600     		.2byte	(.L352-.L351)/2
 6784 004e FE00     		.2byte	(.L350-.L351)/2
 6785              	.LVL503:
 6786              		.p2align 1
 6787              	.L346:
 6788              	.LBB438:
 6789              	.LBB436:
 6790              	.LBB434:
 286:quantum/rgb_matrix.c ****             last_hit_buffer.count--;
 6791              		.loc 28 286 9 view .LVU1631
 286:quantum/rgb_matrix.c ****             last_hit_buffer.count--;
 6792              		.loc 28 286 58 is_stmt 0 view .LVU1632
 6793 0050 02F10C01 		add	r1, r2, #12
 6794 0054 04EB4101 		add	r1, r4, r1, lsl #1
 6795 0058 0132     		adds	r2, r2, #1
 6796              	.LVL504:
 286:quantum/rgb_matrix.c ****             last_hit_buffer.count--;
 6797              		.loc 28 286 58 view .LVU1633
 6798 005a B1F80150 		ldrh	r5, [r1, #1]	@ unaligned
 286:quantum/rgb_matrix.c ****             last_hit_buffer.count--;
 6799              		.loc 28 286 12 view .LVU1634
 6800 005e AF42     		cmp	r7, r5
 287:quantum/rgb_matrix.c ****             continue;
 6801              		.loc 28 287 13 is_stmt 1 view .LVU1635
 287:quantum/rgb_matrix.c ****             continue;
 6802              		.loc 28 287 34 is_stmt 0 view .LVU1636
 6803 0060 37BF     		itett	cc
 6804 0062 03F1FF33 		addcc	r3, r3, #-1
 290:quantum/rgb_matrix.c ****     }
 6805              		.loc 28 290 33 view .LVU1637
 6806 0066 AD19     		addcs	r5, r5, r6
 287:quantum/rgb_matrix.c ****             continue;
 6807              		.loc 28 287 34 view .LVU1638
 6808 0068 DBB2     		uxtbcc	r3, r3
 288:quantum/rgb_matrix.c ****         }
 6809              		.loc 28 288 13 is_stmt 1 view .LVU1639
 287:quantum/rgb_matrix.c ****             continue;
 6810              		.loc 28 287 34 is_stmt 0 view .LVU1640
 6811 006a 4FF0010C 		movcc	ip, #1
 290:quantum/rgb_matrix.c ****     }
 6812              		.loc 28 290 9 is_stmt 1 view .LVU1641
 290:quantum/rgb_matrix.c ****     }
 6813              		.loc 28 290 33 is_stmt 0 view .LVU1642
 6814 006e 28BF     		it	cs
 6815 0070 A1F80150 		strhcs	r5, [r1, #1]	@ unaligned
 290:quantum/rgb_matrix.c ****     }
 6816              		.loc 28 290 33 view .LVU1643
 6817 0074 D5E7     		b	.L343
 6818              	.LVL505:
 6819              	.L354:
 290:quantum/rgb_matrix.c ****     }
 6820              		.loc 28 290 33 view .LVU1644
 6821              	.LBE434:
 6822              	.LBE436:
 6823              	.LBE438:
 400:quantum/rgb_matrix.c ****             break;
 6824              		.loc 28 400 13 is_stmt 1 view .LVU1645
 6825              	.LBB439:
 6826              	.LBI439:
 300:quantum/rgb_matrix.c ****     // reset iter
 6827              		.loc 28 300 13 view .LVU1646
 6828              	.LBB440:
 302:quantum/rgb_matrix.c **** 
 6829              		.loc 28 302 5 view .LVU1647
 302:quantum/rgb_matrix.c **** 
 6830              		.loc 28 302 28 is_stmt 0 view .LVU1648
 6831 0076 0023     		movs	r3, #0
 6832 0078 6370     		strb	r3, [r4, #1]
 305:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 6833              		.loc 28 305 5 is_stmt 1 view .LVU1649
 305:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 6834              		.loc 28 305 17 is_stmt 0 view .LVU1650
 6835 007a 7A4B     		ldr	r3, .L410+12
 307:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 6836              		.loc 28 307 24 view .LVU1651
 6837 007c 7A4A     		ldr	r2, .L410+16
 305:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 6838              		.loc 28 305 17 view .LVU1652
 6839 007e 1860     		str	r0, [r3]
 307:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 6840              		.loc 28 307 5 is_stmt 1 view .LVU1653
 307:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 6841              		.loc 28 307 24 is_stmt 0 view .LVU1654
 6842 0080 754B     		ldr	r3, .L410
 6843 0082 03F12801 		add	r1, r3, #40
 6844              	.L355:
 6845 0086 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 6846 008a 42F8040B 		str	r0, [r2], #4	@ unaligned
 6847 008e 8B42     		cmp	r3, r1
 6848 0090 F9D1     		bne	.L355
 6849 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6850 0094 1370     		strb	r3, [r2]
 311:quantum/rgb_matrix.c **** }
 6851              		.loc 28 311 5 is_stmt 1 view .LVU1655
 311:quantum/rgb_matrix.c **** }
 6852              		.loc 28 311 20 is_stmt 0 view .LVU1656
 6853 0096 0123     		movs	r3, #1
 6854              	.L408:
 6855              	.LBE440:
 6856              	.LBE439:
 6857              	.LBB441:
 6858              	.LBB442:
 297:quantum/rgb_matrix.c **** }
 6859              		.loc 28 297 84 view .LVU1657
 6860 0098 2370     		strb	r3, [r4]
 6861              	.L349:
 6862              	.LBE442:
 6863              	.LBE441:
 413:quantum/rgb_matrix.c ****         rgb_matrix_indicators();
 6864              		.loc 28 413 5 is_stmt 1 view .LVU1658
 414:quantum/rgb_matrix.c ****     }
 6865              		.loc 28 414 9 view .LVU1659
 416:quantum/rgb_matrix.c **** 
 6866              		.loc 28 416 1 is_stmt 0 view .LVU1660
 6867 009a BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 6868              		.cfi_remember_state
 6869              		.cfi_restore 14
 6870              		.cfi_restore 7
 6871              		.cfi_restore 6
 6872              		.cfi_restore 5
 6873              		.cfi_restore 4
 6874              		.cfi_restore 3
 6875              		.cfi_def_cfa_offset 0
 6876              	.LVL506:
 414:quantum/rgb_matrix.c ****     }
 6877              		.loc 28 414 9 view .LVU1661
 6878 009e FFF7FEBF 		b	rgb_matrix_indicators
 6879              	.LVL507:
 6880              	.L353:
 6881              		.cfi_restore_state
 403:quantum/rgb_matrix.c ****             break;
 6882              		.loc 28 403 13 is_stmt 1 view .LVU1662
 6883              	.LBB444:
 6884              	.LBI444:
 314:quantum/rgb_matrix.c ****     bool rendering         = false;
 6885              		.loc 28 314 13 view .LVU1663
 6886              	.LBB445:
 315:quantum/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 6887              		.loc 28 315 5 view .LVU1664
 316:quantum/rgb_matrix.c **** 
 6888              		.loc 28 316 5 view .LVU1665
 316:quantum/rgb_matrix.c **** 
 6889              		.loc 28 316 58 is_stmt 0 view .LVU1666
 6890 00a2 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 6891 00a4 AA42     		cmp	r2, r5
 6892 00a6 1ED1     		bne	.L398
 316:quantum/rgb_matrix.c **** 
 6893              		.loc 28 316 79 view .LVU1667
 6894 00a8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 316:quantum/rgb_matrix.c **** 
 6895              		.loc 28 316 87 view .LVU1668
 6896 00aa 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 316:quantum/rgb_matrix.c **** 
 6897              		.loc 28 316 79 view .LVU1669
 6898 00ac 00F00300 		and	r0, r0, #3
 316:quantum/rgb_matrix.c **** 
 6899              		.loc 28 316 58 view .LVU1670
 6900 00b0 C01A     		subs	r0, r0, r3
 6901 00b2 18BF     		it	ne
 6902 00b4 0120     		movne	r0, #1
 6903              	.L356:
 316:quantum/rgb_matrix.c **** 
 6904              		.loc 28 316 58 view .LVU1671
 6905 00b6 E070     		strb	r0, [r4, #3]
 320:quantum/rgb_matrix.c ****         case RGB_MATRIX_NONE:
 6906              		.loc 28 320 5 is_stmt 1 view .LVU1672
 6907 00b8 242D     		cmp	r5, #36
 6908 00ba 1CD8     		bhi	.L399
 6909 00bc DFE805F0 		tbb	[pc, r5]
 6910              	.L359:
 6911 00c0 15       		.byte	(.L395-.L359)/2
 6912 00c1 1D       		.byte	(.L394-.L359)/2
 6913 00c2 2E       		.byte	(.L393-.L359)/2
 6914 00c3 32       		.byte	(.L392-.L359)/2
 6915 00c4 36       		.byte	(.L391-.L359)/2
 6916 00c5 3A       		.byte	(.L390-.L359)/2
 6917 00c6 3E       		.byte	(.L389-.L359)/2
 6918 00c7 42       		.byte	(.L388-.L359)/2
 6919 00c8 46       		.byte	(.L387-.L359)/2
 6920 00c9 4A       		.byte	(.L386-.L359)/2
 6921 00ca 4E       		.byte	(.L385-.L359)/2
 6922 00cb 52       		.byte	(.L384-.L359)/2
 6923 00cc 56       		.byte	(.L383-.L359)/2
 6924 00cd 5A       		.byte	(.L382-.L359)/2
 6925 00ce 5E       		.byte	(.L381-.L359)/2
 6926 00cf 62       		.byte	(.L380-.L359)/2
 6927 00d0 66       		.byte	(.L379-.L359)/2
 6928 00d1 6A       		.byte	(.L378-.L359)/2
 6929 00d2 6E       		.byte	(.L377-.L359)/2
 6930 00d3 72       		.byte	(.L376-.L359)/2
 6931 00d4 76       		.byte	(.L375-.L359)/2
 6932 00d5 7A       		.byte	(.L374-.L359)/2
 6933 00d6 7E       		.byte	(.L373-.L359)/2
 6934 00d7 82       		.byte	(.L372-.L359)/2
 6935 00d8 86       		.byte	(.L371-.L359)/2
 6936 00d9 8A       		.byte	(.L370-.L359)/2
 6937 00da 8E       		.byte	(.L369-.L359)/2
 6938 00db 92       		.byte	(.L368-.L359)/2
 6939 00dc 96       		.byte	(.L367-.L359)/2
 6940 00dd 9A       		.byte	(.L366-.L359)/2
 6941 00de 9E       		.byte	(.L365-.L359)/2
 6942 00df A2       		.byte	(.L364-.L359)/2
 6943 00e0 A6       		.byte	(.L363-.L359)/2
 6944 00e1 AA       		.byte	(.L362-.L359)/2
 6945 00e2 AE       		.byte	(.L361-.L359)/2
 6946 00e3 B2       		.byte	(.L360-.L359)/2
 6947 00e4 B6       		.byte	(.L358-.L359)/2
 6948 00e5 00       		.p2align 1
 6949              	.L398:
 316:quantum/rgb_matrix.c **** 
 6950              		.loc 28 316 58 is_stmt 0 view .LVU1673
 6951 00e6 0120     		movs	r0, #1
 6952 00e8 E5E7     		b	.L356
 6953              	.L395:
 322:quantum/rgb_matrix.c ****             break;
 6954              		.loc 28 322 13 is_stmt 1 view .LVU1674
 6955              	.LBB446:
 6956              	.LBI446:
 256:quantum/rgb_matrix.c ****     if (!params->init) {
 6957              		.loc 28 256 13 view .LVU1675
 6958              	.LVL508:
 6959              	.LBB447:
 257:quantum/rgb_matrix.c ****         return false;
 6960              		.loc 28 257 5 view .LVU1676
 257:quantum/rgb_matrix.c ****         return false;
 6961              		.loc 28 257 8 is_stmt 0 view .LVU1677
 6962 00ea 48B1     		cbz	r0, .L357
 261:quantum/rgb_matrix.c ****     return false;
 6963              		.loc 28 261 5 is_stmt 1 view .LVU1678
 6964 00ec 0022     		movs	r2, #0
 6965 00ee 1146     		mov	r1, r2
 6966 00f0 1046     		mov	r0, r2
 6967 00f2 FFF7FEFF 		bl	rgb_matrix_set_color_all
 6968              	.LVL509:
 262:quantum/rgb_matrix.c **** }
 6969              		.loc 28 262 5 view .LVU1679
 6970              	.L399:
 262:quantum/rgb_matrix.c **** }
 6971              		.loc 28 262 5 is_stmt 0 view .LVU1680
 6972              	.LBE447:
 6973              	.LBE446:
 315:quantum/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 6974              		.loc 28 315 10 view .LVU1681
 6975 00f6 0020     		movs	r0, #0
 6976 00f8 02E0     		b	.L357
 6977              	.L394:
   1:quantum/rgb_matrix_animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6978              		.loc 35 1 1 is_stmt 1 view .LVU1682
 6979 00fa 5C48     		ldr	r0, .L410+20
 6980 00fc FFF7FEFF 		bl	SOLID_COLOR
 6981              	.LVL510:
   1:quantum/rgb_matrix_animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6982              		.loc 35 1 1 view .LVU1683
 6983              	.L357:
 358:quantum/rgb_matrix.c **** 
 6984              		.loc 28 358 5 view .LVU1684
 358:quantum/rgb_matrix.c **** 
 6985              		.loc 28 358 27 is_stmt 0 view .LVU1685
 6986 0100 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 6987 0102 0133     		adds	r3, r3, #1
 6988 0104 6370     		strb	r3, [r4, #1]
 361:quantum/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 6989              		.loc 28 361 5 is_stmt 1 view .LVU1686
 361:quantum/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 6990              		.loc 28 361 8 is_stmt 0 view .LVU1687
 6991 0106 0028     		cmp	r0, #0
 6992 0108 C7D1     		bne	.L349
 6993              	.LVL511:
 362:quantum/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 6994              		.loc 28 362 9 is_stmt 1 view .LVU1688
 362:quantum/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 6995              		.loc 28 362 24 is_stmt 0 view .LVU1689
 6996 010a 0223     		movs	r3, #2
 6997 010c 2370     		strb	r3, [r4]
 363:quantum/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 6998              		.loc 28 363 9 is_stmt 1 view .LVU1690
 363:quantum/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 6999              		.loc 28 363 12 is_stmt 0 view .LVU1691
 7000 010e E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 7001 0110 002B     		cmp	r3, #0
 7002 0112 C2D1     		bne	.L349
 363:quantum/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 7003              		.loc 28 363 37 view .LVU1692
 7004 0114 002D     		cmp	r5, #0
 7005 0116 C0D1     		bne	.L349
 7006              	.LVL512:
 7007              	.L409:
 363:quantum/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 7008              		.loc 28 363 37 view .LVU1693
 7009              	.LBE445:
 7010              	.LBE444:
 7011              	.LBB449:
 7012              	.LBB450:
 379:quantum/rgb_matrix.c **** }
 7013              		.loc 28 379 5 is_stmt 1 view .LVU1694
 379:quantum/rgb_matrix.c **** }
 7014              		.loc 28 379 20 is_stmt 0 view .LVU1695
 7015 0118 0323     		movs	r3, #3
 7016 011a BDE7     		b	.L408
 7017              	.LVL513:
 7018              	.L393:
 379:quantum/rgb_matrix.c **** }
 7019              		.loc 28 379 20 view .LVU1696
 7020              	.LBE450:
 7021              	.LBE449:
 7022              	.LBB452:
 7023              	.LBB448:
   2:quantum/rgb_matrix_animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7024              		.loc 36 2 1 is_stmt 1 view .LVU1697
 7025 011c 5348     		ldr	r0, .L410+20
 7026 011e FFF7FEFF 		bl	ALPHAS_MODS
 7027              	.LVL514:
   2:quantum/rgb_matrix_animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7028              		.loc 36 2 1 view .LVU1698
 7029 0122 EDE7     		b	.L357
 7030              	.LVL515:
 7031              	.L392:
   2:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7032              		.loc 37 2 1 view .LVU1699
 7033 0124 5148     		ldr	r0, .L410+20
 7034 0126 FFF7FEFF 		bl	GRADIENT_UP_DOWN
 7035              	.LVL516:
   2:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7036              		.loc 37 2 1 view .LVU1700
 7037 012a E9E7     		b	.L357
 7038              	.LVL517:
 7039              	.L391:
   2:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7040              		.loc 38 2 1 view .LVU1701
 7041 012c 4F48     		ldr	r0, .L410+20
 7042 012e FFF7FEFF 		bl	GRADIENT_LEFT_RIGHT
 7043              	.LVL518:
   2:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7044              		.loc 38 2 1 view .LVU1702
 7045 0132 E5E7     		b	.L357
 7046              	.LVL519:
 7047              	.L390:
   2:quantum/rgb_matrix_animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7048              		.loc 39 2 1 view .LVU1703
 7049 0134 4D48     		ldr	r0, .L410+20
 7050 0136 FFF7FEFF 		bl	BREATHING
 7051              	.LVL520:
   2:quantum/rgb_matrix_animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7052              		.loc 39 2 1 view .LVU1704
 7053 013a E1E7     		b	.L357
 7054              	.LVL521:
 7055              	.L389:
   2:quantum/rgb_matrix_animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7056              		.loc 3 2 1 view .LVU1705
 7057 013c 4B48     		ldr	r0, .L410+20
 7058 013e FFF7FEFF 		bl	BAND_SAT
 7059              	.LVL522:
   2:quantum/rgb_matrix_animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7060              		.loc 3 2 1 view .LVU1706
 7061 0142 DDE7     		b	.L357
 7062              	.LVL523:
 7063              	.L388:
   2:quantum/rgb_matrix_animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7064              		.loc 5 2 1 view .LVU1707
 7065 0144 4948     		ldr	r0, .L410+20
 7066 0146 FFF7FEFF 		bl	BAND_VAL
 7067              	.LVL524:
   2:quantum/rgb_matrix_animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7068              		.loc 5 2 1 view .LVU1708
 7069 014a D9E7     		b	.L357
 7070              	.LVL525:
 7071              	.L387:
   2:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7072              		.loc 22 2 1 view .LVU1709
 7073 014c 4748     		ldr	r0, .L410+20
 7074 014e FFF7FEFF 		bl	BAND_PINWHEEL_SAT
 7075              	.LVL526:
   2:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7076              		.loc 22 2 1 view .LVU1710
 7077 0152 D5E7     		b	.L357
 7078              	.LVL527:
 7079              	.L386:
   2:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7080              		.loc 23 2 1 view .LVU1711
 7081 0154 4548     		ldr	r0, .L410+20
 7082 0156 FFF7FEFF 		bl	BAND_PINWHEEL_VAL
 7083              	.LVL528:
   2:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7084              		.loc 23 2 1 view .LVU1712
 7085 015a D1E7     		b	.L357
 7086              	.LVL529:
 7087              	.L385:
   2:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7088              		.loc 24 2 1 view .LVU1713
 7089 015c 4348     		ldr	r0, .L410+20
 7090 015e FFF7FEFF 		bl	BAND_SPIRAL_SAT
 7091              	.LVL530:
   2:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7092              		.loc 24 2 1 view .LVU1714
 7093 0162 CDE7     		b	.L357
 7094              	.LVL531:
 7095              	.L384:
   2:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7096              		.loc 25 2 1 view .LVU1715
 7097 0164 4148     		ldr	r0, .L410+20
 7098 0166 FFF7FEFF 		bl	BAND_SPIRAL_VAL
 7099              	.LVL532:
   2:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7100              		.loc 25 2 1 view .LVU1716
 7101 016a C9E7     		b	.L357
 7102              	.LVL533:
 7103              	.L383:
   2:quantum/rgb_matrix_animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7104              		.loc 6 2 1 view .LVU1717
 7105 016c 3F48     		ldr	r0, .L410+20
 7106 016e FFF7FEFF 		bl	CYCLE_ALL
 7107              	.LVL534:
   2:quantum/rgb_matrix_animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7108              		.loc 6 2 1 view .LVU1718
 7109 0172 C5E7     		b	.L357
 7110              	.LVL535:
 7111              	.L382:
   2:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7112              		.loc 7 2 1 view .LVU1719
 7113 0174 3D48     		ldr	r0, .L410+20
 7114 0176 FFF7FEFF 		bl	CYCLE_LEFT_RIGHT
 7115              	.LVL536:
   2:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7116              		.loc 7 2 1 view .LVU1720
 7117 017a C1E7     		b	.L357
 7118              	.LVL537:
 7119              	.L381:
   2:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7120              		.loc 8 2 1 view .LVU1721
 7121 017c 3B48     		ldr	r0, .L410+20
 7122 017e FFF7FEFF 		bl	CYCLE_UP_DOWN
 7123              	.LVL538:
   2:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7124              		.loc 8 2 1 view .LVU1722
 7125 0182 BDE7     		b	.L357
 7126              	.LVL539:
 7127              	.L380:
   2:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7128              		.loc 9 2 1 view .LVU1723
 7129 0184 3948     		ldr	r0, .L410+20
 7130 0186 FFF7FEFF 		bl	RAINBOW_MOVING_CHEVRON
 7131              	.LVL540:
   2:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7132              		.loc 9 2 1 view .LVU1724
 7133 018a B9E7     		b	.L357
 7134              	.LVL541:
 7135              	.L379:
   2:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7136              		.loc 10 2 1 view .LVU1725
 7137 018c 3748     		ldr	r0, .L410+20
 7138 018e FFF7FEFF 		bl	CYCLE_OUT_IN
 7139              	.LVL542:
   2:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7140              		.loc 10 2 1 view .LVU1726
 7141 0192 B5E7     		b	.L357
 7142              	.LVL543:
 7143              	.L378:
   2:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7144              		.loc 11 2 1 view .LVU1727
 7145 0194 3548     		ldr	r0, .L410+20
 7146 0196 FFF7FEFF 		bl	CYCLE_OUT_IN_DUAL
 7147              	.LVL544:
   2:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7148              		.loc 11 2 1 view .LVU1728
 7149 019a B1E7     		b	.L357
 7150              	.LVL545:
 7151              	.L377:
   2:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7152              		.loc 26 2 1 view .LVU1729
 7153 019c 3348     		ldr	r0, .L410+20
 7154 019e FFF7FEFF 		bl	CYCLE_PINWHEEL
 7155              	.LVL546:
   2:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7156              		.loc 26 2 1 view .LVU1730
 7157 01a2 ADE7     		b	.L357
 7158              	.LVL547:
 7159              	.L376:
   2:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7160              		.loc 27 2 1 view .LVU1731
 7161 01a4 3148     		ldr	r0, .L410+20
 7162 01a6 FFF7FEFF 		bl	CYCLE_SPIRAL
 7163              	.LVL548:
   2:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7164              		.loc 27 2 1 view .LVU1732
 7165 01aa A9E7     		b	.L357
 7166              	.LVL549:
 7167              	.L375:
   2:quantum/rgb_matrix_animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7168              		.loc 12 2 1 view .LVU1733
 7169 01ac 2F48     		ldr	r0, .L410+20
 7170 01ae FFF7FEFF 		bl	DUAL_BEACON
 7171              	.LVL550:
   2:quantum/rgb_matrix_animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7172              		.loc 12 2 1 view .LVU1734
 7173 01b2 A5E7     		b	.L357
 7174              	.LVL551:
 7175              	.L374:
   2:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7176              		.loc 13 2 1 view .LVU1735
 7177 01b4 2D48     		ldr	r0, .L410+20
 7178 01b6 FFF7FEFF 		bl	RAINBOW_BEACON
 7179              	.LVL552:
   2:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7180              		.loc 13 2 1 view .LVU1736
 7181 01ba A1E7     		b	.L357
 7182              	.LVL553:
 7183              	.L373:
   2:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7184              		.loc 14 2 1 view .LVU1737
 7185 01bc 2B48     		ldr	r0, .L410+20
 7186 01be FFF7FEFF 		bl	RAINBOW_PINWHEELS
 7187              	.LVL554:
   2:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7188              		.loc 14 2 1 view .LVU1738
 7189 01c2 9DE7     		b	.L357
 7190              	.LVL555:
 7191              	.L372:
   2:quantum/rgb_matrix_animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7192              		.loc 40 2 1 view .LVU1739
 7193 01c4 2948     		ldr	r0, .L410+20
 7194 01c6 FFF7FEFF 		bl	RAINDROPS
 7195              	.LVL556:
   2:quantum/rgb_matrix_animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7196              		.loc 40 2 1 view .LVU1740
 7197 01ca 99E7     		b	.L357
 7198              	.LVL557:
 7199              	.L371:
   2:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7200              		.loc 41 2 1 view .LVU1741
 7201 01cc 2748     		ldr	r0, .L410+20
 7202 01ce FFF7FEFF 		bl	JELLYBEAN_RAINDROPS
 7203              	.LVL558:
   2:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7204              		.loc 41 2 1 view .LVU1742
 7205 01d2 95E7     		b	.L357
 7206              	.LVL559:
 7207              	.L370:
   3:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7208              		.loc 15 3 1 view .LVU1743
 7209 01d4 2548     		ldr	r0, .L410+20
 7210 01d6 FFF7FEFF 		bl	SOLID_REACTIVE_SIMPLE
 7211              	.LVL560:
   3:quantum/rgb_matrix_animations/solid_reactive_simple_anim.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7212              		.loc 15 3 1 view .LVU1744
 7213 01da 91E7     		b	.L357
 7214              	.LVL561:
 7215              	.L369:
   3:quantum/rgb_matrix_animations/solid_reactive_anim.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7216              		.loc 16 3 1 view .LVU1745
 7217 01dc 2348     		ldr	r0, .L410+20
 7218 01de FFF7FEFF 		bl	SOLID_REACTIVE
 7219              	.LVL562:
   3:quantum/rgb_matrix_animations/solid_reactive_anim.h **** #        ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 7220              		.loc 16 3 1 view .LVU1746
 7221 01e2 8DE7     		b	.L357
 7222              	.LVL563:
 7223              	.L368:
   5:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #        endif
 7224              		.loc 17 5 1 view .LVU1747
 7225 01e4 2148     		ldr	r0, .L410+20
 7226 01e6 FFF7FEFF 		bl	SOLID_REACTIVE_WIDE
 7227              	.LVL564:
   5:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #        endif
 7228              		.loc 17 5 1 view .LVU1748
 7229 01ea 89E7     		b	.L357
 7230              	.LVL565:
 7231              	.L367:
   9:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #        endif
 7232              		.loc 17 9 1 view .LVU1749
 7233 01ec 1F48     		ldr	r0, .L410+20
 7234 01ee FFF7FEFF 		bl	SOLID_REACTIVE_MULTIWIDE
 7235              	.LVL566:
   9:quantum/rgb_matrix_animations/solid_reactive_wide.h **** #        endif
 7236              		.loc 17 9 1 view .LVU1750
 7237 01f2 85E7     		b	.L357
 7238              	.LVL567:
 7239              	.L366:
   5:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #        endif
 7240              		.loc 18 5 1 view .LVU1751
 7241 01f4 1D48     		ldr	r0, .L410+20
 7242 01f6 FFF7FEFF 		bl	SOLID_REACTIVE_CROSS
 7243              	.LVL568:
   5:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #        endif
 7244              		.loc 18 5 1 view .LVU1752
 7245 01fa 81E7     		b	.L357
 7246              	.LVL569:
 7247              	.L365:
   9:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #        endif
 7248              		.loc 18 9 1 view .LVU1753
 7249 01fc 1B48     		ldr	r0, .L410+20
 7250 01fe FFF7FEFF 		bl	SOLID_REACTIVE_MULTICROSS
 7251              	.LVL570:
   9:quantum/rgb_matrix_animations/solid_reactive_cross.h **** #        endif
 7252              		.loc 18 9 1 view .LVU1754
 7253 0202 7DE7     		b	.L357
 7254              	.LVL571:
 7255              	.L364:
   5:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #        endif
 7256              		.loc 19 5 1 view .LVU1755
 7257 0204 1948     		ldr	r0, .L410+20
 7258 0206 FFF7FEFF 		bl	SOLID_REACTIVE_NEXUS
 7259              	.LVL572:
   5:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #        endif
 7260              		.loc 19 5 1 view .LVU1756
 7261 020a 79E7     		b	.L357
 7262              	.LVL573:
 7263              	.L363:
   9:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #        endif
 7264              		.loc 19 9 1 view .LVU1757
 7265 020c 1748     		ldr	r0, .L410+20
 7266 020e FFF7FEFF 		bl	SOLID_REACTIVE_MULTINEXUS
 7267              	.LVL574:
   9:quantum/rgb_matrix_animations/solid_reactive_nexus.h **** #        endif
 7268              		.loc 19 9 1 view .LVU1758
 7269 0212 75E7     		b	.L357
 7270              	.LVL575:
 7271              	.L362:
   5:quantum/rgb_matrix_animations/splash_anim.h **** #        endif
 7272              		.loc 20 5 1 view .LVU1759
 7273 0214 1548     		ldr	r0, .L410+20
 7274 0216 FFF7FEFF 		bl	SPLASH
 7275              	.LVL576:
   5:quantum/rgb_matrix_animations/splash_anim.h **** #        endif
 7276              		.loc 20 5 1 view .LVU1760
 7277 021a 71E7     		b	.L357
 7278              	.LVL577:
 7279              	.L361:
   9:quantum/rgb_matrix_animations/splash_anim.h **** #        endif
 7280              		.loc 20 9 1 view .LVU1761
 7281 021c 1348     		ldr	r0, .L410+20
 7282 021e FFF7FEFF 		bl	MULTISPLASH
 7283              	.LVL578:
   9:quantum/rgb_matrix_animations/splash_anim.h **** #        endif
 7284              		.loc 20 9 1 view .LVU1762
 7285 0222 6DE7     		b	.L357
 7286              	.LVL579:
 7287              	.L360:
   5:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        endif
 7288              		.loc 21 5 1 view .LVU1763
 7289 0224 1148     		ldr	r0, .L410+20
 7290 0226 FFF7FEFF 		bl	SOLID_SPLASH
 7291              	.LVL580:
   5:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        endif
 7292              		.loc 21 5 1 view .LVU1764
 7293 022a 69E7     		b	.L357
 7294              	.LVL581:
 7295              	.L358:
   9:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        endif
 7296              		.loc 21 9 1 view .LVU1765
 7297 022c 0F48     		ldr	r0, .L410+20
 7298 022e FFF7FEFF 		bl	SOLID_MULTISPLASH
 7299              	.LVL582:
   9:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        endif
 7300              		.loc 21 9 1 view .LVU1766
 7301 0232 65E7     		b	.L357
 7302              	.LVL583:
 7303              	.L352:
   9:quantum/rgb_matrix_animations/solid_splash_anim.h **** #        endif
 7304              		.loc 21 9 1 is_stmt 0 view .LVU1767
 7305              	.LBE448:
 7306              	.LBE452:
 406:quantum/rgb_matrix.c ****             break;
 7307              		.loc 28 406 13 is_stmt 1 view .LVU1768
 7308              	.LBB453:
 7309              	.LBI449:
 370:quantum/rgb_matrix.c ****     // update last trackers after the first full render so we can init over several frames
 7310              		.loc 28 370 13 view .LVU1769
 7311              	.LBB451:
 372:quantum/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 7312              		.loc 28 372 5 view .LVU1770
 373:quantum/rgb_matrix.c **** 
 7313              		.loc 28 373 40 is_stmt 0 view .LVU1771
 7314 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 372:quantum/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 7315              		.loc 28 372 21 view .LVU1772
 7316 0236 2571     		strb	r5, [r4, #4]
 373:quantum/rgb_matrix.c **** 
 7317              		.loc 28 373 5 is_stmt 1 view .LVU1773
 373:quantum/rgb_matrix.c **** 
 7318              		.loc 28 373 40 is_stmt 0 view .LVU1774
 7319 0238 C3F30103 		ubfx	r3, r3, #0, #2
 373:quantum/rgb_matrix.c **** 
 7320              		.loc 28 373 21 view .LVU1775
 7321 023c 6371     		strb	r3, [r4, #5]
 376:quantum/rgb_matrix.c **** 
 7322              		.loc 28 376 5 is_stmt 1 view .LVU1776
 7323 023e FFF7FEFF 		bl	rgb_matrix_update_pwm_buffers
 7324              	.LVL584:
 7325 0242 69E7     		b	.L409
 7326              	.LVL585:
 7327              	.L350:
 376:quantum/rgb_matrix.c **** 
 7328              		.loc 28 376 5 is_stmt 0 view .LVU1777
 7329              	.LBE451:
 7330              	.LBE453:
 409:quantum/rgb_matrix.c ****             break;
 7331              		.loc 28 409 13 is_stmt 1 view .LVU1778
 7332              	.LBB454:
 7333              	.LBI441:
 295:quantum/rgb_matrix.c ****     // next task
 7334              		.loc 28 295 13 view .LVU1779
 7335              	.LBB443:
 297:quantum/rgb_matrix.c **** }
 7336              		.loc 28 297 5 view .LVU1780
 297:quantum/rgb_matrix.c **** }
 7337              		.loc 28 297 9 is_stmt 0 view .LVU1781
 7338 0244 074B     		ldr	r3, .L410+12
 7339 0246 1868     		ldr	r0, [r3]
 7340 0248 FFF7FEFF 		bl	timer_elapsed32
 7341              	.LVL586:
 297:quantum/rgb_matrix.c **** }
 7342              		.loc 28 297 8 view .LVU1782
 7343 024c 0928     		cmp	r0, #9
 7344 024e 7FF624AF 		bls	.L349
 297:quantum/rgb_matrix.c **** }
 7345              		.loc 28 297 69 is_stmt 1 view .LVU1783
 297:quantum/rgb_matrix.c **** }
 7346              		.loc 28 297 84 is_stmt 0 view .LVU1784
 7347 0252 0023     		movs	r3, #0
 7348 0254 20E7     		b	.L408
 7349              	.L411:
 7350 0256 00BF     		.align	2
 7351              	.L410:
 7352 0258 00000000 		.word	.LANCHOR1
 7353 025c 00000000 		.word	rgb_matrix_config
 7354 0260 00000000 		.word	.LANCHOR2
 7355 0264 00000000 		.word	g_rgb_timer
 7356 0268 00000000 		.word	g_last_hit_tracker
 7357 026c 01000000 		.word	.LANCHOR2+1
 7358              	.LBE443:
 7359              	.LBE454:
 7360              		.cfi_endproc
 7361              	.LFE165:
 7363              		.section	.text.rgb_matrix_init,"ax",%progbits
 7364              		.align	1
 7365              		.global	rgb_matrix_init
 7366              		.syntax unified
 7367              		.thumb
 7368              		.thumb_func
 7369              		.fpu fpv4-sp-d16
 7371              	rgb_matrix_init:
 7372              	.LFB169:
 424:quantum/rgb_matrix.c **** 
 425:quantum/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_user(void) {}
 426:quantum/rgb_matrix.c **** 
 427:quantum/rgb_matrix.c **** void rgb_matrix_init(void) {
 7373              		.loc 28 427 28 is_stmt 1 view -0
 7374              		.cfi_startproc
 7375              		@ args = 0, pretend = 0, frame = 0
 7376              		@ frame_needed = 0, uses_anonymous_args = 0
 428:quantum/rgb_matrix.c ****     rgb_matrix_driver.init();
 7377              		.loc 28 428 5 view .LVU1786
 427:quantum/rgb_matrix.c ****     rgb_matrix_driver.init();
 7378              		.loc 28 427 28 is_stmt 0 view .LVU1787
 7379 0000 08B5     		push	{r3, lr}
 7380              		.cfi_def_cfa_offset 8
 7381              		.cfi_offset 3, -8
 7382              		.cfi_offset 14, -4
 7383              		.loc 28 428 22 view .LVU1788
 7384 0002 274B     		ldr	r3, .L415
 7385              		.loc 28 428 5 view .LVU1789
 7386 0004 1B68     		ldr	r3, [r3]
 7387 0006 9847     		blx	r3
 7388              	.LVL587:
 429:quantum/rgb_matrix.c **** 
 430:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 431:quantum/rgb_matrix.c ****     g_last_hit_tracker.count = 0;
 7389              		.loc 28 431 5 is_stmt 1 view .LVU1790
 7390              		.loc 28 431 30 is_stmt 0 view .LVU1791
 7391 0008 264A     		ldr	r2, .L415+4
 7392              	.LBB455:
 432:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 433:quantum/rgb_matrix.c ****         g_last_hit_tracker.tick[i] = UINT16_MAX;
 7393              		.loc 28 433 36 view .LVU1792
 7394 000a 4FF0FF33 		mov	r3, #-1
 7395              	.LBE455:
 431:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 7396              		.loc 28 431 30 view .LVU1793
 7397 000e 0021     		movs	r1, #0
 7398 0010 1170     		strb	r1, [r2]
 432:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 7399              		.loc 28 432 5 is_stmt 1 view .LVU1794
 7400              	.LBB456:
 432:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 7401              		.loc 28 432 10 view .LVU1795
 7402              	.LVL588:
 7403              		.loc 28 433 9 view .LVU1796
 7404              		.loc 28 433 36 is_stmt 0 view .LVU1797
 7405 0012 5376     		strb	r3, [r2, #25]
 7406 0014 9376     		strb	r3, [r2, #26]
 7407              	.LVL589:
 7408              		.loc 28 433 9 is_stmt 1 view .LVU1798
 7409              		.loc 28 433 36 is_stmt 0 view .LVU1799
 7410 0016 D376     		strb	r3, [r2, #27]
 7411 0018 1377     		strb	r3, [r2, #28]
 7412              	.LVL590:
 7413              		.loc 28 433 9 is_stmt 1 view .LVU1800
 7414              		.loc 28 433 36 is_stmt 0 view .LVU1801
 7415 001a 5377     		strb	r3, [r2, #29]
 7416 001c 9377     		strb	r3, [r2, #30]
 7417              	.LVL591:
 7418              		.loc 28 433 9 is_stmt 1 view .LVU1802
 7419              		.loc 28 433 36 is_stmt 0 view .LVU1803
 7420 001e D377     		strb	r3, [r2, #31]
 7421 0020 82F82030 		strb	r3, [r2, #32]
 7422              	.LVL592:
 7423              		.loc 28 433 9 is_stmt 1 view .LVU1804
 7424              		.loc 28 433 36 is_stmt 0 view .LVU1805
 7425 0024 82F82130 		strb	r3, [r2, #33]
 7426 0028 82F82230 		strb	r3, [r2, #34]
 7427              	.LVL593:
 7428              		.loc 28 433 9 is_stmt 1 view .LVU1806
 7429              		.loc 28 433 36 is_stmt 0 view .LVU1807
 7430 002c 82F82330 		strb	r3, [r2, #35]
 7431 0030 82F82430 		strb	r3, [r2, #36]
 7432              	.LVL594:
 7433              		.loc 28 433 9 is_stmt 1 view .LVU1808
 7434              		.loc 28 433 36 is_stmt 0 view .LVU1809
 7435 0034 82F82530 		strb	r3, [r2, #37]
 7436 0038 82F82630 		strb	r3, [r2, #38]
 7437              	.LVL595:
 7438              		.loc 28 433 9 is_stmt 1 view .LVU1810
 7439              		.loc 28 433 36 is_stmt 0 view .LVU1811
 7440 003c 82F82730 		strb	r3, [r2, #39]
 7441 0040 82F82830 		strb	r3, [r2, #40]
 7442              	.LVL596:
 7443              		.loc 28 433 36 view .LVU1812
 7444              	.LBE456:
 434:quantum/rgb_matrix.c ****     }
 435:quantum/rgb_matrix.c **** 
 436:quantum/rgb_matrix.c ****     last_hit_buffer.count = 0;
 7445              		.loc 28 436 5 is_stmt 1 view .LVU1813
 7446              		.loc 28 436 27 is_stmt 0 view .LVU1814
 7447 0044 184A     		ldr	r2, .L415+8
 7448 0046 1170     		strb	r1, [r2]
 437:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 7449              		.loc 28 437 5 is_stmt 1 view .LVU1815
 7450              	.LBB457:
 7451              		.loc 28 437 10 view .LVU1816
 7452              	.LVL597:
 438:quantum/rgb_matrix.c ****         last_hit_buffer.tick[i] = UINT16_MAX;
 7453              		.loc 28 438 9 view .LVU1817
 7454              		.loc 28 438 33 is_stmt 0 view .LVU1818
 7455 0048 5376     		strb	r3, [r2, #25]
 7456 004a 9376     		strb	r3, [r2, #26]
 7457              	.LVL598:
 7458              		.loc 28 438 9 is_stmt 1 view .LVU1819
 7459              		.loc 28 438 33 is_stmt 0 view .LVU1820
 7460 004c D376     		strb	r3, [r2, #27]
 7461 004e 1377     		strb	r3, [r2, #28]
 7462              	.LVL599:
 7463              		.loc 28 438 9 is_stmt 1 view .LVU1821
 7464              		.loc 28 438 33 is_stmt 0 view .LVU1822
 7465 0050 5377     		strb	r3, [r2, #29]
 7466 0052 9377     		strb	r3, [r2, #30]
 7467              	.LVL600:
 7468              		.loc 28 438 9 is_stmt 1 view .LVU1823
 7469              		.loc 28 438 33 is_stmt 0 view .LVU1824
 7470 0054 D377     		strb	r3, [r2, #31]
 7471 0056 82F82030 		strb	r3, [r2, #32]
 7472              	.LVL601:
 7473              		.loc 28 438 9 is_stmt 1 view .LVU1825
 7474              		.loc 28 438 33 is_stmt 0 view .LVU1826
 7475 005a 82F82130 		strb	r3, [r2, #33]
 7476 005e 82F82230 		strb	r3, [r2, #34]
 7477              	.LVL602:
 7478              		.loc 28 438 9 is_stmt 1 view .LVU1827
 7479              		.loc 28 438 33 is_stmt 0 view .LVU1828
 7480 0062 82F82330 		strb	r3, [r2, #35]
 7481 0066 82F82430 		strb	r3, [r2, #36]
 7482              	.LVL603:
 7483              		.loc 28 438 9 is_stmt 1 view .LVU1829
 7484              		.loc 28 438 33 is_stmt 0 view .LVU1830
 7485 006a 82F82530 		strb	r3, [r2, #37]
 7486 006e 82F82630 		strb	r3, [r2, #38]
 7487              	.LVL604:
 7488              		.loc 28 438 9 is_stmt 1 view .LVU1831
 7489              		.loc 28 438 33 is_stmt 0 view .LVU1832
 7490 0072 82F82730 		strb	r3, [r2, #39]
 7491 0076 82F82830 		strb	r3, [r2, #40]
 7492              	.LVL605:
 7493              		.loc 28 438 33 view .LVU1833
 7494              	.LBE457:
 439:quantum/rgb_matrix.c ****     }
 440:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 441:quantum/rgb_matrix.c **** 
 442:quantum/rgb_matrix.c ****     if (!eeconfig_is_enabled()) {
 7495              		.loc 28 442 5 is_stmt 1 view .LVU1834
 7496              		.loc 28 442 10 is_stmt 0 view .LVU1835
 7497 007a FFF7FEFF 		bl	eeconfig_is_enabled
 7498              	.LVL606:
 7499              		.loc 28 442 8 view .LVU1836
 7500 007e 18B9     		cbnz	r0, .L413
 443:quantum/rgb_matrix.c ****         dprintf("rgb_matrix_init_drivers eeconfig is not enabled.\n");
 7501              		.loc 28 443 70 is_stmt 1 view .LVU1837
 444:quantum/rgb_matrix.c ****         eeconfig_init();
 7502              		.loc 28 444 9 view .LVU1838
 7503 0080 FFF7FEFF 		bl	eeconfig_init
 7504              	.LVL607:
 445:quantum/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 7505              		.loc 28 445 9 view .LVU1839
 7506 0084 FFF7FEFF 		bl	eeconfig_update_rgb_matrix_default
 7507              	.LVL608:
 7508              	.L413:
 446:quantum/rgb_matrix.c ****     }
 447:quantum/rgb_matrix.c **** 
 448:quantum/rgb_matrix.c ****     eeconfig_read_rgb_matrix();
 7509              		.loc 28 448 5 view .LVU1840
 7510 0088 FFF7FEFF 		bl	eeconfig_read_rgb_matrix
 7511              	.LVL609:
 449:quantum/rgb_matrix.c ****     if (!rgb_matrix_config.mode) {
 7512              		.loc 28 449 5 view .LVU1841
 7513              		.loc 28 449 9 is_stmt 0 view .LVU1842
 7514 008c 074B     		ldr	r3, .L415+12
 7515 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7516              		.loc 28 449 8 view .LVU1843
 7517 0090 13F0FC0F 		tst	r3, #252
 7518 0094 03D1     		bne	.L412
 450:quantum/rgb_matrix.c ****         dprintf("rgb_matrix_init_drivers rgb_matrix_config.mode = 0. Write default values to EEPROM
 7519              		.loc 28 450 105 is_stmt 1 view .LVU1844
 451:quantum/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 7520              		.loc 28 451 9 view .LVU1845
 452:quantum/rgb_matrix.c ****     }
 453:quantum/rgb_matrix.c ****     eeconfig_debug_rgb_matrix();  // display current eeprom values
 454:quantum/rgb_matrix.c **** }
 7521              		.loc 28 454 1 is_stmt 0 view .LVU1846
 7522 0096 BDE80840 		pop	{r3, lr}
 7523              		.cfi_remember_state
 7524              		.cfi_restore 14
 7525              		.cfi_restore 3
 7526              		.cfi_def_cfa_offset 0
 451:quantum/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 7527              		.loc 28 451 9 view .LVU1847
 7528 009a FFF7FEBF 		b	eeconfig_update_rgb_matrix_default
 7529              	.LVL610:
 7530              	.L412:
 7531              		.cfi_restore_state
 7532              		.loc 28 454 1 view .LVU1848
 7533 009e 08BD     		pop	{r3, pc}
 7534              	.L416:
 7535              		.align	2
 7536              	.L415:
 7537 00a0 00000000 		.word	rgb_matrix_driver
 7538 00a4 00000000 		.word	g_last_hit_tracker
 7539 00a8 00000000 		.word	.LANCHOR1
 7540 00ac 00000000 		.word	rgb_matrix_config
 7541              		.cfi_endproc
 7542              	.LFE169:
 7544              		.section	.text.rgb_matrix_set_suspend_state,"ax",%progbits
 7545              		.align	1
 7546              		.global	rgb_matrix_set_suspend_state
 7547              		.syntax unified
 7548              		.thumb
 7549              		.thumb_func
 7550              		.fpu fpv4-sp-d16
 7552              	rgb_matrix_set_suspend_state:
 7553              	.LVL611:
 7554              	.LFB170:
 455:quantum/rgb_matrix.c **** 
 456:quantum/rgb_matrix.c **** void rgb_matrix_set_suspend_state(bool state) {
 7555              		.loc 28 456 47 is_stmt 1 view -0
 7556              		.cfi_startproc
 7557              		@ args = 0, pretend = 0, frame = 0
 7558              		@ frame_needed = 0, uses_anonymous_args = 0
 7559              		@ link register save eliminated.
 457:quantum/rgb_matrix.c ****     if (RGB_DISABLE_WHEN_USB_SUSPENDED && state) {
 7560              		.loc 28 457 5 view .LVU1850
 458:quantum/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);  // turn off all LEDs when suspending
 459:quantum/rgb_matrix.c ****     }
 460:quantum/rgb_matrix.c ****     g_suspend_state = state;
 7561              		.loc 28 460 5 view .LVU1851
 7562              		.loc 28 460 21 is_stmt 0 view .LVU1852
 7563 0000 014B     		ldr	r3, .L418
 7564 0002 83F83000 		strb	r0, [r3, #48]
 461:quantum/rgb_matrix.c **** }
 7565              		.loc 28 461 1 view .LVU1853
 7566 0006 7047     		bx	lr
 7567              	.L419:
 7568              		.align	2
 7569              	.L418:
 7570 0008 00000000 		.word	.LANCHOR1
 7571              		.cfi_endproc
 7572              	.LFE170:
 7574              		.section	.text.rgb_matrix_get_suspend_state,"ax",%progbits
 7575              		.align	1
 7576              		.global	rgb_matrix_get_suspend_state
 7577              		.syntax unified
 7578              		.thumb
 7579              		.thumb_func
 7580              		.fpu fpv4-sp-d16
 7582              	rgb_matrix_get_suspend_state:
 7583              	.LFB171:
 462:quantum/rgb_matrix.c **** 
 463:quantum/rgb_matrix.c **** bool rgb_matrix_get_suspend_state(void) { return g_suspend_state; }
 7584              		.loc 28 463 41 is_stmt 1 view -0
 7585              		.cfi_startproc
 7586              		@ args = 0, pretend = 0, frame = 0
 7587              		@ frame_needed = 0, uses_anonymous_args = 0
 7588              		@ link register save eliminated.
 7589              		.loc 28 463 43 view .LVU1855
 7590              		.loc 28 463 1 is_stmt 0 view .LVU1856
 7591 0000 014B     		ldr	r3, .L421
 7592 0002 93F83000 		ldrb	r0, [r3, #48]	@ zero_extendqisi2
 7593 0006 7047     		bx	lr
 7594              	.L422:
 7595              		.align	2
 7596              	.L421:
 7597 0008 00000000 		.word	.LANCHOR1
 7598              		.cfi_endproc
 7599              	.LFE171:
 7601              		.section	.text.rgb_matrix_toggle,"ax",%progbits
 7602              		.align	1
 7603              		.global	rgb_matrix_toggle
 7604              		.syntax unified
 7605              		.thumb
 7606              		.thumb_func
 7607              		.fpu fpv4-sp-d16
 7609              	rgb_matrix_toggle:
 7610              	.LFB172:
 464:quantum/rgb_matrix.c **** 
 465:quantum/rgb_matrix.c **** void rgb_matrix_toggle(void) {
 7611              		.loc 28 465 30 is_stmt 1 view -0
 7612              		.cfi_startproc
 7613              		@ args = 0, pretend = 0, frame = 0
 7614              		@ frame_needed = 0, uses_anonymous_args = 0
 7615              		@ link register save eliminated.
 466:quantum/rgb_matrix.c ****     rgb_matrix_config.enable ^= 1;
 7616              		.loc 28 466 5 view .LVU1858
 7617              		.loc 28 466 30 is_stmt 0 view .LVU1859
 7618 0000 044A     		ldr	r2, .L424
 7619 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7620 0004 83F00103 		eor	r3, r3, #1
 7621 0008 1370     		strb	r3, [r2]
 467:quantum/rgb_matrix.c ****     rgb_task_state = STARTING;
 7622              		.loc 28 467 5 is_stmt 1 view .LVU1860
 7623              		.loc 28 467 20 is_stmt 0 view .LVU1861
 7624 000a 034B     		ldr	r3, .L424+4
 7625 000c 0022     		movs	r2, #0
 7626 000e 1A70     		strb	r2, [r3]
 468:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 7627              		.loc 28 468 5 is_stmt 1 view .LVU1862
 7628 0010 FFF7FEBF 		b	eeconfig_update_rgb_matrix
 7629              	.LVL612:
 7630              	.L425:
 7631              		.align	2
 7632              	.L424:
 7633 0014 00000000 		.word	rgb_matrix_config
 7634 0018 00000000 		.word	.LANCHOR2
 7635              		.cfi_endproc
 7636              	.LFE172:
 7638              		.section	.text.rgb_matrix_enable_noeeprom,"ax",%progbits
 7639              		.align	1
 7640              		.global	rgb_matrix_enable_noeeprom
 7641              		.syntax unified
 7642              		.thumb
 7643              		.thumb_func
 7644              		.fpu fpv4-sp-d16
 7646              	rgb_matrix_enable_noeeprom:
 7647              	.LFB174:
 469:quantum/rgb_matrix.c **** }
 470:quantum/rgb_matrix.c **** 
 471:quantum/rgb_matrix.c **** void rgb_matrix_enable(void) {
 472:quantum/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 473:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 474:quantum/rgb_matrix.c **** }
 475:quantum/rgb_matrix.c **** 
 476:quantum/rgb_matrix.c **** void rgb_matrix_enable_noeeprom(void) {
 7648              		.loc 28 476 39 view -0
 7649              		.cfi_startproc
 7650              		@ args = 0, pretend = 0, frame = 0
 7651              		@ frame_needed = 0, uses_anonymous_args = 0
 7652              		@ link register save eliminated.
 477:quantum/rgb_matrix.c ****     if (!rgb_matrix_config.enable) rgb_task_state = STARTING;
 7653              		.loc 28 477 5 view .LVU1864
 7654              		.loc 28 477 9 is_stmt 0 view .LVU1865
 7655 0000 064B     		ldr	r3, .L428
 7656 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7657              		.loc 28 477 8 view .LVU1866
 7658 0004 12F00302 		ands	r2, r2, #3
 7659              		.loc 28 477 36 is_stmt 1 view .LVU1867
 7660              		.loc 28 477 51 is_stmt 0 view .LVU1868
 7661 0008 04BF     		itt	eq
 7662 000a 0549     		ldreq	r1, .L428+4
 7663 000c 0A70     		strbeq	r2, [r1]
 478:quantum/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 7664              		.loc 28 478 5 is_stmt 1 view .LVU1869
 7665              		.loc 28 478 30 is_stmt 0 view .LVU1870
 7666 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7667 0010 0121     		movs	r1, #1
 7668 0012 61F30102 		bfi	r2, r1, #0, #2
 7669 0016 1A70     		strb	r2, [r3]
 479:quantum/rgb_matrix.c **** }
 7670              		.loc 28 479 1 view .LVU1871
 7671 0018 7047     		bx	lr
 7672              	.L429:
 7673 001a 00BF     		.align	2
 7674              	.L428:
 7675 001c 00000000 		.word	rgb_matrix_config
 7676 0020 00000000 		.word	.LANCHOR2
 7677              		.cfi_endproc
 7678              	.LFE174:
 7680              		.section	.text.rgb_matrix_enable,"ax",%progbits
 7681              		.align	1
 7682              		.global	rgb_matrix_enable
 7683              		.syntax unified
 7684              		.thumb
 7685              		.thumb_func
 7686              		.fpu fpv4-sp-d16
 7688              	rgb_matrix_enable:
 7689              	.LFB173:
 471:quantum/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 7690              		.loc 28 471 30 is_stmt 1 view -0
 7691              		.cfi_startproc
 7692              		@ args = 0, pretend = 0, frame = 0
 7693              		@ frame_needed = 0, uses_anonymous_args = 0
 472:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 7694              		.loc 28 472 5 view .LVU1873
 471:quantum/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 7695              		.loc 28 471 30 is_stmt 0 view .LVU1874
 7696 0000 08B5     		push	{r3, lr}
 7697              		.cfi_def_cfa_offset 8
 7698              		.cfi_offset 3, -8
 7699              		.cfi_offset 14, -4
 472:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 7700              		.loc 28 472 5 view .LVU1875
 7701 0002 FFF7FEFF 		bl	rgb_matrix_enable_noeeprom
 7702              	.LVL613:
 473:quantum/rgb_matrix.c **** }
 7703              		.loc 28 473 5 is_stmt 1 view .LVU1876
 474:quantum/rgb_matrix.c **** 
 7704              		.loc 28 474 1 is_stmt 0 view .LVU1877
 7705 0006 BDE80840 		pop	{r3, lr}
 7706              		.cfi_restore 14
 7707              		.cfi_restore 3
 7708              		.cfi_def_cfa_offset 0
 473:quantum/rgb_matrix.c **** }
 7709              		.loc 28 473 5 view .LVU1878
 7710 000a FFF7FEBF 		b	eeconfig_update_rgb_matrix
 7711              	.LVL614:
 7712              		.cfi_endproc
 7713              	.LFE173:
 7715              		.section	.text.rgb_matrix_disable_noeeprom,"ax",%progbits
 7716              		.align	1
 7717              		.global	rgb_matrix_disable_noeeprom
 7718              		.syntax unified
 7719              		.thumb
 7720              		.thumb_func
 7721              		.fpu fpv4-sp-d16
 7723              	rgb_matrix_disable_noeeprom:
 7724              	.LFB176:
 480:quantum/rgb_matrix.c **** 
 481:quantum/rgb_matrix.c **** void rgb_matrix_disable(void) {
 482:quantum/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 483:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 484:quantum/rgb_matrix.c **** }
 485:quantum/rgb_matrix.c **** 
 486:quantum/rgb_matrix.c **** void rgb_matrix_disable_noeeprom(void) {
 7725              		.loc 28 486 40 is_stmt 1 view -0
 7726              		.cfi_startproc
 7727              		@ args = 0, pretend = 0, frame = 0
 7728              		@ frame_needed = 0, uses_anonymous_args = 0
 7729              		@ link register save eliminated.
 487:quantum/rgb_matrix.c ****     if (rgb_matrix_config.enable) rgb_task_state = STARTING;
 7730              		.loc 28 487 5 view .LVU1880
 7731              		.loc 28 487 9 is_stmt 0 view .LVU1881
 7732 0000 054B     		ldr	r3, .L436
 7733 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7734              		.loc 28 487 8 view .LVU1882
 7735 0004 9207     		lsls	r2, r2, #30
 7736              		.loc 28 487 35 is_stmt 1 view .LVU1883
 7737              		.loc 28 487 50 is_stmt 0 view .LVU1884
 7738 0006 1EBF     		ittt	ne
 7739 0008 044A     		ldrne	r2, .L436+4
 7740 000a 0021     		movne	r1, #0
 7741 000c 1170     		strbne	r1, [r2]
 488:quantum/rgb_matrix.c ****     rgb_matrix_config.enable = 0;
 7742              		.loc 28 488 5 is_stmt 1 view .LVU1885
 7743              		.loc 28 488 30 is_stmt 0 view .LVU1886
 7744 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7745 0010 6FF30102 		bfc	r2, #0, #2
 7746 0014 1A70     		strb	r2, [r3]
 489:quantum/rgb_matrix.c **** }
 7747              		.loc 28 489 1 view .LVU1887
 7748 0016 7047     		bx	lr
 7749              	.L437:
 7750              		.align	2
 7751              	.L436:
 7752 0018 00000000 		.word	rgb_matrix_config
 7753 001c 00000000 		.word	.LANCHOR2
 7754              		.cfi_endproc
 7755              	.LFE176:
 7757              		.section	.text.rgb_matrix_disable,"ax",%progbits
 7758              		.align	1
 7759              		.global	rgb_matrix_disable
 7760              		.syntax unified
 7761              		.thumb
 7762              		.thumb_func
 7763              		.fpu fpv4-sp-d16
 7765              	rgb_matrix_disable:
 7766              	.LFB175:
 481:quantum/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 7767              		.loc 28 481 31 is_stmt 1 view -0
 7768              		.cfi_startproc
 7769              		@ args = 0, pretend = 0, frame = 0
 7770              		@ frame_needed = 0, uses_anonymous_args = 0
 482:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 7771              		.loc 28 482 5 view .LVU1889
 481:quantum/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 7772              		.loc 28 481 31 is_stmt 0 view .LVU1890
 7773 0000 08B5     		push	{r3, lr}
 7774              		.cfi_def_cfa_offset 8
 7775              		.cfi_offset 3, -8
 7776              		.cfi_offset 14, -4
 482:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 7777              		.loc 28 482 5 view .LVU1891
 7778 0002 FFF7FEFF 		bl	rgb_matrix_disable_noeeprom
 7779              	.LVL615:
 483:quantum/rgb_matrix.c **** }
 7780              		.loc 28 483 5 is_stmt 1 view .LVU1892
 484:quantum/rgb_matrix.c **** 
 7781              		.loc 28 484 1 is_stmt 0 view .LVU1893
 7782 0006 BDE80840 		pop	{r3, lr}
 7783              		.cfi_restore 14
 7784              		.cfi_restore 3
 7785              		.cfi_def_cfa_offset 0
 483:quantum/rgb_matrix.c **** }
 7786              		.loc 28 483 5 view .LVU1894
 7787 000a FFF7FEBF 		b	eeconfig_update_rgb_matrix
 7788              	.LVL616:
 7789              		.cfi_endproc
 7790              	.LFE175:
 7792              		.section	.text.rgb_matrix_is_enabled,"ax",%progbits
 7793              		.align	1
 7794              		.global	rgb_matrix_is_enabled
 7795              		.syntax unified
 7796              		.thumb
 7797              		.thumb_func
 7798              		.fpu fpv4-sp-d16
 7800              	rgb_matrix_is_enabled:
 7801              	.LFB177:
 490:quantum/rgb_matrix.c **** 
 491:quantum/rgb_matrix.c **** uint8_t rgb_matrix_is_enabled(void) { return rgb_matrix_config.enable; }
 7802              		.loc 28 491 37 is_stmt 1 view -0
 7803              		.cfi_startproc
 7804              		@ args = 0, pretend = 0, frame = 0
 7805              		@ frame_needed = 0, uses_anonymous_args = 0
 7806              		@ link register save eliminated.
 7807              		.loc 28 491 39 view .LVU1896
 7808              		.loc 28 491 63 is_stmt 0 view .LVU1897
 7809 0000 024B     		ldr	r3, .L440
 7810 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 7811              		.loc 28 491 1 view .LVU1898
 7812 0004 00F00300 		and	r0, r0, #3
 7813 0008 7047     		bx	lr
 7814              	.L441:
 7815 000a 00BF     		.align	2
 7816              	.L440:
 7817 000c 00000000 		.word	rgb_matrix_config
 7818              		.cfi_endproc
 7819              	.LFE177:
 7821              		.section	.text.rgb_matrix_step,"ax",%progbits
 7822              		.align	1
 7823              		.global	rgb_matrix_step
 7824              		.syntax unified
 7825              		.thumb
 7826              		.thumb_func
 7827              		.fpu fpv4-sp-d16
 7829              	rgb_matrix_step:
 7830              	.LFB178:
 492:quantum/rgb_matrix.c **** 
 493:quantum/rgb_matrix.c **** void rgb_matrix_step(void) {
 7831              		.loc 28 493 28 is_stmt 1 view -0
 7832              		.cfi_startproc
 7833              		@ args = 0, pretend = 0, frame = 0
 7834              		@ frame_needed = 0, uses_anonymous_args = 0
 7835              		@ link register save eliminated.
 494:quantum/rgb_matrix.c ****     rgb_matrix_config.mode++;
 7836              		.loc 28 494 5 view .LVU1900
 7837              		.loc 28 494 22 is_stmt 0 view .LVU1901
 7838 0000 0849     		ldr	r1, .L446
 7839 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 7840 0004 C3F38502 		ubfx	r2, r3, #2, #6
 7841              		.loc 28 494 27 view .LVU1902
 7842 0008 0132     		adds	r2, r2, #1
 7843 000a 02F03F02 		and	r2, r2, #63
 495:quantum/rgb_matrix.c ****     if (rgb_matrix_config.mode >= RGB_MATRIX_EFFECT_MAX) rgb_matrix_config.mode = 1;
 7844              		.loc 28 495 5 is_stmt 1 view .LVU1903
 7845              		.loc 28 495 8 is_stmt 0 view .LVU1904
 7846 000e 242A     		cmp	r2, #36
 7847              		.loc 28 495 58 is_stmt 1 view .LVU1905
 7848              		.loc 28 495 81 is_stmt 0 view .LVU1906
 7849 0010 88BF     		it	hi
 7850 0012 0122     		movhi	r2, #1
 7851 0014 62F38703 		bfi	r3, r2, #2, #6
 7852 0018 0B70     		strb	r3, [r1]
 496:quantum/rgb_matrix.c ****     rgb_task_state = STARTING;
 7853              		.loc 28 496 5 is_stmt 1 view .LVU1907
 7854              		.loc 28 496 20 is_stmt 0 view .LVU1908
 7855 001a 034B     		ldr	r3, .L446+4
 7856 001c 0022     		movs	r2, #0
 7857 001e 1A70     		strb	r2, [r3]
 497:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 7858              		.loc 28 497 5 is_stmt 1 view .LVU1909
 7859 0020 FFF7FEBF 		b	eeconfig_update_rgb_matrix
 7860              	.LVL617:
 7861              	.L447:
 7862              		.align	2
 7863              	.L446:
 7864 0024 00000000 		.word	rgb_matrix_config
 7865 0028 00000000 		.word	.LANCHOR2
 7866              		.cfi_endproc
 7867              	.LFE178:
 7869              		.section	.text.rgb_matrix_step_reverse,"ax",%progbits
 7870              		.align	1
 7871              		.global	rgb_matrix_step_reverse
 7872              		.syntax unified
 7873              		.thumb
 7874              		.thumb_func
 7875              		.fpu fpv4-sp-d16
 7877              	rgb_matrix_step_reverse:
 7878              	.LFB179:
 498:quantum/rgb_matrix.c **** }
 499:quantum/rgb_matrix.c **** 
 500:quantum/rgb_matrix.c **** void rgb_matrix_step_reverse(void) {
 7879              		.loc 28 500 36 view -0
 7880              		.cfi_startproc
 7881              		@ args = 0, pretend = 0, frame = 0
 7882              		@ frame_needed = 0, uses_anonymous_args = 0
 7883              		@ link register save eliminated.
 501:quantum/rgb_matrix.c ****     rgb_matrix_config.mode--;
 7884              		.loc 28 501 5 view .LVU1911
 7885              		.loc 28 501 27 is_stmt 0 view .LVU1912
 7886 0000 084A     		ldr	r2, .L450
 7887 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7888 0004 FC33     		adds	r3, r3, #252
 7889 0006 1370     		strb	r3, [r2]
 502:quantum/rgb_matrix.c ****     if (rgb_matrix_config.mode < 1) rgb_matrix_config.mode = RGB_MATRIX_EFFECT_MAX - 1;
 7890              		.loc 28 502 5 is_stmt 1 view .LVU1913
 7891              		.loc 28 502 32 is_stmt 0 view .LVU1914
 7892 0008 DBB2     		uxtb	r3, r3
 7893              		.loc 28 502 8 view .LVU1915
 7894 000a 13F0FC0F 		tst	r3, #252
 7895              		.loc 28 502 37 is_stmt 1 view .LVU1916
 7896              		.loc 28 502 60 is_stmt 0 view .LVU1917
 7897 000e 02BF     		ittt	eq
 7898 0010 2421     		moveq	r1, #36
 7899 0012 61F38703 		bfieq	r3, r1, #2, #6
 7900 0016 1370     		strbeq	r3, [r2]
 503:quantum/rgb_matrix.c ****     rgb_task_state = STARTING;
 7901              		.loc 28 503 5 is_stmt 1 view .LVU1918
 7902              		.loc 28 503 20 is_stmt 0 view .LVU1919
 7903 0018 034B     		ldr	r3, .L450+4
 7904 001a 0022     		movs	r2, #0
 7905 001c 1A70     		strb	r2, [r3]
 504:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 7906              		.loc 28 504 5 is_stmt 1 view .LVU1920
 7907 001e FFF7FEBF 		b	eeconfig_update_rgb_matrix
 7908              	.LVL618:
 7909              	.L451:
 7910 0022 00BF     		.align	2
 7911              	.L450:
 7912 0024 00000000 		.word	rgb_matrix_config
 7913 0028 00000000 		.word	.LANCHOR2
 7914              		.cfi_endproc
 7915              	.LFE179:
 7917              		.section	.text.rgb_matrix_increase_hue,"ax",%progbits
 7918              		.align	1
 7919              		.global	rgb_matrix_increase_hue
 7920              		.syntax unified
 7921              		.thumb
 7922              		.thumb_func
 7923              		.fpu fpv4-sp-d16
 7925              	rgb_matrix_increase_hue:
 7926              	.LFB180:
 505:quantum/rgb_matrix.c **** }
 506:quantum/rgb_matrix.c **** 
 507:quantum/rgb_matrix.c **** void rgb_matrix_increase_hue(void) {
 7927              		.loc 28 507 36 view -0
 7928              		.cfi_startproc
 7929              		@ args = 0, pretend = 0, frame = 0
 7930              		@ frame_needed = 0, uses_anonymous_args = 0
 7931              		@ link register save eliminated.
 508:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.h += RGB_MATRIX_HUE_STEP;
 7932              		.loc 28 508 5 view .LVU1922
 7933              		.loc 28 508 29 is_stmt 0 view .LVU1923
 7934 0000 024A     		ldr	r2, .L453
 7935 0002 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 7936 0004 0833     		adds	r3, r3, #8
 7937 0006 5370     		strb	r3, [r2, #1]
 509:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 7938              		.loc 28 509 5 is_stmt 1 view .LVU1924
 7939 0008 FFF7FEBF 		b	eeconfig_update_rgb_matrix
 7940              	.LVL619:
 7941              	.L454:
 7942              		.align	2
 7943              	.L453:
 7944 000c 00000000 		.word	rgb_matrix_config
 7945              		.cfi_endproc
 7946              	.LFE180:
 7948              		.section	.text.rgb_matrix_decrease_hue,"ax",%progbits
 7949              		.align	1
 7950              		.global	rgb_matrix_decrease_hue
 7951              		.syntax unified
 7952              		.thumb
 7953              		.thumb_func
 7954              		.fpu fpv4-sp-d16
 7956              	rgb_matrix_decrease_hue:
 7957              	.LFB181:
 510:quantum/rgb_matrix.c **** }
 511:quantum/rgb_matrix.c **** 
 512:quantum/rgb_matrix.c **** void rgb_matrix_decrease_hue(void) {
 7958              		.loc 28 512 36 view -0
 7959              		.cfi_startproc
 7960              		@ args = 0, pretend = 0, frame = 0
 7961              		@ frame_needed = 0, uses_anonymous_args = 0
 7962              		@ link register save eliminated.
 513:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.h -= RGB_MATRIX_HUE_STEP;
 7963              		.loc 28 513 5 view .LVU1926
 7964              		.loc 28 513 29 is_stmt 0 view .LVU1927
 7965 0000 024A     		ldr	r2, .L456
 7966 0002 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 7967 0004 083B     		subs	r3, r3, #8
 7968 0006 5370     		strb	r3, [r2, #1]
 514:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 7969              		.loc 28 514 5 is_stmt 1 view .LVU1928
 7970 0008 FFF7FEBF 		b	eeconfig_update_rgb_matrix
 7971              	.LVL620:
 7972              	.L457:
 7973              		.align	2
 7974              	.L456:
 7975 000c 00000000 		.word	rgb_matrix_config
 7976              		.cfi_endproc
 7977              	.LFE181:
 7979              		.section	.text.rgb_matrix_increase_sat,"ax",%progbits
 7980              		.align	1
 7981              		.global	rgb_matrix_increase_sat
 7982              		.syntax unified
 7983              		.thumb
 7984              		.thumb_func
 7985              		.fpu fpv4-sp-d16
 7987              	rgb_matrix_increase_sat:
 7988              	.LFB182:
 515:quantum/rgb_matrix.c **** }
 516:quantum/rgb_matrix.c **** 
 517:quantum/rgb_matrix.c **** void rgb_matrix_increase_sat(void) {
 7989              		.loc 28 517 36 view -0
 7990              		.cfi_startproc
 7991              		@ args = 0, pretend = 0, frame = 0
 7992              		@ frame_needed = 0, uses_anonymous_args = 0
 7993              		@ link register save eliminated.
 518:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = qadd8(rgb_matrix_config.hsv.s, RGB_MATRIX_SAT_STEP);
 7994              		.loc 28 518 5 view .LVU1930
 7995              	.LVL621:
 7996              	.LBB458:
 7997              	.LBI458:
  23:./lib/lib8tion/math8.h **** {
 7998              		.loc 1 23 34 view .LVU1931
 7999              	.LBB459:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8000              		.loc 1 26 5 view .LVU1932
 8001              	.LBE459:
 8002              	.LBE458:
 8003              		.loc 28 518 31 is_stmt 0 view .LVU1933
 8004 0000 044A     		ldr	r2, .L459
 8005              	.LBB461:
 8006              	.LBB460:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8007              		.loc 1 26 20 view .LVU1934
 8008 0002 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8009              		.loc 1 26 14 view .LVU1935
 8010 0004 1033     		adds	r3, r3, #16
 8011              	.LVL622:
  27:./lib/lib8tion/math8.h ****     return t;
 8012              		.loc 1 27 5 is_stmt 1 view .LVU1936
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 8013              		.loc 1 28 5 view .LVU1937
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 8014              		.loc 1 28 12 is_stmt 0 view .LVU1938
 8015 0006 FF2B     		cmp	r3, #255
 8016 0008 28BF     		it	cs
 8017 000a FF23     		movcs	r3, #255
 8018 000c 9370     		strb	r3, [r2, #2]
 8019              	.LBE460:
 8020              	.LBE461:
 519:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 8021              		.loc 28 519 5 is_stmt 1 view .LVU1939
 8022 000e FFF7FEBF 		b	eeconfig_update_rgb_matrix
 8023              	.LVL623:
 8024              	.L460:
 8025 0012 00BF     		.align	2
 8026              	.L459:
 8027 0014 00000000 		.word	rgb_matrix_config
 8028              		.cfi_endproc
 8029              	.LFE182:
 8031              		.section	.text.rgb_matrix_decrease_sat,"ax",%progbits
 8032              		.align	1
 8033              		.global	rgb_matrix_decrease_sat
 8034              		.syntax unified
 8035              		.thumb
 8036              		.thumb_func
 8037              		.fpu fpv4-sp-d16
 8039              	rgb_matrix_decrease_sat:
 8040              	.LFB183:
 520:quantum/rgb_matrix.c **** }
 521:quantum/rgb_matrix.c **** 
 522:quantum/rgb_matrix.c **** void rgb_matrix_decrease_sat(void) {
 8041              		.loc 28 522 36 view -0
 8042              		.cfi_startproc
 8043              		@ args = 0, pretend = 0, frame = 0
 8044              		@ frame_needed = 0, uses_anonymous_args = 0
 8045              		@ link register save eliminated.
 523:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = qsub8(rgb_matrix_config.hsv.s, RGB_MATRIX_SAT_STEP);
 8046              		.loc 28 523 5 view .LVU1941
 8047              	.LVL624:
 8048              	.LBB462:
 8049              	.LBI462:
  88:./lib/lib8tion/math8.h **** {
 8050              		.loc 1 88 34 view .LVU1942
 8051              	.LBB463:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 8052              		.loc 1 91 5 view .LVU1943
 8053              	.LBE463:
 8054              	.LBE462:
 8055              		.loc 28 523 31 is_stmt 0 view .LVU1944
 8056 0000 034A     		ldr	r2, .L462
 8057              	.LBB465:
 8058              	.LBB464:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 8059              		.loc 1 91 19 view .LVU1945
 8060 0002 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 8061 0004 103B     		subs	r3, r3, #16
 8062              	.LVL625:
  92:./lib/lib8tion/math8.h ****     return t;
 8063              		.loc 1 92 5 is_stmt 1 view .LVU1946
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 8064              		.loc 1 93 5 view .LVU1947
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 8065              		.loc 1 93 12 is_stmt 0 view .LVU1948
 8066 0006 23EAE373 		bic	r3, r3, r3, asr #31
 8067 000a 9370     		strb	r3, [r2, #2]
 8068              	.LBE464:
 8069              	.LBE465:
 524:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 8070              		.loc 28 524 5 is_stmt 1 view .LVU1949
 8071 000c FFF7FEBF 		b	eeconfig_update_rgb_matrix
 8072              	.LVL626:
 8073              	.L463:
 8074              		.align	2
 8075              	.L462:
 8076 0010 00000000 		.word	rgb_matrix_config
 8077              		.cfi_endproc
 8078              	.LFE183:
 8080              		.section	.text.rgb_matrix_increase_val,"ax",%progbits
 8081              		.align	1
 8082              		.global	rgb_matrix_increase_val
 8083              		.syntax unified
 8084              		.thumb
 8085              		.thumb_func
 8086              		.fpu fpv4-sp-d16
 8088              	rgb_matrix_increase_val:
 8089              	.LFB184:
 525:quantum/rgb_matrix.c **** }
 526:quantum/rgb_matrix.c **** 
 527:quantum/rgb_matrix.c **** void rgb_matrix_increase_val(void) {
 8090              		.loc 28 527 36 view -0
 8091              		.cfi_startproc
 8092              		@ args = 0, pretend = 0, frame = 0
 8093              		@ frame_needed = 0, uses_anonymous_args = 0
 8094              		@ link register save eliminated.
 528:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = qadd8(rgb_matrix_config.hsv.v, RGB_MATRIX_VAL_STEP);
 8095              		.loc 28 528 5 view .LVU1951
 8096              	.LVL627:
 8097              	.LBB466:
 8098              	.LBI466:
  23:./lib/lib8tion/math8.h **** {
 8099              		.loc 1 23 34 view .LVU1952
 8100              	.LBB467:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8101              		.loc 1 26 5 view .LVU1953
 8102              	.LBE467:
 8103              	.LBE466:
 8104              		.loc 28 528 31 is_stmt 0 view .LVU1954
 8105 0000 044A     		ldr	r2, .L465
 8106              	.LBB469:
 8107              	.LBB468:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8108              		.loc 1 26 20 view .LVU1955
 8109 0002 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8110              		.loc 1 26 14 view .LVU1956
 8111 0004 1033     		adds	r3, r3, #16
 8112              	.LVL628:
  27:./lib/lib8tion/math8.h ****     return t;
 8113              		.loc 1 27 5 is_stmt 1 view .LVU1957
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 8114              		.loc 1 28 5 view .LVU1958
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 8115              		.loc 1 28 12 is_stmt 0 view .LVU1959
 8116 0006 FF2B     		cmp	r3, #255
 8117 0008 28BF     		it	cs
 8118 000a FF23     		movcs	r3, #255
 8119 000c D370     		strb	r3, [r2, #3]
 8120              	.LBE468:
 8121              	.LBE469:
 529:quantum/rgb_matrix.c ****     if (rgb_matrix_config.hsv.v > RGB_MATRIX_MAXIMUM_BRIGHTNESS) rgb_matrix_config.hsv.v = RGB_MATR
 8122              		.loc 28 529 5 is_stmt 1 view .LVU1960
 530:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 8123              		.loc 28 530 5 view .LVU1961
 8124 000e FFF7FEBF 		b	eeconfig_update_rgb_matrix
 8125              	.LVL629:
 8126              	.L466:
 8127 0012 00BF     		.align	2
 8128              	.L465:
 8129 0014 00000000 		.word	rgb_matrix_config
 8130              		.cfi_endproc
 8131              	.LFE184:
 8133              		.section	.text.rgb_matrix_decrease_val,"ax",%progbits
 8134              		.align	1
 8135              		.global	rgb_matrix_decrease_val
 8136              		.syntax unified
 8137              		.thumb
 8138              		.thumb_func
 8139              		.fpu fpv4-sp-d16
 8141              	rgb_matrix_decrease_val:
 8142              	.LFB185:
 531:quantum/rgb_matrix.c **** }
 532:quantum/rgb_matrix.c **** 
 533:quantum/rgb_matrix.c **** void rgb_matrix_decrease_val(void) {
 8143              		.loc 28 533 36 view -0
 8144              		.cfi_startproc
 8145              		@ args = 0, pretend = 0, frame = 0
 8146              		@ frame_needed = 0, uses_anonymous_args = 0
 8147              		@ link register save eliminated.
 534:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = qsub8(rgb_matrix_config.hsv.v, RGB_MATRIX_VAL_STEP);
 8148              		.loc 28 534 5 view .LVU1963
 8149              	.LVL630:
 8150              	.LBB470:
 8151              	.LBI470:
  88:./lib/lib8tion/math8.h **** {
 8152              		.loc 1 88 34 view .LVU1964
 8153              	.LBB471:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 8154              		.loc 1 91 5 view .LVU1965
 8155              	.LBE471:
 8156              	.LBE470:
 8157              		.loc 28 534 31 is_stmt 0 view .LVU1966
 8158 0000 034A     		ldr	r2, .L468
 8159              	.LBB473:
 8160              	.LBB472:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 8161              		.loc 1 91 19 view .LVU1967
 8162 0002 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 8163 0004 103B     		subs	r3, r3, #16
 8164              	.LVL631:
  92:./lib/lib8tion/math8.h ****     return t;
 8165              		.loc 1 92 5 is_stmt 1 view .LVU1968
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 8166              		.loc 1 93 5 view .LVU1969
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 8167              		.loc 1 93 12 is_stmt 0 view .LVU1970
 8168 0006 23EAE373 		bic	r3, r3, r3, asr #31
 8169 000a D370     		strb	r3, [r2, #3]
 8170              	.LBE472:
 8171              	.LBE473:
 535:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 8172              		.loc 28 535 5 is_stmt 1 view .LVU1971
 8173 000c FFF7FEBF 		b	eeconfig_update_rgb_matrix
 8174              	.LVL632:
 8175              	.L469:
 8176              		.align	2
 8177              	.L468:
 8178 0010 00000000 		.word	rgb_matrix_config
 8179              		.cfi_endproc
 8180              	.LFE185:
 8182              		.section	.text.rgb_matrix_increase_speed,"ax",%progbits
 8183              		.align	1
 8184              		.global	rgb_matrix_increase_speed
 8185              		.syntax unified
 8186              		.thumb
 8187              		.thumb_func
 8188              		.fpu fpv4-sp-d16
 8190              	rgb_matrix_increase_speed:
 8191              	.LFB186:
 536:quantum/rgb_matrix.c **** }
 537:quantum/rgb_matrix.c **** 
 538:quantum/rgb_matrix.c **** void rgb_matrix_increase_speed(void) {
 8192              		.loc 28 538 38 view -0
 8193              		.cfi_startproc
 8194              		@ args = 0, pretend = 0, frame = 0
 8195              		@ frame_needed = 0, uses_anonymous_args = 0
 8196              		@ link register save eliminated.
 539:quantum/rgb_matrix.c ****     rgb_matrix_config.speed = qadd8(rgb_matrix_config.speed, RGB_MATRIX_SPD_STEP);
 8197              		.loc 28 539 5 view .LVU1973
 8198              	.LVL633:
 8199              	.LBB474:
 8200              	.LBI474:
  23:./lib/lib8tion/math8.h **** {
 8201              		.loc 1 23 34 view .LVU1974
 8202              	.LBB475:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8203              		.loc 1 26 5 view .LVU1975
 8204              	.LBE475:
 8205              	.LBE474:
 8206              		.loc 28 539 31 is_stmt 0 view .LVU1976
 8207 0000 044A     		ldr	r2, .L471
 8208              	.LBB477:
 8209              	.LBB476:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8210              		.loc 1 26 20 view .LVU1977
 8211 0002 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8212              		.loc 1 26 14 view .LVU1978
 8213 0004 1033     		adds	r3, r3, #16
 8214              	.LVL634:
  27:./lib/lib8tion/math8.h ****     return t;
 8215              		.loc 1 27 5 is_stmt 1 view .LVU1979
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 8216              		.loc 1 28 5 view .LVU1980
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 8217              		.loc 1 28 12 is_stmt 0 view .LVU1981
 8218 0006 FF2B     		cmp	r3, #255
 8219 0008 28BF     		it	cs
 8220 000a FF23     		movcs	r3, #255
 8221 000c 1371     		strb	r3, [r2, #4]
 8222              	.LBE476:
 8223              	.LBE477:
 540:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 8224              		.loc 28 540 5 is_stmt 1 view .LVU1982
 8225 000e FFF7FEBF 		b	eeconfig_update_rgb_matrix
 8226              	.LVL635:
 8227              	.L472:
 8228 0012 00BF     		.align	2
 8229              	.L471:
 8230 0014 00000000 		.word	rgb_matrix_config
 8231              		.cfi_endproc
 8232              	.LFE186:
 8234              		.section	.text.rgb_matrix_decrease_speed,"ax",%progbits
 8235              		.align	1
 8236              		.global	rgb_matrix_decrease_speed
 8237              		.syntax unified
 8238              		.thumb
 8239              		.thumb_func
 8240              		.fpu fpv4-sp-d16
 8242              	rgb_matrix_decrease_speed:
 8243              	.LFB187:
 541:quantum/rgb_matrix.c **** }
 542:quantum/rgb_matrix.c **** 
 543:quantum/rgb_matrix.c **** void rgb_matrix_decrease_speed(void) {
 8244              		.loc 28 543 38 view -0
 8245              		.cfi_startproc
 8246              		@ args = 0, pretend = 0, frame = 0
 8247              		@ frame_needed = 0, uses_anonymous_args = 0
 8248              		@ link register save eliminated.
 544:quantum/rgb_matrix.c ****     rgb_matrix_config.speed = qsub8(rgb_matrix_config.speed, RGB_MATRIX_SPD_STEP);
 8249              		.loc 28 544 5 view .LVU1984
 8250              	.LVL636:
 8251              	.LBB478:
 8252              	.LBI478:
  88:./lib/lib8tion/math8.h **** {
 8253              		.loc 1 88 34 view .LVU1985
 8254              	.LBB479:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 8255              		.loc 1 91 5 view .LVU1986
 8256              	.LBE479:
 8257              	.LBE478:
 8258              		.loc 28 544 31 is_stmt 0 view .LVU1987
 8259 0000 034A     		ldr	r2, .L474
 8260              	.LBB481:
 8261              	.LBB480:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 8262              		.loc 1 91 19 view .LVU1988
 8263 0002 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 8264 0004 103B     		subs	r3, r3, #16
 8265              	.LVL637:
  92:./lib/lib8tion/math8.h ****     return t;
 8266              		.loc 1 92 5 is_stmt 1 view .LVU1989
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 8267              		.loc 1 93 5 view .LVU1990
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 8268              		.loc 1 93 12 is_stmt 0 view .LVU1991
 8269 0006 23EAE373 		bic	r3, r3, r3, asr #31
 8270 000a 1371     		strb	r3, [r2, #4]
 8271              	.LBE480:
 8272              	.LBE481:
 545:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 8273              		.loc 28 545 5 is_stmt 1 view .LVU1992
 8274 000c FFF7FEBF 		b	eeconfig_update_rgb_matrix
 8275              	.LVL638:
 8276              	.L475:
 8277              		.align	2
 8278              	.L474:
 8279 0010 00000000 		.word	rgb_matrix_config
 8280              		.cfi_endproc
 8281              	.LFE187:
 8283              		.section	.text.rgb_matrix_get_speed,"ax",%progbits
 8284              		.align	1
 8285              		.global	rgb_matrix_get_speed
 8286              		.syntax unified
 8287              		.thumb
 8288              		.thumb_func
 8289              		.fpu fpv4-sp-d16
 8291              	rgb_matrix_get_speed:
 8292              	.LFB188:
 546:quantum/rgb_matrix.c **** }
 547:quantum/rgb_matrix.c **** 
 548:quantum/rgb_matrix.c **** uint8_t rgb_matrix_get_speed(void) { return rgb_matrix_config.speed; }
 8293              		.loc 28 548 36 view -0
 8294              		.cfi_startproc
 8295              		@ args = 0, pretend = 0, frame = 0
 8296              		@ frame_needed = 0, uses_anonymous_args = 0
 8297              		@ link register save eliminated.
 8298              		.loc 28 548 38 view .LVU1994
 8299              		.loc 28 548 1 is_stmt 0 view .LVU1995
 8300 0000 014B     		ldr	r3, .L477
 8301 0002 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 8302 0004 7047     		bx	lr
 8303              	.L478:
 8304 0006 00BF     		.align	2
 8305              	.L477:
 8306 0008 00000000 		.word	rgb_matrix_config
 8307              		.cfi_endproc
 8308              	.LFE188:
 8310              		.section	.text.rgb_matrix_get_flags,"ax",%progbits
 8311              		.align	1
 8312              		.global	rgb_matrix_get_flags
 8313              		.syntax unified
 8314              		.thumb
 8315              		.thumb_func
 8316              		.fpu fpv4-sp-d16
 8318              	rgb_matrix_get_flags:
 8319              	.LFB189:
 549:quantum/rgb_matrix.c **** 
 550:quantum/rgb_matrix.c **** led_flags_t rgb_matrix_get_flags(void) { return rgb_effect_params.flags; }
 8320              		.loc 28 550 40 is_stmt 1 view -0
 8321              		.cfi_startproc
 8322              		@ args = 0, pretend = 0, frame = 0
 8323              		@ frame_needed = 0, uses_anonymous_args = 0
 8324              		@ link register save eliminated.
 8325              		.loc 28 550 42 view .LVU1997
 8326              		.loc 28 550 1 is_stmt 0 view .LVU1998
 8327 0000 014B     		ldr	r3, .L480
 8328 0002 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 8329 0004 7047     		bx	lr
 8330              	.L481:
 8331 0006 00BF     		.align	2
 8332              	.L480:
 8333 0008 00000000 		.word	.LANCHOR2
 8334              		.cfi_endproc
 8335              	.LFE189:
 8337              		.section	.text.rgb_matrix_set_flags,"ax",%progbits
 8338              		.align	1
 8339              		.global	rgb_matrix_set_flags
 8340              		.syntax unified
 8341              		.thumb
 8342              		.thumb_func
 8343              		.fpu fpv4-sp-d16
 8345              	rgb_matrix_set_flags:
 8346              	.LVL639:
 8347              	.LFB190:
 551:quantum/rgb_matrix.c **** 
 552:quantum/rgb_matrix.c **** void rgb_matrix_set_flags(led_flags_t flags) { rgb_effect_params.flags = flags; }
 8348              		.loc 28 552 46 is_stmt 1 view -0
 8349              		.cfi_startproc
 8350              		@ args = 0, pretend = 0, frame = 0
 8351              		@ frame_needed = 0, uses_anonymous_args = 0
 8352              		@ link register save eliminated.
 8353              		.loc 28 552 48 view .LVU2000
 8354              		.loc 28 552 72 is_stmt 0 view .LVU2001
 8355 0000 014B     		ldr	r3, .L483
 8356 0002 9870     		strb	r0, [r3, #2]
 8357              		.loc 28 552 1 view .LVU2002
 8358 0004 7047     		bx	lr
 8359              	.L484:
 8360 0006 00BF     		.align	2
 8361              	.L483:
 8362 0008 00000000 		.word	.LANCHOR2
 8363              		.cfi_endproc
 8364              	.LFE190:
 8366              		.section	.text.rgb_matrix_mode,"ax",%progbits
 8367              		.align	1
 8368              		.global	rgb_matrix_mode
 8369              		.syntax unified
 8370              		.thumb
 8371              		.thumb_func
 8372              		.fpu fpv4-sp-d16
 8374              	rgb_matrix_mode:
 8375              	.LVL640:
 8376              	.LFB191:
 553:quantum/rgb_matrix.c **** 
 554:quantum/rgb_matrix.c **** void rgb_matrix_mode(uint8_t mode) {
 8377              		.loc 28 554 36 is_stmt 1 view -0
 8378              		.cfi_startproc
 8379              		@ args = 0, pretend = 0, frame = 0
 8380              		@ frame_needed = 0, uses_anonymous_args = 0
 8381              		@ link register save eliminated.
 555:quantum/rgb_matrix.c ****     rgb_matrix_config.mode = mode;
 8382              		.loc 28 555 5 view .LVU2004
 8383              		.loc 28 555 28 is_stmt 0 view .LVU2005
 8384 0000 044B     		ldr	r3, .L486
 8385 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8386 0004 60F38702 		bfi	r2, r0, #2, #6
 8387 0008 1A70     		strb	r2, [r3]
 556:quantum/rgb_matrix.c ****     rgb_task_state         = STARTING;
 8388              		.loc 28 556 5 is_stmt 1 view .LVU2006
 8389              		.loc 28 556 28 is_stmt 0 view .LVU2007
 8390 000a 034B     		ldr	r3, .L486+4
 8391 000c 0022     		movs	r2, #0
 8392 000e 1A70     		strb	r2, [r3]
 557:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 8393              		.loc 28 557 5 is_stmt 1 view .LVU2008
 8394 0010 FFF7FEBF 		b	eeconfig_update_rgb_matrix
 8395              	.LVL641:
 8396              	.L487:
 8397              		.loc 28 557 5 is_stmt 0 view .LVU2009
 8398              		.align	2
 8399              	.L486:
 8400 0014 00000000 		.word	rgb_matrix_config
 8401 0018 00000000 		.word	.LANCHOR2
 8402              		.cfi_endproc
 8403              	.LFE191:
 8405              		.section	.text.rgb_matrix_mode_noeeprom,"ax",%progbits
 8406              		.align	1
 8407              		.global	rgb_matrix_mode_noeeprom
 8408              		.syntax unified
 8409              		.thumb
 8410              		.thumb_func
 8411              		.fpu fpv4-sp-d16
 8413              	rgb_matrix_mode_noeeprom:
 8414              	.LVL642:
 8415              	.LFB192:
 558:quantum/rgb_matrix.c **** }
 559:quantum/rgb_matrix.c **** 
 560:quantum/rgb_matrix.c **** void rgb_matrix_mode_noeeprom(uint8_t mode) { rgb_matrix_config.mode = mode; }
 8416              		.loc 28 560 45 is_stmt 1 view -0
 8417              		.cfi_startproc
 8418              		@ args = 0, pretend = 0, frame = 0
 8419              		@ frame_needed = 0, uses_anonymous_args = 0
 8420              		@ link register save eliminated.
 8421              		.loc 28 560 47 view .LVU2011
 8422              		.loc 28 560 70 is_stmt 0 view .LVU2012
 8423 0000 024B     		ldr	r3, .L489
 8424 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8425 0004 60F38702 		bfi	r2, r0, #2, #6
 8426 0008 1A70     		strb	r2, [r3]
 8427              		.loc 28 560 1 view .LVU2013
 8428 000a 7047     		bx	lr
 8429              	.L490:
 8430              		.align	2
 8431              	.L489:
 8432 000c 00000000 		.word	rgb_matrix_config
 8433              		.cfi_endproc
 8434              	.LFE192:
 8436              		.section	.text.rgb_matrix_get_mode,"ax",%progbits
 8437              		.align	1
 8438              		.global	rgb_matrix_get_mode
 8439              		.syntax unified
 8440              		.thumb
 8441              		.thumb_func
 8442              		.fpu fpv4-sp-d16
 8444              	rgb_matrix_get_mode:
 8445              	.LFB193:
 561:quantum/rgb_matrix.c **** 
 562:quantum/rgb_matrix.c **** uint8_t rgb_matrix_get_mode(void) { return rgb_matrix_config.mode; }
 8446              		.loc 28 562 35 is_stmt 1 view -0
 8447              		.cfi_startproc
 8448              		@ args = 0, pretend = 0, frame = 0
 8449              		@ frame_needed = 0, uses_anonymous_args = 0
 8450              		@ link register save eliminated.
 8451              		.loc 28 562 37 view .LVU2015
 8452              		.loc 28 562 61 is_stmt 0 view .LVU2016
 8453 0000 014B     		ldr	r3, .L492
 8454 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 8455              		.loc 28 562 1 view .LVU2017
 8456 0004 8008     		lsrs	r0, r0, #2
 8457 0006 7047     		bx	lr
 8458              	.L493:
 8459              		.align	2
 8460              	.L492:
 8461 0008 00000000 		.word	rgb_matrix_config
 8462              		.cfi_endproc
 8463              	.LFE193:
 8465              		.section	.text.rgb_matrix_sethsv,"ax",%progbits
 8466              		.align	1
 8467              		.global	rgb_matrix_sethsv
 8468              		.syntax unified
 8469              		.thumb
 8470              		.thumb_func
 8471              		.fpu fpv4-sp-d16
 8473              	rgb_matrix_sethsv:
 8474              	.LVL643:
 8475              	.LFB194:
 563:quantum/rgb_matrix.c **** 
 564:quantum/rgb_matrix.c **** void rgb_matrix_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 8476              		.loc 28 564 64 is_stmt 1 view -0
 8477              		.cfi_startproc
 8478              		@ args = 0, pretend = 0, frame = 0
 8479              		@ frame_needed = 0, uses_anonymous_args = 0
 8480              		@ link register save eliminated.
 565:quantum/rgb_matrix.c ****     rgb_matrix_sethsv_noeeprom(hue, sat, val);
 8481              		.loc 28 565 5 view .LVU2019
 8482              	.LBB484:
 8483              	.LBI484:
 566:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 567:quantum/rgb_matrix.c **** }
 568:quantum/rgb_matrix.c **** 
 569:quantum/rgb_matrix.c **** void rgb_matrix_sethsv_noeeprom(uint16_t hue, uint8_t sat, uint8_t val) {
 8484              		.loc 28 569 6 view .LVU2020
 8485              	.LBB485:
 570:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.h = hue;
 8486              		.loc 28 570 5 view .LVU2021
 8487              		.loc 28 570 29 is_stmt 0 view .LVU2022
 8488 0000 024B     		ldr	r3, .L495
 8489 0002 5870     		strb	r0, [r3, #1]
 571:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 8490              		.loc 28 571 5 is_stmt 1 view .LVU2023
 8491              		.loc 28 571 29 is_stmt 0 view .LVU2024
 8492 0004 9970     		strb	r1, [r3, #2]
 572:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = val;
 8493              		.loc 28 572 5 is_stmt 1 view .LVU2025
 8494              		.loc 28 572 29 is_stmt 0 view .LVU2026
 8495 0006 DA70     		strb	r2, [r3, #3]
 573:quantum/rgb_matrix.c ****     if (rgb_matrix_config.hsv.v > RGB_MATRIX_MAXIMUM_BRIGHTNESS) rgb_matrix_config.hsv.v = RGB_MATR
 8496              		.loc 28 573 5 is_stmt 1 view .LVU2027
 8497              	.LVL644:
 8498              		.loc 28 573 5 is_stmt 0 view .LVU2028
 8499              	.LBE485:
 8500              	.LBE484:
 566:quantum/rgb_matrix.c **** }
 8501              		.loc 28 566 5 is_stmt 1 view .LVU2029
 8502 0008 FFF7FEBF 		b	eeconfig_update_rgb_matrix
 8503              	.LVL645:
 8504              	.L496:
 566:quantum/rgb_matrix.c **** }
 8505              		.loc 28 566 5 is_stmt 0 view .LVU2030
 8506              		.align	2
 8507              	.L495:
 8508 000c 00000000 		.word	rgb_matrix_config
 8509              		.cfi_endproc
 8510              	.LFE194:
 8512              		.section	.text.rgb_matrix_sethsv_noeeprom,"ax",%progbits
 8513              		.align	1
 8514              		.global	rgb_matrix_sethsv_noeeprom
 8515              		.syntax unified
 8516              		.thumb
 8517              		.thumb_func
 8518              		.fpu fpv4-sp-d16
 8520              	rgb_matrix_sethsv_noeeprom:
 8521              	.LVL646:
 8522              	.LFB195:
 569:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.h = hue;
 8523              		.loc 28 569 73 is_stmt 1 view -0
 8524              		.cfi_startproc
 8525              		@ args = 0, pretend = 0, frame = 0
 8526              		@ frame_needed = 0, uses_anonymous_args = 0
 8527              		@ link register save eliminated.
 570:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 8528              		.loc 28 570 5 view .LVU2032
 570:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 8529              		.loc 28 570 29 is_stmt 0 view .LVU2033
 8530 0000 024B     		ldr	r3, .L498
 8531 0002 5870     		strb	r0, [r3, #1]
 571:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = val;
 8532              		.loc 28 571 5 is_stmt 1 view .LVU2034
 571:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = val;
 8533              		.loc 28 571 29 is_stmt 0 view .LVU2035
 8534 0004 9970     		strb	r1, [r3, #2]
 572:quantum/rgb_matrix.c ****     if (rgb_matrix_config.hsv.v > RGB_MATRIX_MAXIMUM_BRIGHTNESS) rgb_matrix_config.hsv.v = RGB_MATR
 8535              		.loc 28 572 5 is_stmt 1 view .LVU2036
 572:quantum/rgb_matrix.c ****     if (rgb_matrix_config.hsv.v > RGB_MATRIX_MAXIMUM_BRIGHTNESS) rgb_matrix_config.hsv.v = RGB_MATR
 8536              		.loc 28 572 29 is_stmt 0 view .LVU2037
 8537 0006 DA70     		strb	r2, [r3, #3]
 8538              		.loc 28 573 5 is_stmt 1 view .LVU2038
 574:quantum/rgb_matrix.c **** }
 8539              		.loc 28 574 1 is_stmt 0 view .LVU2039
 8540 0008 7047     		bx	lr
 8541              	.L499:
 8542 000a 00BF     		.align	2
 8543              	.L498:
 8544 000c 00000000 		.word	rgb_matrix_config
 8545              		.cfi_endproc
 8546              	.LFE195:
 8548              		.section	.text.rgb_matrix_get_hsv,"ax",%progbits
 8549              		.align	1
 8550              		.global	rgb_matrix_get_hsv
 8551              		.syntax unified
 8552              		.thumb
 8553              		.thumb_func
 8554              		.fpu fpv4-sp-d16
 8556              	rgb_matrix_get_hsv:
 8557              	.LFB196:
 575:quantum/rgb_matrix.c **** 
 576:quantum/rgb_matrix.c **** HSV     rgb_matrix_get_hsv(void) { return rgb_matrix_config.hsv; }
 8558              		.loc 28 576 34 is_stmt 1 view -0
 8559              		.cfi_startproc
 8560              		@ args = 0, pretend = 0, frame = 8
 8561              		@ frame_needed = 0, uses_anonymous_args = 0
 8562              		@ link register save eliminated.
 8563              		.loc 28 576 36 view .LVU2041
 8564              		.loc 28 576 60 is_stmt 0 view .LVU2042
 8565 0000 094B     		ldr	r3, .L501
 8566              		.loc 28 576 34 view .LVU2043
 8567 0002 82B0     		sub	sp, sp, #8
 8568              		.cfi_def_cfa_offset 8
 8569              		.loc 28 576 60 view .LVU2044
 8570 0004 33F8012F 		ldrh	r2, [r3, #1]!	@ unaligned
 8571 0008 ADF80420 		strh	r2, [sp, #4]	@ unaligned
 8572 000c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 8573 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 8574 0012 0020     		movs	r0, #0
 8575 0014 62F30700 		bfi	r0, r2, #0, #8
 8576 0018 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 8577 001c 62F30F20 		bfi	r0, r2, #8, #8
 8578 0020 63F31740 		bfi	r0, r3, #16, #8
 8579              		.loc 28 576 1 view .LVU2045
 8580 0024 02B0     		add	sp, sp, #8
 8581              		.cfi_def_cfa_offset 0
 8582              		@ sp needed
 8583 0026 7047     		bx	lr
 8584              	.L502:
 8585              		.align	2
 8586              	.L501:
 8587 0028 00000000 		.word	rgb_matrix_config
 8588              		.cfi_endproc
 8589              	.LFE196:
 8591              		.section	.text.rgb_matrix_get_hue,"ax",%progbits
 8592              		.align	1
 8593              		.global	rgb_matrix_get_hue
 8594              		.syntax unified
 8595              		.thumb
 8596              		.thumb_func
 8597              		.fpu fpv4-sp-d16
 8599              	rgb_matrix_get_hue:
 8600              	.LFB197:
 577:quantum/rgb_matrix.c **** uint8_t rgb_matrix_get_hue(void) { return rgb_matrix_config.hsv.h; }
 8601              		.loc 28 577 34 is_stmt 1 view -0
 8602              		.cfi_startproc
 8603              		@ args = 0, pretend = 0, frame = 0
 8604              		@ frame_needed = 0, uses_anonymous_args = 0
 8605              		@ link register save eliminated.
 8606              		.loc 28 577 36 view .LVU2047
 8607              		.loc 28 577 1 is_stmt 0 view .LVU2048
 8608 0000 014B     		ldr	r3, .L504
 8609 0002 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 8610 0004 7047     		bx	lr
 8611              	.L505:
 8612 0006 00BF     		.align	2
 8613              	.L504:
 8614 0008 00000000 		.word	rgb_matrix_config
 8615              		.cfi_endproc
 8616              	.LFE197:
 8618              		.section	.text.rgb_matrix_get_sat,"ax",%progbits
 8619              		.align	1
 8620              		.global	rgb_matrix_get_sat
 8621              		.syntax unified
 8622              		.thumb
 8623              		.thumb_func
 8624              		.fpu fpv4-sp-d16
 8626              	rgb_matrix_get_sat:
 8627              	.LFB198:
 578:quantum/rgb_matrix.c **** uint8_t rgb_matrix_get_sat(void) { return rgb_matrix_config.hsv.s; }
 8628              		.loc 28 578 34 is_stmt 1 view -0
 8629              		.cfi_startproc
 8630              		@ args = 0, pretend = 0, frame = 0
 8631              		@ frame_needed = 0, uses_anonymous_args = 0
 8632              		@ link register save eliminated.
 8633              		.loc 28 578 36 view .LVU2050
 8634              		.loc 28 578 1 is_stmt 0 view .LVU2051
 8635 0000 014B     		ldr	r3, .L507
 8636 0002 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 8637 0004 7047     		bx	lr
 8638              	.L508:
 8639 0006 00BF     		.align	2
 8640              	.L507:
 8641 0008 00000000 		.word	rgb_matrix_config
 8642              		.cfi_endproc
 8643              	.LFE198:
 8645              		.section	.text.rgb_matrix_get_val,"ax",%progbits
 8646              		.align	1
 8647              		.global	rgb_matrix_get_val
 8648              		.syntax unified
 8649              		.thumb
 8650              		.thumb_func
 8651              		.fpu fpv4-sp-d16
 8653              	rgb_matrix_get_val:
 8654              	.LFB199:
 579:quantum/rgb_matrix.c **** uint8_t rgb_matrix_get_val(void) { return rgb_matrix_config.hsv.v; }
 8655              		.loc 28 579 34 is_stmt 1 view -0
 8656              		.cfi_startproc
 8657              		@ args = 0, pretend = 0, frame = 0
 8658              		@ frame_needed = 0, uses_anonymous_args = 0
 8659              		@ link register save eliminated.
 8660              		.loc 28 579 36 view .LVU2053
 8661              		.loc 28 579 1 is_stmt 0 view .LVU2054
 8662 0000 014B     		ldr	r3, .L510
 8663 0002 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 8664 0004 7047     		bx	lr
 8665              	.L511:
 8666 0006 00BF     		.align	2
 8667              	.L510:
 8668 0008 00000000 		.word	rgb_matrix_config
 8669              		.cfi_endproc
 8670              	.LFE199:
 8672              		.comm	g_last_hit_tracker,41,1
 8673              		.comm	g_rgb_timer,4,4
 8674              		.comm	rgb_matrix_config,8,4
 8675              		.global	g_suspend_state
 8676              		.global	k_rgb_matrix_center
 8677              		.section	.rodata
 8678              		.set	.LANCHOR0,. + 0
 8681              	b_m16_interleave:
 8682 0000 00       		.byte	0
 8683 0001 31       		.byte	49
 8684 0002 31       		.byte	49
 8685 0003 29       		.byte	41
 8686 0004 5A       		.byte	90
 8687 0005 1B       		.byte	27
 8688 0006 75       		.byte	117
 8689 0007 0A       		.byte	10
 8690              	.LC0:
 8691 0008 00       		.byte	0
 8692 0009 FF       		.byte	-1
 8693 000a FF       		.byte	-1
 8696              	k_rgb_matrix_center:
 8697 000b 70       		.byte	112
 8698 000c 20       		.byte	32
 8699              		.data
 8700              		.set	.LANCHOR2,. + 0
 8703              	rgb_task_state:
 8704 0000 03       		.byte	3
 8707              	rgb_effect_params:
 8708 0001 00       		.byte	0
 8709 0002 FF       		.byte	-1
 8710 0003 00       		.space	1
 8713              	rgb_last_effect:
 8714 0004 FF       		.byte	-1
 8717              	rgb_last_enable:
 8718 0005 FF       		.byte	-1
 8719              		.bss
 8720              		.align	2
 8721              		.set	.LANCHOR1,. + 0
 8724              	last_hit_buffer:
 8725 0000 00000000 		.space	41
 8725      00000000 
 8725      00000000 
 8725      00000000 
 8725      00000000 
 8726 0029 000000   		.space	3
 8729              	rgb_timer_buffer:
 8730 002c 00000000 		.space	4
 8733              	g_suspend_state:
 8734 0030 00       		.space	1
 8735              		.text
 8736              	.Letext0:
 8737              		.file 42 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/arm-none-eabi/include/machine/_default_
 8738              		.file 43 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 8739              		.file 44 "quantum/color.h"
 8740              		.file 45 "quantum/rgb_matrix_types.h"
 8741              		.file 46 "tmk_core/protocol/arm_atsam/clks.h"
 8742              		.file 47 "tmk_core/common/keyboard.h"
 8743              		.file 48 "tmk_core/common/action.h"
 8744              		.file 49 "tmk_core/common/report.h"
 8745              		.file 50 "tmk_core/common/host.h"
 8746              		.file 51 "tmk_core/common/debug.h"
 8747              		.file 52 "quantum/keycode_config.h"
 8748              		.file 53 "quantum/keymap.h"
 8749              		.file 54 "tmk_core/common/action_layer.h"
 8750              		.file 55 "tmk_core/common/timer.h"
 8751              		.file 56 "tmk_core/common/action_util.h"
 8752              		.file 57 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1/include/std
 8753              		.file 58 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/arm-none-eabi/include/sys/_types.h"
 8754              		.file 59 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/arm-none-eabi/include/sys/reent.h"
 8755              		.file 60 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/arm-none-eabi/include/sys/lock.h"
 8756              		.file 61 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/arm-none-eabi/include/stdlib.h"
 8757              		.file 62 "quantum/quantum.h"
 8758              		.file 63 "quantum/rgb_matrix.h"
 8759              		.file 64 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/arm-none-eabi/include/math.h"
 8760              		.file 65 "./lib/lib8tion/lib8tion.h"
 8761              		.file 66 "./lib/lib8tion/random8.h"
 8762              		.file 67 "tmk_core/common/eeconfig.h"
 8763              		.file 68 "tmk_core/common/eeprom.h"
 8764              		.file 69 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgb_matrix.c
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:18     .text.sqrt16:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:25     .text.sqrt16:0000000000000000 sqrt16
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:132    .text.sin8_C:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:138    .text.sin8_C:0000000000000000 sin8_C
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:231    .text.sin8_C:000000000000003c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:236    .text.BAND_SAT_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:242    .text.BAND_SAT_math:0000000000000000 BAND_SAT_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:338    .text.BAND_SAT_math:0000000000000054 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:343    .text.BAND_VAL_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:349    .text.BAND_VAL_math:0000000000000000 BAND_VAL_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:444    .text.BAND_VAL_math:0000000000000054 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:449    .text.CYCLE_ALL_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:455    .text.CYCLE_ALL_math:0000000000000000 CYCLE_ALL_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:495    .text.CYCLE_LEFT_RIGHT_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:501    .text.CYCLE_LEFT_RIGHT_math:0000000000000000 CYCLE_LEFT_RIGHT_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:545    .text.CYCLE_LEFT_RIGHT_math:0000000000000030 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:550    .text.CYCLE_UP_DOWN_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:556    .text.CYCLE_UP_DOWN_math:0000000000000000 CYCLE_UP_DOWN_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:600    .text.CYCLE_UP_DOWN_math:0000000000000034 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:605    .text.RAINBOW_MOVING_CHEVRON_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:611    .text.RAINBOW_MOVING_CHEVRON_math:0000000000000000 RAINBOW_MOVING_CHEVRON_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:696    .text.RAINBOW_MOVING_CHEVRON_math:000000000000004c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:701    .text.CYCLE_OUT_IN_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:707    .text.CYCLE_OUT_IN_math:0000000000000000 CYCLE_OUT_IN_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:753    .text.CYCLE_OUT_IN_DUAL_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:759    .text.CYCLE_OUT_IN_DUAL_math:0000000000000000 CYCLE_OUT_IN_DUAL_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:840    .text.DUAL_BEACON_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:846    .text.DUAL_BEACON_math:0000000000000000 DUAL_BEACON_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:915    .text.DUAL_BEACON_math:000000000000004c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:920    .text.RAINBOW_BEACON_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:926    .text.RAINBOW_BEACON_math:0000000000000000 RAINBOW_BEACON_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:995    .text.RAINBOW_BEACON_math:000000000000004c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1000   .text.RAINBOW_PINWHEELS_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1006   .text.RAINBOW_PINWHEELS_math:0000000000000000 RAINBOW_PINWHEELS_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1101   .text.RAINBOW_PINWHEELS_math:0000000000000060 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1106   .text.SOLID_REACTIVE_SIMPLE_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1112   .text.SOLID_REACTIVE_SIMPLE_math:0000000000000000 SOLID_REACTIVE_SIMPLE_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1170   .text.SOLID_REACTIVE_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1176   .text.SOLID_REACTIVE_math:0000000000000000 SOLID_REACTIVE_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1241   .text.SOLID_REACTIVE_WIDE_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1247   .text.SOLID_REACTIVE_WIDE_math:0000000000000000 SOLID_REACTIVE_WIDE_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1340   .text.SOLID_REACTIVE_CROSS_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1346   .text.SOLID_REACTIVE_CROSS_math:0000000000000000 SOLID_REACTIVE_CROSS_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1477   .text.SOLID_REACTIVE_NEXUS_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1483   .text.SOLID_REACTIVE_NEXUS_math:0000000000000000 SOLID_REACTIVE_NEXUS_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1622   .text.SOLID_REACTIVE_NEXUS_math:0000000000000074 $d
                            *COM*:0000000000000008 rgb_matrix_config
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1627   .text.SPLASH_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1634   .text.SPLASH_math:0000000000000000 SPLASH_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1747   .text.SOLID_SPLASH_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1754   .text.SOLID_SPLASH_math:0000000000000000 SOLID_SPLASH_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1844   .text.atan2_8:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1850   .text.atan2_8:0000000000000000 atan2_8
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1933   .text.BAND_PINWHEEL_SAT_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:1939   .text.BAND_PINWHEEL_SAT_math:0000000000000000 BAND_PINWHEEL_SAT_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2013   .text.BAND_PINWHEEL_VAL_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2019   .text.BAND_PINWHEEL_VAL_math:0000000000000000 BAND_PINWHEEL_VAL_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2093   .text.BAND_SPIRAL_SAT_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2099   .text.BAND_SPIRAL_SAT_math:0000000000000000 BAND_SPIRAL_SAT_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2174   .text.BAND_SPIRAL_VAL_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2180   .text.BAND_SPIRAL_VAL_math:0000000000000000 BAND_SPIRAL_VAL_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2255   .text.CYCLE_PINWHEEL_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2261   .text.CYCLE_PINWHEEL_math:0000000000000000 CYCLE_PINWHEEL_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2309   .text.CYCLE_SPIRAL_math:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2315   .text.CYCLE_SPIRAL_math:0000000000000000 CYCLE_SPIRAL_math
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2369   .text.eeconfig_read_rgb_matrix:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2376   .text.eeconfig_read_rgb_matrix:0000000000000000 eeconfig_read_rgb_matrix
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2393   .text.eeconfig_read_rgb_matrix:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2398   .text.eeconfig_update_rgb_matrix:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2405   .text.eeconfig_update_rgb_matrix:0000000000000000 eeconfig_update_rgb_matrix
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2421   .text.eeconfig_update_rgb_matrix:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2426   .text.eeconfig_update_rgb_matrix_default:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2433   .text.eeconfig_update_rgb_matrix_default:0000000000000000 eeconfig_update_rgb_matrix_default
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2465   .text.eeconfig_update_rgb_matrix_default:0000000000000020 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2471   .text.eeconfig_debug_rgb_matrix:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2478   .text.eeconfig_debug_rgb_matrix:0000000000000000 eeconfig_debug_rgb_matrix
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2498   .text.rgb_matrix_map_row_column_to_led_kb:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2505   .text.rgb_matrix_map_row_column_to_led_kb:0000000000000000 rgb_matrix_map_row_column_to_led_kb
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2523   .text.rgb_matrix_map_row_column_to_led:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2530   .text.rgb_matrix_map_row_column_to_led:0000000000000000 rgb_matrix_map_row_column_to_led
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2580   .text.rgb_matrix_map_row_column_to_led:0000000000000020 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2585   .text.rgb_matrix_update_pwm_buffers:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2592   .text.rgb_matrix_update_pwm_buffers:0000000000000000 rgb_matrix_update_pwm_buffers
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2609   .text.rgb_matrix_update_pwm_buffers:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2614   .text.rgb_matrix_set_color:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2621   .text.rgb_matrix_set_color:0000000000000000 rgb_matrix_set_color
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2650   .text.rgb_matrix_set_color:0000000000000010 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2655   .text.effect_runner_dx_dy_dist:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2662   .text.effect_runner_dx_dy_dist:0000000000000000 effect_runner_dx_dy_dist
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2854   .text.effect_runner_dx_dy_dist:00000000000000d8 $d
                            *COM*:0000000000000004 g_rgb_timer
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2863   .text.BAND_SPIRAL_SAT:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2870   .text.BAND_SPIRAL_SAT:0000000000000000 BAND_SPIRAL_SAT
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2887   .text.BAND_SPIRAL_SAT:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2892   .text.BAND_SPIRAL_VAL:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2899   .text.BAND_SPIRAL_VAL:0000000000000000 BAND_SPIRAL_VAL
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2916   .text.BAND_SPIRAL_VAL:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2921   .text.CYCLE_OUT_IN:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2928   .text.CYCLE_OUT_IN:0000000000000000 CYCLE_OUT_IN
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2945   .text.CYCLE_OUT_IN:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2950   .text.CYCLE_SPIRAL:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2957   .text.CYCLE_SPIRAL:0000000000000000 CYCLE_SPIRAL
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2974   .text.CYCLE_SPIRAL:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2979   .text.effect_runner_dx_dy:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:2986   .text.effect_runner_dx_dy:0000000000000000 effect_runner_dx_dy
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3163   .text.effect_runner_dx_dy:00000000000000b4 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3172   .text.BAND_PINWHEEL_SAT:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3179   .text.BAND_PINWHEEL_SAT:0000000000000000 BAND_PINWHEEL_SAT
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3196   .text.BAND_PINWHEEL_SAT:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3201   .text.BAND_PINWHEEL_VAL:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3208   .text.BAND_PINWHEEL_VAL:0000000000000000 BAND_PINWHEEL_VAL
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3225   .text.BAND_PINWHEEL_VAL:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3230   .text.CYCLE_OUT_IN_DUAL:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3237   .text.CYCLE_OUT_IN_DUAL:0000000000000000 CYCLE_OUT_IN_DUAL
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3254   .text.CYCLE_OUT_IN_DUAL:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3259   .text.CYCLE_PINWHEEL:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3266   .text.CYCLE_PINWHEEL:0000000000000000 CYCLE_PINWHEEL
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3283   .text.CYCLE_PINWHEEL:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3288   .text.effect_runner_i:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3295   .text.effect_runner_i:0000000000000000 effect_runner_i
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3446   .text.effect_runner_i:000000000000009c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3455   .text.BAND_SAT:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3462   .text.BAND_SAT:0000000000000000 BAND_SAT
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3479   .text.BAND_SAT:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3484   .text.BAND_VAL:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3491   .text.BAND_VAL:0000000000000000 BAND_VAL
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3508   .text.BAND_VAL:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3513   .text.CYCLE_ALL:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3520   .text.CYCLE_ALL:0000000000000000 CYCLE_ALL
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3537   .text.CYCLE_ALL:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3542   .text.CYCLE_LEFT_RIGHT:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3549   .text.CYCLE_LEFT_RIGHT:0000000000000000 CYCLE_LEFT_RIGHT
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3566   .text.CYCLE_LEFT_RIGHT:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3571   .text.CYCLE_UP_DOWN:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3578   .text.CYCLE_UP_DOWN:0000000000000000 CYCLE_UP_DOWN
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3595   .text.CYCLE_UP_DOWN:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3600   .text.RAINBOW_MOVING_CHEVRON:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3607   .text.RAINBOW_MOVING_CHEVRON:0000000000000000 RAINBOW_MOVING_CHEVRON
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3624   .text.RAINBOW_MOVING_CHEVRON:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3629   .text.effect_runner_sin_cos_i:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3636   .text.effect_runner_sin_cos_i:0000000000000000 effect_runner_sin_cos_i
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3832   .text.effect_runner_sin_cos_i:00000000000000bc $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3841   .text.DUAL_BEACON:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3848   .text.DUAL_BEACON:0000000000000000 DUAL_BEACON
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3865   .text.DUAL_BEACON:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3870   .text.RAINBOW_BEACON:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3877   .text.RAINBOW_BEACON:0000000000000000 RAINBOW_BEACON
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3894   .text.RAINBOW_BEACON:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3899   .text.RAINBOW_PINWHEELS:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3906   .text.RAINBOW_PINWHEELS:0000000000000000 RAINBOW_PINWHEELS
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3923   .text.RAINBOW_PINWHEELS:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3928   .text.effect_runner_reactive:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:3935   .text.effect_runner_reactive:0000000000000000 effect_runner_reactive
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4141   .text.effect_runner_reactive:00000000000000cc $d
                            *COM*:0000000000000029 g_last_hit_tracker
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4152   .text.SOLID_REACTIVE_SIMPLE:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4159   .text.SOLID_REACTIVE_SIMPLE:0000000000000000 SOLID_REACTIVE_SIMPLE
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4176   .text.SOLID_REACTIVE_SIMPLE:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4181   .text.SOLID_REACTIVE:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4188   .text.SOLID_REACTIVE:0000000000000000 SOLID_REACTIVE
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4205   .text.SOLID_REACTIVE:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4210   .text.effect_runner_reactive_splash:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4217   .text.effect_runner_reactive_splash:0000000000000000 effect_runner_reactive_splash
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4509   .text.effect_runner_reactive_splash:0000000000000120 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4521   .text.SOLID_REACTIVE_WIDE:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4528   .text.SOLID_REACTIVE_WIDE:0000000000000000 SOLID_REACTIVE_WIDE
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4576   .text.SOLID_REACTIVE_WIDE:0000000000000018 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4582   .text.SOLID_REACTIVE_MULTIWIDE:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4589   .text.SOLID_REACTIVE_MULTIWIDE:0000000000000000 SOLID_REACTIVE_MULTIWIDE
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4610   .text.SOLID_REACTIVE_MULTIWIDE:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4615   .text.SOLID_REACTIVE_CROSS:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4622   .text.SOLID_REACTIVE_CROSS:0000000000000000 SOLID_REACTIVE_CROSS
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4670   .text.SOLID_REACTIVE_CROSS:0000000000000018 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4676   .text.SOLID_REACTIVE_MULTICROSS:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4683   .text.SOLID_REACTIVE_MULTICROSS:0000000000000000 SOLID_REACTIVE_MULTICROSS
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4704   .text.SOLID_REACTIVE_MULTICROSS:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4709   .text.SOLID_REACTIVE_NEXUS:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4716   .text.SOLID_REACTIVE_NEXUS:0000000000000000 SOLID_REACTIVE_NEXUS
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4764   .text.SOLID_REACTIVE_NEXUS:0000000000000018 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4770   .text.SOLID_REACTIVE_MULTINEXUS:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4777   .text.SOLID_REACTIVE_MULTINEXUS:0000000000000000 SOLID_REACTIVE_MULTINEXUS
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4798   .text.SOLID_REACTIVE_MULTINEXUS:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4803   .text.SPLASH:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4810   .text.SPLASH:0000000000000000 SPLASH
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4858   .text.SPLASH:0000000000000018 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4864   .text.MULTISPLASH:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4871   .text.MULTISPLASH:0000000000000000 MULTISPLASH
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4892   .text.MULTISPLASH:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4897   .text.SOLID_SPLASH:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4904   .text.SOLID_SPLASH:0000000000000000 SOLID_SPLASH
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4952   .text.SOLID_SPLASH:0000000000000018 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4958   .text.SOLID_MULTISPLASH:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4965   .text.SOLID_MULTISPLASH:0000000000000000 SOLID_MULTISPLASH
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4986   .text.SOLID_MULTISPLASH:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4991   .text.SOLID_COLOR:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:4998   .text.SOLID_COLOR:0000000000000000 SOLID_COLOR
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5110   .text.SOLID_COLOR:000000000000007c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5117   .text.ALPHAS_MODS:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5124   .text.ALPHAS_MODS:0000000000000000 ALPHAS_MODS
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5277   .text.ALPHAS_MODS:00000000000000c4 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5284   .text.GRADIENT_UP_DOWN:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5291   .text.GRADIENT_UP_DOWN:0000000000000000 GRADIENT_UP_DOWN
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5435   .text.GRADIENT_UP_DOWN:0000000000000088 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5443   .text.GRADIENT_LEFT_RIGHT:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5450   .text.GRADIENT_LEFT_RIGHT:0000000000000000 GRADIENT_LEFT_RIGHT
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5593   .text.GRADIENT_LEFT_RIGHT:0000000000000088 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5601   .text.BREATHING:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5608   .text.BREATHING:0000000000000000 BREATHING
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5802   .text.BREATHING:00000000000000b0 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5810   .text.raindrops_set_color.isra.1:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5816   .text.raindrops_set_color.isra.1:0000000000000000 raindrops_set_color.isra.1
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5910   .text.raindrops_set_color.isra.1:000000000000006c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5916   .text.RAINDROPS:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:5923   .text.RAINDROPS:0000000000000000 RAINDROPS
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6070   .text.RAINDROPS:0000000000000074 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6077   .text.jellybean_raindrops_set_color.isra.2:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6083   .text.jellybean_raindrops_set_color.isra.2:0000000000000000 jellybean_raindrops_set_color.isra.2
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6155   .text.jellybean_raindrops_set_color.isra.2:0000000000000048 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6161   .text.JELLYBEAN_RAINDROPS:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6168   .text.JELLYBEAN_RAINDROPS:0000000000000000 JELLYBEAN_RAINDROPS
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6316   .text.JELLYBEAN_RAINDROPS:0000000000000078 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6323   .text.rgb_matrix_set_color_all:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6330   .text.rgb_matrix_set_color_all:0000000000000000 rgb_matrix_set_color_all
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6349   .text.rgb_matrix_set_color_all:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6354   .text.process_rgb_matrix:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6361   .text.process_rgb_matrix:0000000000000000 process_rgb_matrix
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6538   .text.process_rgb_matrix:00000000000000bc $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6546   .text.rgb_matrix_test:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6553   .text.rgb_matrix_test:0000000000000000 rgb_matrix_test
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6604   .text.rgb_matrix_test:0000000000000034 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6609   .text.rgb_matrix_indicators_kb:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6616   .text.rgb_matrix_indicators_kb:0000000000000000 rgb_matrix_indicators_kb
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6616   .text.rgb_matrix_indicators_kb:0000000000000000 rgb_matrix_indicators_kb.localalias.4
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6631   .text.rgb_matrix_indicators_user:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6638   .text.rgb_matrix_indicators_user:0000000000000000 rgb_matrix_indicators_user
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6649   .text.rgb_matrix_indicators:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6656   .text.rgb_matrix_indicators:0000000000000000 rgb_matrix_indicators
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6680   .text.rgb_matrix_task:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6687   .text.rgb_matrix_task:0000000000000000 rgb_matrix_task
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6781   .text.rgb_matrix_task:0000000000000048 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6786   .text.rgb_matrix_task:0000000000000050 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6911   .text.rgb_matrix_task:00000000000000c0 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7352   .text.rgb_matrix_task:0000000000000258 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7364   .text.rgb_matrix_init:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7371   .text.rgb_matrix_init:0000000000000000 rgb_matrix_init
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7537   .text.rgb_matrix_init:00000000000000a0 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7545   .text.rgb_matrix_set_suspend_state:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7552   .text.rgb_matrix_set_suspend_state:0000000000000000 rgb_matrix_set_suspend_state
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7570   .text.rgb_matrix_set_suspend_state:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7575   .text.rgb_matrix_get_suspend_state:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7582   .text.rgb_matrix_get_suspend_state:0000000000000000 rgb_matrix_get_suspend_state
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7597   .text.rgb_matrix_get_suspend_state:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7602   .text.rgb_matrix_toggle:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7609   .text.rgb_matrix_toggle:0000000000000000 rgb_matrix_toggle
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7633   .text.rgb_matrix_toggle:0000000000000014 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7639   .text.rgb_matrix_enable_noeeprom:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7646   .text.rgb_matrix_enable_noeeprom:0000000000000000 rgb_matrix_enable_noeeprom
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7675   .text.rgb_matrix_enable_noeeprom:000000000000001c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7681   .text.rgb_matrix_enable:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7688   .text.rgb_matrix_enable:0000000000000000 rgb_matrix_enable
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7716   .text.rgb_matrix_disable_noeeprom:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7723   .text.rgb_matrix_disable_noeeprom:0000000000000000 rgb_matrix_disable_noeeprom
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7752   .text.rgb_matrix_disable_noeeprom:0000000000000018 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7758   .text.rgb_matrix_disable:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7765   .text.rgb_matrix_disable:0000000000000000 rgb_matrix_disable
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7793   .text.rgb_matrix_is_enabled:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7800   .text.rgb_matrix_is_enabled:0000000000000000 rgb_matrix_is_enabled
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7817   .text.rgb_matrix_is_enabled:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7822   .text.rgb_matrix_step:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7829   .text.rgb_matrix_step:0000000000000000 rgb_matrix_step
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7864   .text.rgb_matrix_step:0000000000000024 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7870   .text.rgb_matrix_step_reverse:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7877   .text.rgb_matrix_step_reverse:0000000000000000 rgb_matrix_step_reverse
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7912   .text.rgb_matrix_step_reverse:0000000000000024 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7918   .text.rgb_matrix_increase_hue:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7925   .text.rgb_matrix_increase_hue:0000000000000000 rgb_matrix_increase_hue
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7944   .text.rgb_matrix_increase_hue:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7949   .text.rgb_matrix_decrease_hue:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7956   .text.rgb_matrix_decrease_hue:0000000000000000 rgb_matrix_decrease_hue
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7975   .text.rgb_matrix_decrease_hue:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7980   .text.rgb_matrix_increase_sat:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:7987   .text.rgb_matrix_increase_sat:0000000000000000 rgb_matrix_increase_sat
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8027   .text.rgb_matrix_increase_sat:0000000000000014 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8032   .text.rgb_matrix_decrease_sat:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8039   .text.rgb_matrix_decrease_sat:0000000000000000 rgb_matrix_decrease_sat
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8076   .text.rgb_matrix_decrease_sat:0000000000000010 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8081   .text.rgb_matrix_increase_val:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8088   .text.rgb_matrix_increase_val:0000000000000000 rgb_matrix_increase_val
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8129   .text.rgb_matrix_increase_val:0000000000000014 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8134   .text.rgb_matrix_decrease_val:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8141   .text.rgb_matrix_decrease_val:0000000000000000 rgb_matrix_decrease_val
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8178   .text.rgb_matrix_decrease_val:0000000000000010 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8183   .text.rgb_matrix_increase_speed:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8190   .text.rgb_matrix_increase_speed:0000000000000000 rgb_matrix_increase_speed
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8230   .text.rgb_matrix_increase_speed:0000000000000014 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8235   .text.rgb_matrix_decrease_speed:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8242   .text.rgb_matrix_decrease_speed:0000000000000000 rgb_matrix_decrease_speed
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8279   .text.rgb_matrix_decrease_speed:0000000000000010 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8284   .text.rgb_matrix_get_speed:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8291   .text.rgb_matrix_get_speed:0000000000000000 rgb_matrix_get_speed
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8306   .text.rgb_matrix_get_speed:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8311   .text.rgb_matrix_get_flags:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8318   .text.rgb_matrix_get_flags:0000000000000000 rgb_matrix_get_flags
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8333   .text.rgb_matrix_get_flags:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8338   .text.rgb_matrix_set_flags:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8345   .text.rgb_matrix_set_flags:0000000000000000 rgb_matrix_set_flags
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8362   .text.rgb_matrix_set_flags:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8367   .text.rgb_matrix_mode:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8374   .text.rgb_matrix_mode:0000000000000000 rgb_matrix_mode
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8400   .text.rgb_matrix_mode:0000000000000014 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8406   .text.rgb_matrix_mode_noeeprom:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8413   .text.rgb_matrix_mode_noeeprom:0000000000000000 rgb_matrix_mode_noeeprom
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8432   .text.rgb_matrix_mode_noeeprom:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8437   .text.rgb_matrix_get_mode:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8444   .text.rgb_matrix_get_mode:0000000000000000 rgb_matrix_get_mode
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8461   .text.rgb_matrix_get_mode:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8466   .text.rgb_matrix_sethsv:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8473   .text.rgb_matrix_sethsv:0000000000000000 rgb_matrix_sethsv
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8508   .text.rgb_matrix_sethsv:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8513   .text.rgb_matrix_sethsv_noeeprom:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8520   .text.rgb_matrix_sethsv_noeeprom:0000000000000000 rgb_matrix_sethsv_noeeprom
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8544   .text.rgb_matrix_sethsv_noeeprom:000000000000000c $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8549   .text.rgb_matrix_get_hsv:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8556   .text.rgb_matrix_get_hsv:0000000000000000 rgb_matrix_get_hsv
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8587   .text.rgb_matrix_get_hsv:0000000000000028 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8592   .text.rgb_matrix_get_hue:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8599   .text.rgb_matrix_get_hue:0000000000000000 rgb_matrix_get_hue
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8614   .text.rgb_matrix_get_hue:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8619   .text.rgb_matrix_get_sat:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8626   .text.rgb_matrix_get_sat:0000000000000000 rgb_matrix_get_sat
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8641   .text.rgb_matrix_get_sat:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8646   .text.rgb_matrix_get_val:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8653   .text.rgb_matrix_get_val:0000000000000000 rgb_matrix_get_val
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8668   .text.rgb_matrix_get_val:0000000000000008 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8733   .bss:0000000000000030 g_suspend_state
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8696   .rodata:000000000000000b k_rgb_matrix_center
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8681   .rodata:0000000000000000 b_m16_interleave
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8703   .data:0000000000000000 rgb_task_state
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8707   .data:0000000000000001 rgb_effect_params
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8710   .data:0000000000000003 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8713   .data:0000000000000004 rgb_last_effect
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8717   .data:0000000000000005 rgb_last_enable
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8720   .bss:0000000000000000 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8724   .bss:0000000000000000 last_hit_buffer
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:8729   .bss:000000000000002c rgb_timer_buffer
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6948   .text.rgb_matrix_task:00000000000000e5 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccW4yZ7e.s:6948   .text.rgb_matrix_task:00000000000000e6 $t

UNDEFINED SYMBOLS
g_led_config
eeprom_read_block
eeprom_update_block
rgb_matrix_driver
hsv_to_rgb
rand
memcpy
timer_elapsed32
timer_read32
eeconfig_is_enabled
eeconfig_init
