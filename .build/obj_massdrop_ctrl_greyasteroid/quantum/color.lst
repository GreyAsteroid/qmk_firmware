   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"color.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.hsv_to_rgb,"ax",%progbits
  18              		.align	1
  19              		.global	hsv_to_rgb
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	hsv_to_rgb:
  27              	.LFB0:
  28              		.file 1 "quantum/color.c"
   1:quantum/color.c **** /* Copyright 2017 Jason Williams
   2:quantum/color.c ****  *
   3:quantum/color.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/color.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/color.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/color.c ****  * (at your option) any later version.
   7:quantum/color.c ****  *
   8:quantum/color.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/color.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/color.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/color.c ****  * GNU General Public License for more details.
  12:quantum/color.c ****  *
  13:quantum/color.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/color.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/color.c ****  */
  16:quantum/color.c **** 
  17:quantum/color.c **** #include "color.h"
  18:quantum/color.c **** #include "led_tables.h"
  19:quantum/color.c **** #include "progmem.h"
  20:quantum/color.c **** 
  21:quantum/color.c **** RGB hsv_to_rgb(HSV hsv) {
  29              		.loc 1 21 25 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 85B0     		sub	sp, sp, #20
  39              		.cfi_def_cfa_offset 32
  40 0004 C0F30723 		ubfx	r3, r0, #8, #8
  41              	.LVL0:
  22:quantum/color.c ****     RGB      rgb;
  42              		.loc 1 22 5 view .LVU1
  23:quantum/color.c ****     uint8_t  region, remainder, p, q, t;
  43              		.loc 1 23 5 view .LVU2
  24:quantum/color.c ****     uint16_t h, s, v;
  44              		.loc 1 24 5 view .LVU3
  25:quantum/color.c **** 
  26:quantum/color.c ****     if (hsv.s == 0) {
  45              		.loc 1 26 5 view .LVU4
  21:quantum/color.c ****     RGB      rgb;
  46              		.loc 1 21 25 is_stmt 0 view .LVU5
  47 0008 0190     		str	r0, [sp, #4]
  48              	.LVL1:
  21:quantum/color.c ****     RGB      rgb;
  49              		.loc 1 21 25 view .LVU6
  50 000a 314A     		ldr	r2, .L11
  51 000c C0F30740 		ubfx	r0, r0, #16, #8
  52 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
  53              		.loc 1 26 8 view .LVU7
  54 0012 A3B9     		cbnz	r3, .L2
  27:quantum/color.c **** #ifdef USE_CIE1931_CURVE
  28:quantum/color.c ****         rgb.r = rgb.g = rgb.b = pgm_read_byte(&CIE1931_CURVE[hsv.v]);
  55              		.loc 1 28 9 is_stmt 1 view .LVU8
  56              	.LVL2:
  29:quantum/color.c **** #else
  30:quantum/color.c ****         rgb.r = hsv.v;
  31:quantum/color.c ****         rgb.g = hsv.v;
  32:quantum/color.c ****         rgb.b = hsv.v;
  33:quantum/color.c **** #endif
  34:quantum/color.c ****         return rgb;
  57              		.loc 1 34 9 view .LVU9
  58              		.loc 1 34 16 is_stmt 0 view .LVU10
  59 0014 8DF80C20 		strb	r2, [sp, #12]
  60 0018 8DF80D20 		strb	r2, [sp, #13]
  61 001c 8DF80E20 		strb	r2, [sp, #14]
  62              	.LVL3:
  63              	.L3:
  64              		.loc 1 34 16 view .LVU11
  65 0020 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
  66 0024 0020     		movs	r0, #0
  67 0026 63F30700 		bfi	r0, r3, #0, #8
  68 002a 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
  69 002e 63F30F20 		bfi	r0, r3, #8, #8
  70 0032 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
  71 0036 63F31740 		bfi	r0, r3, #16, #8
  35:quantum/color.c ****     }
  36:quantum/color.c **** 
  37:quantum/color.c ****     h = hsv.h;
  38:quantum/color.c ****     s = hsv.s;
  39:quantum/color.c **** #ifdef USE_CIE1931_CURVE
  40:quantum/color.c ****     v = pgm_read_byte(&CIE1931_CURVE[hsv.v]);
  41:quantum/color.c **** #else
  42:quantum/color.c ****     v = hsv.v;
  43:quantum/color.c **** #endif
  44:quantum/color.c **** 
  45:quantum/color.c ****     region    = h * 6 / 255;
  46:quantum/color.c ****     remainder = (h * 2 - region * 85) * 3;
  47:quantum/color.c **** 
  48:quantum/color.c ****     p = (v * (255 - s)) >> 8;
  49:quantum/color.c ****     q = (v * (255 - ((s * remainder) >> 8))) >> 8;
  50:quantum/color.c ****     t = (v * (255 - ((s * (255 - remainder)) >> 8))) >> 8;
  51:quantum/color.c **** 
  52:quantum/color.c ****     switch (region) {
  53:quantum/color.c ****         case 6:
  54:quantum/color.c ****         case 0:
  55:quantum/color.c ****             rgb.r = v;
  56:quantum/color.c ****             rgb.g = t;
  57:quantum/color.c ****             rgb.b = p;
  58:quantum/color.c ****             break;
  59:quantum/color.c ****         case 1:
  60:quantum/color.c ****             rgb.r = q;
  61:quantum/color.c ****             rgb.g = v;
  62:quantum/color.c ****             rgb.b = p;
  63:quantum/color.c ****             break;
  64:quantum/color.c ****         case 2:
  65:quantum/color.c ****             rgb.r = p;
  66:quantum/color.c ****             rgb.g = v;
  67:quantum/color.c ****             rgb.b = t;
  68:quantum/color.c ****             break;
  69:quantum/color.c ****         case 3:
  70:quantum/color.c ****             rgb.r = p;
  71:quantum/color.c ****             rgb.g = q;
  72:quantum/color.c ****             rgb.b = v;
  73:quantum/color.c ****             break;
  74:quantum/color.c ****         case 4:
  75:quantum/color.c ****             rgb.r = t;
  76:quantum/color.c ****             rgb.g = p;
  77:quantum/color.c ****             rgb.b = v;
  78:quantum/color.c ****             break;
  79:quantum/color.c ****         default:
  80:quantum/color.c ****             rgb.r = v;
  81:quantum/color.c ****             rgb.g = p;
  82:quantum/color.c ****             rgb.b = q;
  83:quantum/color.c ****             break;
  84:quantum/color.c ****     }
  85:quantum/color.c **** 
  86:quantum/color.c ****     return rgb;
  87:quantum/color.c **** }
  72              		.loc 1 87 1 view .LVU12
  73 003a 05B0     		add	sp, sp, #20
  74              		.cfi_remember_state
  75              		.cfi_def_cfa_offset 12
  76              		@ sp needed
  77 003c 30BD     		pop	{r4, r5, pc}
  78              	.LVL4:
  79              	.L2:
  80              		.cfi_restore_state
  37:quantum/color.c ****     s = hsv.s;
  81              		.loc 1 37 5 is_stmt 1 view .LVU13
  37:quantum/color.c ****     s = hsv.s;
  82              		.loc 1 37 12 is_stmt 0 view .LVU14
  83 003e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
  84              	.LVL5:
  38:quantum/color.c **** #ifdef USE_CIE1931_CURVE
  85              		.loc 1 38 5 is_stmt 1 view .LVU15
  40:quantum/color.c **** #else
  86              		.loc 1 40 5 view .LVU16
  45:quantum/color.c ****     remainder = (h * 2 - region * 85) * 3;
  87              		.loc 1 45 5 view .LVU17
  45:quantum/color.c ****     remainder = (h * 2 - region * 85) * 3;
  88              		.loc 1 45 19 is_stmt 0 view .LVU18
  89 0042 01EB4104 		add	r4, r1, r1, lsl #1
  45:quantum/color.c ****     remainder = (h * 2 - region * 85) * 3;
  90              		.loc 1 45 23 view .LVU19
  91 0046 FF20     		movs	r0, #255
  45:quantum/color.c ****     remainder = (h * 2 - region * 85) * 3;
  92              		.loc 1 45 19 view .LVU20
  93 0048 6400     		lsls	r4, r4, #1
  45:quantum/color.c ****     remainder = (h * 2 - region * 85) * 3;
  94              		.loc 1 45 23 view .LVU21
  95 004a B4FBF0F4 		udiv	r4, r4, r0
  96              	.LVL6:
  46:quantum/color.c **** 
  97              		.loc 1 46 5 is_stmt 1 view .LVU22
  46:quantum/color.c **** 
  98              		.loc 1 46 33 is_stmt 0 view .LVU23
  99 004e 6FF05400 		mvn	r0, #84
 100 0052 6043     		muls	r0, r4, r0
  46:quantum/color.c **** 
 101              		.loc 1 46 24 view .LVU24
 102 0054 00EB4100 		add	r0, r0, r1, lsl #1
  46:quantum/color.c **** 
 103              		.loc 1 46 15 view .LVU25
 104 0058 00EB4000 		add	r0, r0, r0, lsl #1
 105 005c C0B2     		uxtb	r0, r0
 106              	.LVL7:
  48:quantum/color.c ****     q = (v * (255 - ((s * remainder) >> 8))) >> 8;
 107              		.loc 1 48 5 is_stmt 1 view .LVU26
  49:quantum/color.c ****     t = (v * (255 - ((s * (255 - remainder)) >> 8))) >> 8;
 108              		.loc 1 49 25 is_stmt 0 view .LVU27
 109 005e 13FB00F5 		smulbb	r5, r3, r0
  50:quantum/color.c **** 
 110              		.loc 1 50 32 view .LVU28
 111 0062 C0F1FF00 		rsb	r0, r0, #255
 112              	.LVL8:
  48:quantum/color.c ****     q = (v * (255 - ((s * remainder) >> 8))) >> 8;
 113              		.loc 1 48 19 view .LVU29
 114 0066 C3F1FF01 		rsb	r1, r3, #255
 115              	.LVL9:
  50:quantum/color.c **** 
 116              		.loc 1 50 25 view .LVU30
 117 006a 4343     		muls	r3, r0, r3
 118              	.LVL10:
  49:quantum/color.c ****     t = (v * (255 - ((s * (255 - remainder)) >> 8))) >> 8;
 119              		.loc 1 49 38 view .LVU31
 120 006c 2D12     		asrs	r5, r5, #8
  50:quantum/color.c **** 
 121              		.loc 1 50 46 view .LVU32
 122 006e 1B12     		asrs	r3, r3, #8
  49:quantum/color.c ****     t = (v * (255 - ((s * (255 - remainder)) >> 8))) >> 8;
 123              		.loc 1 49 19 view .LVU33
 124 0070 C5F1FF05 		rsb	r5, r5, #255
  50:quantum/color.c **** 
 125              		.loc 1 50 19 view .LVU34
 126 0074 C3F1FF03 		rsb	r3, r3, #255
  48:quantum/color.c ****     q = (v * (255 - ((s * remainder) >> 8))) >> 8;
 127              		.loc 1 48 12 view .LVU35
 128 0078 5143     		muls	r1, r2, r1
  49:quantum/color.c ****     t = (v * (255 - ((s * (255 - remainder)) >> 8))) >> 8;
 129              		.loc 1 49 12 view .LVU36
 130 007a 5543     		muls	r5, r2, r5
  50:quantum/color.c **** 
 131              		.loc 1 50 12 view .LVU37
 132 007c 5343     		muls	r3, r2, r3
  48:quantum/color.c ****     q = (v * (255 - ((s * remainder) >> 8))) >> 8;
 133              		.loc 1 48 7 view .LVU38
 134 007e C1F30721 		ubfx	r1, r1, #8, #8
 135              	.LVL11:
  49:quantum/color.c ****     t = (v * (255 - ((s * (255 - remainder)) >> 8))) >> 8;
 136              		.loc 1 49 5 is_stmt 1 view .LVU39
  49:quantum/color.c ****     t = (v * (255 - ((s * (255 - remainder)) >> 8))) >> 8;
 137              		.loc 1 49 7 is_stmt 0 view .LVU40
 138 0082 C5F30725 		ubfx	r5, r5, #8, #8
 139              	.LVL12:
  50:quantum/color.c **** 
 140              		.loc 1 50 5 is_stmt 1 view .LVU41
  50:quantum/color.c **** 
 141              		.loc 1 50 7 is_stmt 0 view .LVU42
 142 0086 C3F30723 		ubfx	r3, r3, #8, #8
 143              	.LVL13:
  52:quantum/color.c ****         case 6:
 144              		.loc 1 52 5 is_stmt 1 view .LVU43
 145 008a 062C     		cmp	r4, #6
 146 008c 1DD8     		bhi	.L4
 147 008e DFE804F0 		tbb	[pc, r4]
 148              	.L6:
 149 0092 06       		.byte	(.L5-.L6)/2
 150 0093 04       		.byte	(.L10-.L6)/2
 151 0094 0D       		.byte	(.L9-.L6)/2
 152 0095 12       		.byte	(.L8-.L6)/2
 153 0096 17       		.byte	(.L7-.L6)/2
 154 0097 1C       		.byte	(.L4-.L6)/2
 155 0098 06       		.byte	(.L5-.L6)/2
 156 0099 00       		.p2align 1
 157              	.L10:
  61:quantum/color.c ****             rgb.b = p;
 158              		.loc 1 61 19 is_stmt 0 view .LVU44
 159 009a 1346     		mov	r3, r2
 160              	.LVL14:
  60:quantum/color.c ****             rgb.g = v;
 161              		.loc 1 60 19 view .LVU45
 162 009c 2A46     		mov	r2, r5
 163              	.LVL15:
 164              	.L5:
  86:quantum/color.c **** }
 165              		.loc 1 86 5 is_stmt 1 view .LVU46
  86:quantum/color.c **** }
 166              		.loc 1 86 12 is_stmt 0 view .LVU47
 167 009e 8DF80C30 		strb	r3, [sp, #12]
 168 00a2 8DF80D20 		strb	r2, [sp, #13]
 169 00a6 8DF80E10 		strb	r1, [sp, #14]
 170 00aa B9E7     		b	.L3
 171              	.LVL16:
 172              	.L9:
  65:quantum/color.c ****             rgb.g = v;
 173              		.loc 1 65 13 is_stmt 1 view .LVU48
  66:quantum/color.c ****             rgb.b = t;
 174              		.loc 1 66 13 view .LVU49
  67:quantum/color.c ****             break;
 175              		.loc 1 67 13 view .LVU50
  68:quantum/color.c ****         case 3:
 176              		.loc 1 68 13 view .LVU51
 177 00ac 1846     		mov	r0, r3
  66:quantum/color.c ****             rgb.b = t;
 178              		.loc 1 66 19 is_stmt 0 view .LVU52
 179 00ae 1346     		mov	r3, r2
 180              	.LVL17:
  65:quantum/color.c ****             rgb.g = v;
 181              		.loc 1 65 19 view .LVU53
 182 00b0 0A46     		mov	r2, r1
  67:quantum/color.c ****             break;
 183              		.loc 1 67 19 view .LVU54
 184 00b2 0146     		mov	r1, r0
 185              	.LVL18:
  68:quantum/color.c ****         case 3:
 186              		.loc 1 68 13 view .LVU55
 187 00b4 F3E7     		b	.L5
 188              	.LVL19:
 189              	.L8:
  70:quantum/color.c ****             rgb.g = q;
 190              		.loc 1 70 13 is_stmt 1 view .LVU56
  71:quantum/color.c ****             rgb.b = v;
 191              		.loc 1 71 13 view .LVU57
  72:quantum/color.c ****             break;
 192              		.loc 1 72 13 view .LVU58
  73:quantum/color.c ****         case 4:
 193              		.loc 1 73 13 view .LVU59
 194 00b6 1346     		mov	r3, r2
 195              	.LVL20:
  70:quantum/color.c ****             rgb.g = q;
 196              		.loc 1 70 19 is_stmt 0 view .LVU60
 197 00b8 0A46     		mov	r2, r1
 198              	.LVL21:
  72:quantum/color.c ****             break;
 199              		.loc 1 72 19 view .LVU61
 200 00ba 1946     		mov	r1, r3
 201              	.LVL22:
  71:quantum/color.c ****             rgb.b = v;
 202              		.loc 1 71 19 view .LVU62
 203 00bc 2B46     		mov	r3, r5
 204              	.LVL23:
  73:quantum/color.c ****         case 4:
 205              		.loc 1 73 13 view .LVU63
 206 00be EEE7     		b	.L5
 207              	.LVL24:
 208              	.L7:
  75:quantum/color.c ****             rgb.g = p;
 209              		.loc 1 75 13 is_stmt 1 view .LVU64
  76:quantum/color.c ****             rgb.b = v;
 210              		.loc 1 76 13 view .LVU65
  77:quantum/color.c ****             break;
 211              		.loc 1 77 13 view .LVU66
  78:quantum/color.c ****         default:
 212              		.loc 1 78 13 view .LVU67
 213 00c0 1846     		mov	r0, r3
  76:quantum/color.c ****             rgb.b = v;
 214              		.loc 1 76 19 is_stmt 0 view .LVU68
 215 00c2 0B46     		mov	r3, r1
 216              	.LVL25:
  77:quantum/color.c ****             break;
 217              		.loc 1 77 19 view .LVU69
 218 00c4 1146     		mov	r1, r2
 219              	.LVL26:
  75:quantum/color.c ****             rgb.g = p;
 220              		.loc 1 75 19 view .LVU70
 221 00c6 0246     		mov	r2, r0
  78:quantum/color.c ****         default:
 222              		.loc 1 78 13 view .LVU71
 223 00c8 E9E7     		b	.L5
 224              	.LVL27:
 225              	.L4:
  80:quantum/color.c ****             rgb.g = p;
 226              		.loc 1 80 13 is_stmt 1 view .LVU72
  81:quantum/color.c ****             rgb.b = q;
 227              		.loc 1 81 13 view .LVU73
  82:quantum/color.c ****             break;
 228              		.loc 1 82 13 view .LVU74
  83:quantum/color.c ****     }
 229              		.loc 1 83 13 view .LVU75
  81:quantum/color.c ****             rgb.b = q;
 230              		.loc 1 81 19 is_stmt 0 view .LVU76
 231 00ca 0B46     		mov	r3, r1
 232              	.LVL28:
  82:quantum/color.c ****             break;
 233              		.loc 1 82 19 view .LVU77
 234 00cc 2946     		mov	r1, r5
 235              	.LVL29:
  83:quantum/color.c ****     }
 236              		.loc 1 83 13 view .LVU78
 237 00ce E6E7     		b	.L5
 238              	.L12:
 239              		.align	2
 240              	.L11:
 241 00d0 00000000 		.word	CIE1931_CURVE
 242              		.cfi_endproc
 243              	.LFE0:
 245              		.text
 246              	.Letext0:
 247              		.file 2 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/arm-none-eabi/include/machine/_default_t
 248              		.file 3 "/usr/local/Cellar/arm-gcc-bin@8/8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 249              		.file 4 "quantum/color.h"
 250              		.file 5 "quantum/led_tables.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 color.c
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccAa2YB9.s:18     .text.hsv_to_rgb:0000000000000000 $t
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccAa2YB9.s:26     .text.hsv_to_rgb:0000000000000000 hsv_to_rgb
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccAa2YB9.s:149    .text.hsv_to_rgb:0000000000000092 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccAa2YB9.s:241    .text.hsv_to_rgb:00000000000000d0 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccAa2YB9.s:156    .text.hsv_to_rgb:0000000000000099 $d
/var/folders/z4/wxlp73js78g02fcv9dbq6g8h0000gn/T//ccAa2YB9.s:156    .text.hsv_to_rgb:000000000000009a $t

UNDEFINED SYMBOLS
CIE1931_CURVE
